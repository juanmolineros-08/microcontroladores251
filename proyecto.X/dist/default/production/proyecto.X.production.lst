

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri May 09 16:51:04 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4550 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000FE0                     bsr             equ	4064
    86   000FE9                     fsr0            equ	4073
    87   000FEA                     fsr0h           equ	4074
    88   000FE9                     fsr0l           equ	4073
    89   000FE1                     fsr1            equ	4065
    90   000FE2                     fsr1h           equ	4066
    91   000FE1                     fsr1l           equ	4065
    92   000FD9                     fsr2            equ	4057
    93   000FDA                     fsr2h           equ	4058
    94   000FD9                     fsr2l           equ	4057
    95   000FEF                     indf0           equ	4079
    96   000FE7                     indf1           equ	4071
    97   000FDF                     indf2           equ	4063
    98   000FF2                     intcon          equ	4082
    99   000000                     nvmcon          equ	0
   100   000FF9                     pcl             equ	4089
   101   000FFA                     pclath          equ	4090
   102   000FFB                     pclatu          equ	4091
   103   000FEB                     plusw0          equ	4075
   104   000FE3                     plusw1          equ	4067
   105   000FDB                     plusw2          equ	4059
   106   000FED                     postdec0        equ	4077
   107   000FE5                     postdec1        equ	4069
   108   000FDD                     postdec2        equ	4061
   109   000FEE                     postinc0        equ	4078
   110   000FE6                     postinc1        equ	4070
   111   000FDE                     postinc2        equ	4062
   112   000FEC                     preinc0         equ	4076
   113   000FE4                     preinc1         equ	4068
   114   000FDC                     preinc2         equ	4060
   115   000FF3                     prod            equ	4083
   116   000FF4                     prodh           equ	4084
   117   000FF3                     prodl           equ	4083
   118   000FD8                     status          equ	4056
   119   000FF5                     tablat          equ	4085
   120   000FF6                     tblptr          equ	4086
   121   000FF7                     tblptrh         equ	4087
   122   000FF6                     tblptrl         equ	4086
   123   000FF8                     tblptru         equ	4088
   124   000FFD                     tosl            equ	4093
   125   000FE8                     wreg            equ	4072
   126   000F62                     SPPDATA         equ	3938	;# 
   127   000F63                     SPPCFG          equ	3939	;# 
   128   000F64                     SPPEPS          equ	3940	;# 
   129   000F65                     SPPCON          equ	3941	;# 
   130   000F66                     UFRM            equ	3942	;# 
   131   000F66                     UFRML           equ	3942	;# 
   132   000F67                     UFRMH           equ	3943	;# 
   133   000F68                     UIR             equ	3944	;# 
   134   000F69                     UIE             equ	3945	;# 
   135   000F6A                     UEIR            equ	3946	;# 
   136   000F6B                     UEIE            equ	3947	;# 
   137   000F6C                     USTAT           equ	3948	;# 
   138   000F6D                     UCON            equ	3949	;# 
   139   000F6E                     UADDR           equ	3950	;# 
   140   000F6F                     UCFG            equ	3951	;# 
   141   000F70                     UEP0            equ	3952	;# 
   142   000F71                     UEP1            equ	3953	;# 
   143   000F72                     UEP2            equ	3954	;# 
   144   000F73                     UEP3            equ	3955	;# 
   145   000F74                     UEP4            equ	3956	;# 
   146   000F75                     UEP5            equ	3957	;# 
   147   000F76                     UEP6            equ	3958	;# 
   148   000F77                     UEP7            equ	3959	;# 
   149   000F78                     UEP8            equ	3960	;# 
   150   000F79                     UEP9            equ	3961	;# 
   151   000F7A                     UEP10           equ	3962	;# 
   152   000F7B                     UEP11           equ	3963	;# 
   153   000F7C                     UEP12           equ	3964	;# 
   154   000F7D                     UEP13           equ	3965	;# 
   155   000F7E                     UEP14           equ	3966	;# 
   156   000F7F                     UEP15           equ	3967	;# 
   157   000F80                     PORTA           equ	3968	;# 
   158   000F81                     PORTB           equ	3969	;# 
   159   000F82                     PORTC           equ	3970	;# 
   160   000F83                     PORTD           equ	3971	;# 
   161   000F84                     PORTE           equ	3972	;# 
   162   000F89                     LATA            equ	3977	;# 
   163   000F8A                     LATB            equ	3978	;# 
   164   000F8B                     LATC            equ	3979	;# 
   165   000F8C                     LATD            equ	3980	;# 
   166   000F8D                     LATE            equ	3981	;# 
   167   000F92                     TRISA           equ	3986	;# 
   168   000F92                     DDRA            equ	3986	;# 
   169   000F93                     TRISB           equ	3987	;# 
   170   000F93                     DDRB            equ	3987	;# 
   171   000F94                     TRISC           equ	3988	;# 
   172   000F94                     DDRC            equ	3988	;# 
   173   000F95                     TRISD           equ	3989	;# 
   174   000F95                     DDRD            equ	3989	;# 
   175   000F96                     TRISE           equ	3990	;# 
   176   000F96                     DDRE            equ	3990	;# 
   177   000F9B                     OSCTUNE         equ	3995	;# 
   178   000F9D                     PIE1            equ	3997	;# 
   179   000F9E                     PIR1            equ	3998	;# 
   180   000F9F                     IPR1            equ	3999	;# 
   181   000FA0                     PIE2            equ	4000	;# 
   182   000FA1                     PIR2            equ	4001	;# 
   183   000FA2                     IPR2            equ	4002	;# 
   184   000FA6                     EECON1          equ	4006	;# 
   185   000FA7                     EECON2          equ	4007	;# 
   186   000FA8                     EEDATA          equ	4008	;# 
   187   000FA9                     EEADR           equ	4009	;# 
   188   000FAB                     RCSTA           equ	4011	;# 
   189   000FAB                     RCSTA1          equ	4011	;# 
   190   000FAC                     TXSTA           equ	4012	;# 
   191   000FAC                     TXSTA1          equ	4012	;# 
   192   000FAD                     TXREG           equ	4013	;# 
   193   000FAD                     TXREG1          equ	4013	;# 
   194   000FAE                     RCREG           equ	4014	;# 
   195   000FAE                     RCREG1          equ	4014	;# 
   196   000FAF                     SPBRG           equ	4015	;# 
   197   000FAF                     SPBRG1          equ	4015	;# 
   198   000FB0                     SPBRGH          equ	4016	;# 
   199   000FB1                     T3CON           equ	4017	;# 
   200   000FB2                     TMR3            equ	4018	;# 
   201   000FB2                     TMR3L           equ	4018	;# 
   202   000FB3                     TMR3H           equ	4019	;# 
   203   000FB4                     CMCON           equ	4020	;# 
   204   000FB5                     CVRCON          equ	4021	;# 
   205   000FB6                     ECCP1AS         equ	4022	;# 
   206   000FB6                     CCP1AS          equ	4022	;# 
   207   000FB7                     ECCP1DEL        equ	4023	;# 
   208   000FB7                     CCP1DEL         equ	4023	;# 
   209   000FB8                     BAUDCON         equ	4024	;# 
   210   000FB8                     BAUDCTL         equ	4024	;# 
   211   000FBA                     CCP2CON         equ	4026	;# 
   212   000FBB                     CCPR2           equ	4027	;# 
   213   000FBB                     CCPR2L          equ	4027	;# 
   214   000FBC                     CCPR2H          equ	4028	;# 
   215   000FBD                     CCP1CON         equ	4029	;# 
   216   000FBD                     ECCP1CON        equ	4029	;# 
   217   000FBE                     CCPR1           equ	4030	;# 
   218   000FBE                     CCPR1L          equ	4030	;# 
   219   000FBF                     CCPR1H          equ	4031	;# 
   220   000FC0                     ADCON2          equ	4032	;# 
   221   000FC1                     ADCON1          equ	4033	;# 
   222   000FC2                     ADCON0          equ	4034	;# 
   223   000FC3                     ADRES           equ	4035	;# 
   224   000FC3                     ADRESL          equ	4035	;# 
   225   000FC4                     ADRESH          equ	4036	;# 
   226   000FC5                     SSPCON2         equ	4037	;# 
   227   000FC6                     SSPCON1         equ	4038	;# 
   228   000FC7                     SSPSTAT         equ	4039	;# 
   229   000FC8                     SSPADD          equ	4040	;# 
   230   000FC9                     SSPBUF          equ	4041	;# 
   231   000FCA                     T2CON           equ	4042	;# 
   232   000FCB                     PR2             equ	4043	;# 
   233   000FCB                     MEMCON          equ	4043	;# 
   234   000FCC                     TMR2            equ	4044	;# 
   235   000FCD                     T1CON           equ	4045	;# 
   236   000FCE                     TMR1            equ	4046	;# 
   237   000FCE                     TMR1L           equ	4046	;# 
   238   000FCF                     TMR1H           equ	4047	;# 
   239   000FD0                     RCON            equ	4048	;# 
   240   000FD1                     WDTCON          equ	4049	;# 
   241   000FD2                     HLVDCON         equ	4050	;# 
   242   000FD2                     LVDCON          equ	4050	;# 
   243   000FD3                     OSCCON          equ	4051	;# 
   244   000FD5                     T0CON           equ	4053	;# 
   245   000FD6                     TMR0            equ	4054	;# 
   246   000FD6                     TMR0L           equ	4054	;# 
   247   000FD7                     TMR0H           equ	4055	;# 
   248   000FD8                     STATUS          equ	4056	;# 
   249   000FD9                     FSR2            equ	4057	;# 
   250   000FD9                     FSR2L           equ	4057	;# 
   251   000FDA                     FSR2H           equ	4058	;# 
   252   000FDB                     PLUSW2          equ	4059	;# 
   253   000FDC                     PREINC2         equ	4060	;# 
   254   000FDD                     POSTDEC2        equ	4061	;# 
   255   000FDE                     POSTINC2        equ	4062	;# 
   256   000FDF                     INDF2           equ	4063	;# 
   257   000FE0                     BSR             equ	4064	;# 
   258   000FE1                     FSR1            equ	4065	;# 
   259   000FE1                     FSR1L           equ	4065	;# 
   260   000FE2                     FSR1H           equ	4066	;# 
   261   000FE3                     PLUSW1          equ	4067	;# 
   262   000FE4                     PREINC1         equ	4068	;# 
   263   000FE5                     POSTDEC1        equ	4069	;# 
   264   000FE6                     POSTINC1        equ	4070	;# 
   265   000FE7                     INDF1           equ	4071	;# 
   266   000FE8                     WREG            equ	4072	;# 
   267   000FE9                     FSR0            equ	4073	;# 
   268   000FE9                     FSR0L           equ	4073	;# 
   269   000FEA                     FSR0H           equ	4074	;# 
   270   000FEB                     PLUSW0          equ	4075	;# 
   271   000FEC                     PREINC0         equ	4076	;# 
   272   000FED                     POSTDEC0        equ	4077	;# 
   273   000FEE                     POSTINC0        equ	4078	;# 
   274   000FEF                     INDF0           equ	4079	;# 
   275   000FF0                     INTCON3         equ	4080	;# 
   276   000FF1                     INTCON2         equ	4081	;# 
   277   000FF2                     INTCON          equ	4082	;# 
   278   000FF3                     PROD            equ	4083	;# 
   279   000FF3                     PRODL           equ	4083	;# 
   280   000FF4                     PRODH           equ	4084	;# 
   281   000FF5                     TABLAT          equ	4085	;# 
   282   000FF6                     TBLPTR          equ	4086	;# 
   283   000FF6                     TBLPTRL         equ	4086	;# 
   284   000FF7                     TBLPTRH         equ	4087	;# 
   285   000FF8                     TBLPTRU         equ	4088	;# 
   286   000FF9                     PCLAT           equ	4089	;# 
   287   000FF9                     PC              equ	4089	;# 
   288   000FF9                     PCL             equ	4089	;# 
   289   000FFA                     PCLATH          equ	4090	;# 
   290   000FFB                     PCLATU          equ	4091	;# 
   291   000FFC                     STKPTR          equ	4092	;# 
   292   000FFD                     TOS             equ	4093	;# 
   293   000FFD                     TOSL            equ	4093	;# 
   294   000FFE                     TOSH            equ	4094	;# 
   295   000FFF                     TOSU            equ	4095	;# 
   296   000F62                     SPPDATA         equ	3938	;# 
   297   000F63                     SPPCFG          equ	3939	;# 
   298   000F64                     SPPEPS          equ	3940	;# 
   299   000F65                     SPPCON          equ	3941	;# 
   300   000F66                     UFRM            equ	3942	;# 
   301   000F66                     UFRML           equ	3942	;# 
   302   000F67                     UFRMH           equ	3943	;# 
   303   000F68                     UIR             equ	3944	;# 
   304   000F69                     UIE             equ	3945	;# 
   305   000F6A                     UEIR            equ	3946	;# 
   306   000F6B                     UEIE            equ	3947	;# 
   307   000F6C                     USTAT           equ	3948	;# 
   308   000F6D                     UCON            equ	3949	;# 
   309   000F6E                     UADDR           equ	3950	;# 
   310   000F6F                     UCFG            equ	3951	;# 
   311   000F70                     UEP0            equ	3952	;# 
   312   000F71                     UEP1            equ	3953	;# 
   313   000F72                     UEP2            equ	3954	;# 
   314   000F73                     UEP3            equ	3955	;# 
   315   000F74                     UEP4            equ	3956	;# 
   316   000F75                     UEP5            equ	3957	;# 
   317   000F76                     UEP6            equ	3958	;# 
   318   000F77                     UEP7            equ	3959	;# 
   319   000F78                     UEP8            equ	3960	;# 
   320   000F79                     UEP9            equ	3961	;# 
   321   000F7A                     UEP10           equ	3962	;# 
   322   000F7B                     UEP11           equ	3963	;# 
   323   000F7C                     UEP12           equ	3964	;# 
   324   000F7D                     UEP13           equ	3965	;# 
   325   000F7E                     UEP14           equ	3966	;# 
   326   000F7F                     UEP15           equ	3967	;# 
   327   000F80                     PORTA           equ	3968	;# 
   328   000F81                     PORTB           equ	3969	;# 
   329   000F82                     PORTC           equ	3970	;# 
   330   000F83                     PORTD           equ	3971	;# 
   331   000F84                     PORTE           equ	3972	;# 
   332   000F89                     LATA            equ	3977	;# 
   333   000F8A                     LATB            equ	3978	;# 
   334   000F8B                     LATC            equ	3979	;# 
   335   000F8C                     LATD            equ	3980	;# 
   336   000F8D                     LATE            equ	3981	;# 
   337   000F92                     TRISA           equ	3986	;# 
   338   000F92                     DDRA            equ	3986	;# 
   339   000F93                     TRISB           equ	3987	;# 
   340   000F93                     DDRB            equ	3987	;# 
   341   000F94                     TRISC           equ	3988	;# 
   342   000F94                     DDRC            equ	3988	;# 
   343   000F95                     TRISD           equ	3989	;# 
   344   000F95                     DDRD            equ	3989	;# 
   345   000F96                     TRISE           equ	3990	;# 
   346   000F96                     DDRE            equ	3990	;# 
   347   000F9B                     OSCTUNE         equ	3995	;# 
   348   000F9D                     PIE1            equ	3997	;# 
   349   000F9E                     PIR1            equ	3998	;# 
   350   000F9F                     IPR1            equ	3999	;# 
   351   000FA0                     PIE2            equ	4000	;# 
   352   000FA1                     PIR2            equ	4001	;# 
   353   000FA2                     IPR2            equ	4002	;# 
   354   000FA6                     EECON1          equ	4006	;# 
   355   000FA7                     EECON2          equ	4007	;# 
   356   000FA8                     EEDATA          equ	4008	;# 
   357   000FA9                     EEADR           equ	4009	;# 
   358   000FAB                     RCSTA           equ	4011	;# 
   359   000FAB                     RCSTA1          equ	4011	;# 
   360   000FAC                     TXSTA           equ	4012	;# 
   361   000FAC                     TXSTA1          equ	4012	;# 
   362   000FAD                     TXREG           equ	4013	;# 
   363   000FAD                     TXREG1          equ	4013	;# 
   364   000FAE                     RCREG           equ	4014	;# 
   365   000FAE                     RCREG1          equ	4014	;# 
   366   000FAF                     SPBRG           equ	4015	;# 
   367   000FAF                     SPBRG1          equ	4015	;# 
   368   000FB0                     SPBRGH          equ	4016	;# 
   369   000FB1                     T3CON           equ	4017	;# 
   370   000FB2                     TMR3            equ	4018	;# 
   371   000FB2                     TMR3L           equ	4018	;# 
   372   000FB3                     TMR3H           equ	4019	;# 
   373   000FB4                     CMCON           equ	4020	;# 
   374   000FB5                     CVRCON          equ	4021	;# 
   375   000FB6                     ECCP1AS         equ	4022	;# 
   376   000FB6                     CCP1AS          equ	4022	;# 
   377   000FB7                     ECCP1DEL        equ	4023	;# 
   378   000FB7                     CCP1DEL         equ	4023	;# 
   379   000FB8                     BAUDCON         equ	4024	;# 
   380   000FB8                     BAUDCTL         equ	4024	;# 
   381   000FBA                     CCP2CON         equ	4026	;# 
   382   000FBB                     CCPR2           equ	4027	;# 
   383   000FBB                     CCPR2L          equ	4027	;# 
   384   000FBC                     CCPR2H          equ	4028	;# 
   385   000FBD                     CCP1CON         equ	4029	;# 
   386   000FBD                     ECCP1CON        equ	4029	;# 
   387   000FBE                     CCPR1           equ	4030	;# 
   388   000FBE                     CCPR1L          equ	4030	;# 
   389   000FBF                     CCPR1H          equ	4031	;# 
   390   000FC0                     ADCON2          equ	4032	;# 
   391   000FC1                     ADCON1          equ	4033	;# 
   392   000FC2                     ADCON0          equ	4034	;# 
   393   000FC3                     ADRES           equ	4035	;# 
   394   000FC3                     ADRESL          equ	4035	;# 
   395   000FC4                     ADRESH          equ	4036	;# 
   396   000FC5                     SSPCON2         equ	4037	;# 
   397   000FC6                     SSPCON1         equ	4038	;# 
   398   000FC7                     SSPSTAT         equ	4039	;# 
   399   000FC8                     SSPADD          equ	4040	;# 
   400   000FC9                     SSPBUF          equ	4041	;# 
   401   000FCA                     T2CON           equ	4042	;# 
   402   000FCB                     PR2             equ	4043	;# 
   403   000FCB                     MEMCON          equ	4043	;# 
   404   000FCC                     TMR2            equ	4044	;# 
   405   000FCD                     T1CON           equ	4045	;# 
   406   000FCE                     TMR1            equ	4046	;# 
   407   000FCE                     TMR1L           equ	4046	;# 
   408   000FCF                     TMR1H           equ	4047	;# 
   409   000FD0                     RCON            equ	4048	;# 
   410   000FD1                     WDTCON          equ	4049	;# 
   411   000FD2                     HLVDCON         equ	4050	;# 
   412   000FD2                     LVDCON          equ	4050	;# 
   413   000FD3                     OSCCON          equ	4051	;# 
   414   000FD5                     T0CON           equ	4053	;# 
   415   000FD6                     TMR0            equ	4054	;# 
   416   000FD6                     TMR0L           equ	4054	;# 
   417   000FD7                     TMR0H           equ	4055	;# 
   418   000FD8                     STATUS          equ	4056	;# 
   419   000FD9                     FSR2            equ	4057	;# 
   420   000FD9                     FSR2L           equ	4057	;# 
   421   000FDA                     FSR2H           equ	4058	;# 
   422   000FDB                     PLUSW2          equ	4059	;# 
   423   000FDC                     PREINC2         equ	4060	;# 
   424   000FDD                     POSTDEC2        equ	4061	;# 
   425   000FDE                     POSTINC2        equ	4062	;# 
   426   000FDF                     INDF2           equ	4063	;# 
   427   000FE0                     BSR             equ	4064	;# 
   428   000FE1                     FSR1            equ	4065	;# 
   429   000FE1                     FSR1L           equ	4065	;# 
   430   000FE2                     FSR1H           equ	4066	;# 
   431   000FE3                     PLUSW1          equ	4067	;# 
   432   000FE4                     PREINC1         equ	4068	;# 
   433   000FE5                     POSTDEC1        equ	4069	;# 
   434   000FE6                     POSTINC1        equ	4070	;# 
   435   000FE7                     INDF1           equ	4071	;# 
   436   000FE8                     WREG            equ	4072	;# 
   437   000FE9                     FSR0            equ	4073	;# 
   438   000FE9                     FSR0L           equ	4073	;# 
   439   000FEA                     FSR0H           equ	4074	;# 
   440   000FEB                     PLUSW0          equ	4075	;# 
   441   000FEC                     PREINC0         equ	4076	;# 
   442   000FED                     POSTDEC0        equ	4077	;# 
   443   000FEE                     POSTINC0        equ	4078	;# 
   444   000FEF                     INDF0           equ	4079	;# 
   445   000FF0                     INTCON3         equ	4080	;# 
   446   000FF1                     INTCON2         equ	4081	;# 
   447   000FF2                     INTCON          equ	4082	;# 
   448   000FF3                     PROD            equ	4083	;# 
   449   000FF3                     PRODL           equ	4083	;# 
   450   000FF4                     PRODH           equ	4084	;# 
   451   000FF5                     TABLAT          equ	4085	;# 
   452   000FF6                     TBLPTR          equ	4086	;# 
   453   000FF6                     TBLPTRL         equ	4086	;# 
   454   000FF7                     TBLPTRH         equ	4087	;# 
   455   000FF8                     TBLPTRU         equ	4088	;# 
   456   000FF9                     PCLAT           equ	4089	;# 
   457   000FF9                     PC              equ	4089	;# 
   458   000FF9                     PCL             equ	4089	;# 
   459   000FFA                     PCLATH          equ	4090	;# 
   460   000FFB                     PCLATU          equ	4091	;# 
   461   000FFC                     STKPTR          equ	4092	;# 
   462   000FFD                     TOS             equ	4093	;# 
   463   000FFD                     TOSL            equ	4093	;# 
   464   000FFE                     TOSH            equ	4094	;# 
   465   000FFF                     TOSU            equ	4095	;# 
   466   000F62                     SPPDATA         equ	3938	;# 
   467   000F63                     SPPCFG          equ	3939	;# 
   468   000F64                     SPPEPS          equ	3940	;# 
   469   000F65                     SPPCON          equ	3941	;# 
   470   000F66                     UFRM            equ	3942	;# 
   471   000F66                     UFRML           equ	3942	;# 
   472   000F67                     UFRMH           equ	3943	;# 
   473   000F68                     UIR             equ	3944	;# 
   474   000F69                     UIE             equ	3945	;# 
   475   000F6A                     UEIR            equ	3946	;# 
   476   000F6B                     UEIE            equ	3947	;# 
   477   000F6C                     USTAT           equ	3948	;# 
   478   000F6D                     UCON            equ	3949	;# 
   479   000F6E                     UADDR           equ	3950	;# 
   480   000F6F                     UCFG            equ	3951	;# 
   481   000F70                     UEP0            equ	3952	;# 
   482   000F71                     UEP1            equ	3953	;# 
   483   000F72                     UEP2            equ	3954	;# 
   484   000F73                     UEP3            equ	3955	;# 
   485   000F74                     UEP4            equ	3956	;# 
   486   000F75                     UEP5            equ	3957	;# 
   487   000F76                     UEP6            equ	3958	;# 
   488   000F77                     UEP7            equ	3959	;# 
   489   000F78                     UEP8            equ	3960	;# 
   490   000F79                     UEP9            equ	3961	;# 
   491   000F7A                     UEP10           equ	3962	;# 
   492   000F7B                     UEP11           equ	3963	;# 
   493   000F7C                     UEP12           equ	3964	;# 
   494   000F7D                     UEP13           equ	3965	;# 
   495   000F7E                     UEP14           equ	3966	;# 
   496   000F7F                     UEP15           equ	3967	;# 
   497   000F80                     PORTA           equ	3968	;# 
   498   000F81                     PORTB           equ	3969	;# 
   499   000F82                     PORTC           equ	3970	;# 
   500   000F83                     PORTD           equ	3971	;# 
   501   000F84                     PORTE           equ	3972	;# 
   502   000F89                     LATA            equ	3977	;# 
   503   000F8A                     LATB            equ	3978	;# 
   504   000F8B                     LATC            equ	3979	;# 
   505   000F8C                     LATD            equ	3980	;# 
   506   000F8D                     LATE            equ	3981	;# 
   507   000F92                     TRISA           equ	3986	;# 
   508   000F92                     DDRA            equ	3986	;# 
   509   000F93                     TRISB           equ	3987	;# 
   510   000F93                     DDRB            equ	3987	;# 
   511   000F94                     TRISC           equ	3988	;# 
   512   000F94                     DDRC            equ	3988	;# 
   513   000F95                     TRISD           equ	3989	;# 
   514   000F95                     DDRD            equ	3989	;# 
   515   000F96                     TRISE           equ	3990	;# 
   516   000F96                     DDRE            equ	3990	;# 
   517   000F9B                     OSCTUNE         equ	3995	;# 
   518   000F9D                     PIE1            equ	3997	;# 
   519   000F9E                     PIR1            equ	3998	;# 
   520   000F9F                     IPR1            equ	3999	;# 
   521   000FA0                     PIE2            equ	4000	;# 
   522   000FA1                     PIR2            equ	4001	;# 
   523   000FA2                     IPR2            equ	4002	;# 
   524   000FA6                     EECON1          equ	4006	;# 
   525   000FA7                     EECON2          equ	4007	;# 
   526   000FA8                     EEDATA          equ	4008	;# 
   527   000FA9                     EEADR           equ	4009	;# 
   528   000FAB                     RCSTA           equ	4011	;# 
   529   000FAB                     RCSTA1          equ	4011	;# 
   530   000FAC                     TXSTA           equ	4012	;# 
   531   000FAC                     TXSTA1          equ	4012	;# 
   532   000FAD                     TXREG           equ	4013	;# 
   533   000FAD                     TXREG1          equ	4013	;# 
   534   000FAE                     RCREG           equ	4014	;# 
   535   000FAE                     RCREG1          equ	4014	;# 
   536   000FAF                     SPBRG           equ	4015	;# 
   537   000FAF                     SPBRG1          equ	4015	;# 
   538   000FB0                     SPBRGH          equ	4016	;# 
   539   000FB1                     T3CON           equ	4017	;# 
   540   000FB2                     TMR3            equ	4018	;# 
   541   000FB2                     TMR3L           equ	4018	;# 
   542   000FB3                     TMR3H           equ	4019	;# 
   543   000FB4                     CMCON           equ	4020	;# 
   544   000FB5                     CVRCON          equ	4021	;# 
   545   000FB6                     ECCP1AS         equ	4022	;# 
   546   000FB6                     CCP1AS          equ	4022	;# 
   547   000FB7                     ECCP1DEL        equ	4023	;# 
   548   000FB7                     CCP1DEL         equ	4023	;# 
   549   000FB8                     BAUDCON         equ	4024	;# 
   550   000FB8                     BAUDCTL         equ	4024	;# 
   551   000FBA                     CCP2CON         equ	4026	;# 
   552   000FBB                     CCPR2           equ	4027	;# 
   553   000FBB                     CCPR2L          equ	4027	;# 
   554   000FBC                     CCPR2H          equ	4028	;# 
   555   000FBD                     CCP1CON         equ	4029	;# 
   556   000FBD                     ECCP1CON        equ	4029	;# 
   557   000FBE                     CCPR1           equ	4030	;# 
   558   000FBE                     CCPR1L          equ	4030	;# 
   559   000FBF                     CCPR1H          equ	4031	;# 
   560   000FC0                     ADCON2          equ	4032	;# 
   561   000FC1                     ADCON1          equ	4033	;# 
   562   000FC2                     ADCON0          equ	4034	;# 
   563   000FC3                     ADRES           equ	4035	;# 
   564   000FC3                     ADRESL          equ	4035	;# 
   565   000FC4                     ADRESH          equ	4036	;# 
   566   000FC5                     SSPCON2         equ	4037	;# 
   567   000FC6                     SSPCON1         equ	4038	;# 
   568   000FC7                     SSPSTAT         equ	4039	;# 
   569   000FC8                     SSPADD          equ	4040	;# 
   570   000FC9                     SSPBUF          equ	4041	;# 
   571   000FCA                     T2CON           equ	4042	;# 
   572   000FCB                     PR2             equ	4043	;# 
   573   000FCB                     MEMCON          equ	4043	;# 
   574   000FCC                     TMR2            equ	4044	;# 
   575   000FCD                     T1CON           equ	4045	;# 
   576   000FCE                     TMR1            equ	4046	;# 
   577   000FCE                     TMR1L           equ	4046	;# 
   578   000FCF                     TMR1H           equ	4047	;# 
   579   000FD0                     RCON            equ	4048	;# 
   580   000FD1                     WDTCON          equ	4049	;# 
   581   000FD2                     HLVDCON         equ	4050	;# 
   582   000FD2                     LVDCON          equ	4050	;# 
   583   000FD3                     OSCCON          equ	4051	;# 
   584   000FD5                     T0CON           equ	4053	;# 
   585   000FD6                     TMR0            equ	4054	;# 
   586   000FD6                     TMR0L           equ	4054	;# 
   587   000FD7                     TMR0H           equ	4055	;# 
   588   000FD8                     STATUS          equ	4056	;# 
   589   000FD9                     FSR2            equ	4057	;# 
   590   000FD9                     FSR2L           equ	4057	;# 
   591   000FDA                     FSR2H           equ	4058	;# 
   592   000FDB                     PLUSW2          equ	4059	;# 
   593   000FDC                     PREINC2         equ	4060	;# 
   594   000FDD                     POSTDEC2        equ	4061	;# 
   595   000FDE                     POSTINC2        equ	4062	;# 
   596   000FDF                     INDF2           equ	4063	;# 
   597   000FE0                     BSR             equ	4064	;# 
   598   000FE1                     FSR1            equ	4065	;# 
   599   000FE1                     FSR1L           equ	4065	;# 
   600   000FE2                     FSR1H           equ	4066	;# 
   601   000FE3                     PLUSW1          equ	4067	;# 
   602   000FE4                     PREINC1         equ	4068	;# 
   603   000FE5                     POSTDEC1        equ	4069	;# 
   604   000FE6                     POSTINC1        equ	4070	;# 
   605   000FE7                     INDF1           equ	4071	;# 
   606   000FE8                     WREG            equ	4072	;# 
   607   000FE9                     FSR0            equ	4073	;# 
   608   000FE9                     FSR0L           equ	4073	;# 
   609   000FEA                     FSR0H           equ	4074	;# 
   610   000FEB                     PLUSW0          equ	4075	;# 
   611   000FEC                     PREINC0         equ	4076	;# 
   612   000FED                     POSTDEC0        equ	4077	;# 
   613   000FEE                     POSTINC0        equ	4078	;# 
   614   000FEF                     INDF0           equ	4079	;# 
   615   000FF0                     INTCON3         equ	4080	;# 
   616   000FF1                     INTCON2         equ	4081	;# 
   617   000FF2                     INTCON          equ	4082	;# 
   618   000FF3                     PROD            equ	4083	;# 
   619   000FF3                     PRODL           equ	4083	;# 
   620   000FF4                     PRODH           equ	4084	;# 
   621   000FF5                     TABLAT          equ	4085	;# 
   622   000FF6                     TBLPTR          equ	4086	;# 
   623   000FF6                     TBLPTRL         equ	4086	;# 
   624   000FF7                     TBLPTRH         equ	4087	;# 
   625   000FF8                     TBLPTRU         equ	4088	;# 
   626   000FF9                     PCLAT           equ	4089	;# 
   627   000FF9                     PC              equ	4089	;# 
   628   000FF9                     PCL             equ	4089	;# 
   629   000FFA                     PCLATH          equ	4090	;# 
   630   000FFB                     PCLATU          equ	4091	;# 
   631   000FFC                     STKPTR          equ	4092	;# 
   632   000FFD                     TOS             equ	4093	;# 
   633   000FFD                     TOSL            equ	4093	;# 
   634   000FFE                     TOSH            equ	4094	;# 
   635   000FFF                     TOSU            equ	4095	;# 
   636   000F62                     SPPDATA         equ	3938	;# 
   637   000F63                     SPPCFG          equ	3939	;# 
   638   000F64                     SPPEPS          equ	3940	;# 
   639   000F65                     SPPCON          equ	3941	;# 
   640   000F66                     UFRM            equ	3942	;# 
   641   000F66                     UFRML           equ	3942	;# 
   642   000F67                     UFRMH           equ	3943	;# 
   643   000F68                     UIR             equ	3944	;# 
   644   000F69                     UIE             equ	3945	;# 
   645   000F6A                     UEIR            equ	3946	;# 
   646   000F6B                     UEIE            equ	3947	;# 
   647   000F6C                     USTAT           equ	3948	;# 
   648   000F6D                     UCON            equ	3949	;# 
   649   000F6E                     UADDR           equ	3950	;# 
   650   000F6F                     UCFG            equ	3951	;# 
   651   000F70                     UEP0            equ	3952	;# 
   652   000F71                     UEP1            equ	3953	;# 
   653   000F72                     UEP2            equ	3954	;# 
   654   000F73                     UEP3            equ	3955	;# 
   655   000F74                     UEP4            equ	3956	;# 
   656   000F75                     UEP5            equ	3957	;# 
   657   000F76                     UEP6            equ	3958	;# 
   658   000F77                     UEP7            equ	3959	;# 
   659   000F78                     UEP8            equ	3960	;# 
   660   000F79                     UEP9            equ	3961	;# 
   661   000F7A                     UEP10           equ	3962	;# 
   662   000F7B                     UEP11           equ	3963	;# 
   663   000F7C                     UEP12           equ	3964	;# 
   664   000F7D                     UEP13           equ	3965	;# 
   665   000F7E                     UEP14           equ	3966	;# 
   666   000F7F                     UEP15           equ	3967	;# 
   667   000F80                     PORTA           equ	3968	;# 
   668   000F81                     PORTB           equ	3969	;# 
   669   000F82                     PORTC           equ	3970	;# 
   670   000F83                     PORTD           equ	3971	;# 
   671   000F84                     PORTE           equ	3972	;# 
   672   000F89                     LATA            equ	3977	;# 
   673   000F8A                     LATB            equ	3978	;# 
   674   000F8B                     LATC            equ	3979	;# 
   675   000F8C                     LATD            equ	3980	;# 
   676   000F8D                     LATE            equ	3981	;# 
   677   000F92                     TRISA           equ	3986	;# 
   678   000F92                     DDRA            equ	3986	;# 
   679   000F93                     TRISB           equ	3987	;# 
   680   000F93                     DDRB            equ	3987	;# 
   681   000F94                     TRISC           equ	3988	;# 
   682   000F94                     DDRC            equ	3988	;# 
   683   000F95                     TRISD           equ	3989	;# 
   684   000F95                     DDRD            equ	3989	;# 
   685   000F96                     TRISE           equ	3990	;# 
   686   000F96                     DDRE            equ	3990	;# 
   687   000F9B                     OSCTUNE         equ	3995	;# 
   688   000F9D                     PIE1            equ	3997	;# 
   689   000F9E                     PIR1            equ	3998	;# 
   690   000F9F                     IPR1            equ	3999	;# 
   691   000FA0                     PIE2            equ	4000	;# 
   692   000FA1                     PIR2            equ	4001	;# 
   693   000FA2                     IPR2            equ	4002	;# 
   694   000FA6                     EECON1          equ	4006	;# 
   695   000FA7                     EECON2          equ	4007	;# 
   696   000FA8                     EEDATA          equ	4008	;# 
   697   000FA9                     EEADR           equ	4009	;# 
   698   000FAB                     RCSTA           equ	4011	;# 
   699   000FAB                     RCSTA1          equ	4011	;# 
   700   000FAC                     TXSTA           equ	4012	;# 
   701   000FAC                     TXSTA1          equ	4012	;# 
   702   000FAD                     TXREG           equ	4013	;# 
   703   000FAD                     TXREG1          equ	4013	;# 
   704   000FAE                     RCREG           equ	4014	;# 
   705   000FAE                     RCREG1          equ	4014	;# 
   706   000FAF                     SPBRG           equ	4015	;# 
   707   000FAF                     SPBRG1          equ	4015	;# 
   708   000FB0                     SPBRGH          equ	4016	;# 
   709   000FB1                     T3CON           equ	4017	;# 
   710   000FB2                     TMR3            equ	4018	;# 
   711   000FB2                     TMR3L           equ	4018	;# 
   712   000FB3                     TMR3H           equ	4019	;# 
   713   000FB4                     CMCON           equ	4020	;# 
   714   000FB5                     CVRCON          equ	4021	;# 
   715   000FB6                     ECCP1AS         equ	4022	;# 
   716   000FB6                     CCP1AS          equ	4022	;# 
   717   000FB7                     ECCP1DEL        equ	4023	;# 
   718   000FB7                     CCP1DEL         equ	4023	;# 
   719   000FB8                     BAUDCON         equ	4024	;# 
   720   000FB8                     BAUDCTL         equ	4024	;# 
   721   000FBA                     CCP2CON         equ	4026	;# 
   722   000FBB                     CCPR2           equ	4027	;# 
   723   000FBB                     CCPR2L          equ	4027	;# 
   724   000FBC                     CCPR2H          equ	4028	;# 
   725   000FBD                     CCP1CON         equ	4029	;# 
   726   000FBD                     ECCP1CON        equ	4029	;# 
   727   000FBE                     CCPR1           equ	4030	;# 
   728   000FBE                     CCPR1L          equ	4030	;# 
   729   000FBF                     CCPR1H          equ	4031	;# 
   730   000FC0                     ADCON2          equ	4032	;# 
   731   000FC1                     ADCON1          equ	4033	;# 
   732   000FC2                     ADCON0          equ	4034	;# 
   733   000FC3                     ADRES           equ	4035	;# 
   734   000FC3                     ADRESL          equ	4035	;# 
   735   000FC4                     ADRESH          equ	4036	;# 
   736   000FC5                     SSPCON2         equ	4037	;# 
   737   000FC6                     SSPCON1         equ	4038	;# 
   738   000FC7                     SSPSTAT         equ	4039	;# 
   739   000FC8                     SSPADD          equ	4040	;# 
   740   000FC9                     SSPBUF          equ	4041	;# 
   741   000FCA                     T2CON           equ	4042	;# 
   742   000FCB                     PR2             equ	4043	;# 
   743   000FCB                     MEMCON          equ	4043	;# 
   744   000FCC                     TMR2            equ	4044	;# 
   745   000FCD                     T1CON           equ	4045	;# 
   746   000FCE                     TMR1            equ	4046	;# 
   747   000FCE                     TMR1L           equ	4046	;# 
   748   000FCF                     TMR1H           equ	4047	;# 
   749   000FD0                     RCON            equ	4048	;# 
   750   000FD1                     WDTCON          equ	4049	;# 
   751   000FD2                     HLVDCON         equ	4050	;# 
   752   000FD2                     LVDCON          equ	4050	;# 
   753   000FD3                     OSCCON          equ	4051	;# 
   754   000FD5                     T0CON           equ	4053	;# 
   755   000FD6                     TMR0            equ	4054	;# 
   756   000FD6                     TMR0L           equ	4054	;# 
   757   000FD7                     TMR0H           equ	4055	;# 
   758   000FD8                     STATUS          equ	4056	;# 
   759   000FD9                     FSR2            equ	4057	;# 
   760   000FD9                     FSR2L           equ	4057	;# 
   761   000FDA                     FSR2H           equ	4058	;# 
   762   000FDB                     PLUSW2          equ	4059	;# 
   763   000FDC                     PREINC2         equ	4060	;# 
   764   000FDD                     POSTDEC2        equ	4061	;# 
   765   000FDE                     POSTINC2        equ	4062	;# 
   766   000FDF                     INDF2           equ	4063	;# 
   767   000FE0                     BSR             equ	4064	;# 
   768   000FE1                     FSR1            equ	4065	;# 
   769   000FE1                     FSR1L           equ	4065	;# 
   770   000FE2                     FSR1H           equ	4066	;# 
   771   000FE3                     PLUSW1          equ	4067	;# 
   772   000FE4                     PREINC1         equ	4068	;# 
   773   000FE5                     POSTDEC1        equ	4069	;# 
   774   000FE6                     POSTINC1        equ	4070	;# 
   775   000FE7                     INDF1           equ	4071	;# 
   776   000FE8                     WREG            equ	4072	;# 
   777   000FE9                     FSR0            equ	4073	;# 
   778   000FE9                     FSR0L           equ	4073	;# 
   779   000FEA                     FSR0H           equ	4074	;# 
   780   000FEB                     PLUSW0          equ	4075	;# 
   781   000FEC                     PREINC0         equ	4076	;# 
   782   000FED                     POSTDEC0        equ	4077	;# 
   783   000FEE                     POSTINC0        equ	4078	;# 
   784   000FEF                     INDF0           equ	4079	;# 
   785   000FF0                     INTCON3         equ	4080	;# 
   786   000FF1                     INTCON2         equ	4081	;# 
   787   000FF2                     INTCON          equ	4082	;# 
   788   000FF3                     PROD            equ	4083	;# 
   789   000FF3                     PRODL           equ	4083	;# 
   790   000FF4                     PRODH           equ	4084	;# 
   791   000FF5                     TABLAT          equ	4085	;# 
   792   000FF6                     TBLPTR          equ	4086	;# 
   793   000FF6                     TBLPTRL         equ	4086	;# 
   794   000FF7                     TBLPTRH         equ	4087	;# 
   795   000FF8                     TBLPTRU         equ	4088	;# 
   796   000FF9                     PCLAT           equ	4089	;# 
   797   000FF9                     PC              equ	4089	;# 
   798   000FF9                     PCL             equ	4089	;# 
   799   000FFA                     PCLATH          equ	4090	;# 
   800   000FFB                     PCLATU          equ	4091	;# 
   801   000FFC                     STKPTR          equ	4092	;# 
   802   000FFD                     TOS             equ	4093	;# 
   803   000FFD                     TOSL            equ	4093	;# 
   804   000FFE                     TOSH            equ	4094	;# 
   805   000FFF                     TOSU            equ	4095	;# 
   806   000F62                     SPPDATA         equ	3938	;# 
   807   000F63                     SPPCFG          equ	3939	;# 
   808   000F64                     SPPEPS          equ	3940	;# 
   809   000F65                     SPPCON          equ	3941	;# 
   810   000F66                     UFRM            equ	3942	;# 
   811   000F66                     UFRML           equ	3942	;# 
   812   000F67                     UFRMH           equ	3943	;# 
   813   000F68                     UIR             equ	3944	;# 
   814   000F69                     UIE             equ	3945	;# 
   815   000F6A                     UEIR            equ	3946	;# 
   816   000F6B                     UEIE            equ	3947	;# 
   817   000F6C                     USTAT           equ	3948	;# 
   818   000F6D                     UCON            equ	3949	;# 
   819   000F6E                     UADDR           equ	3950	;# 
   820   000F6F                     UCFG            equ	3951	;# 
   821   000F70                     UEP0            equ	3952	;# 
   822   000F71                     UEP1            equ	3953	;# 
   823   000F72                     UEP2            equ	3954	;# 
   824   000F73                     UEP3            equ	3955	;# 
   825   000F74                     UEP4            equ	3956	;# 
   826   000F75                     UEP5            equ	3957	;# 
   827   000F76                     UEP6            equ	3958	;# 
   828   000F77                     UEP7            equ	3959	;# 
   829   000F78                     UEP8            equ	3960	;# 
   830   000F79                     UEP9            equ	3961	;# 
   831   000F7A                     UEP10           equ	3962	;# 
   832   000F7B                     UEP11           equ	3963	;# 
   833   000F7C                     UEP12           equ	3964	;# 
   834   000F7D                     UEP13           equ	3965	;# 
   835   000F7E                     UEP14           equ	3966	;# 
   836   000F7F                     UEP15           equ	3967	;# 
   837   000F80                     PORTA           equ	3968	;# 
   838   000F81                     PORTB           equ	3969	;# 
   839   000F82                     PORTC           equ	3970	;# 
   840   000F83                     PORTD           equ	3971	;# 
   841   000F84                     PORTE           equ	3972	;# 
   842   000F89                     LATA            equ	3977	;# 
   843   000F8A                     LATB            equ	3978	;# 
   844   000F8B                     LATC            equ	3979	;# 
   845   000F8C                     LATD            equ	3980	;# 
   846   000F8D                     LATE            equ	3981	;# 
   847   000F92                     TRISA           equ	3986	;# 
   848   000F92                     DDRA            equ	3986	;# 
   849   000F93                     TRISB           equ	3987	;# 
   850   000F93                     DDRB            equ	3987	;# 
   851   000F94                     TRISC           equ	3988	;# 
   852   000F94                     DDRC            equ	3988	;# 
   853   000F95                     TRISD           equ	3989	;# 
   854   000F95                     DDRD            equ	3989	;# 
   855   000F96                     TRISE           equ	3990	;# 
   856   000F96                     DDRE            equ	3990	;# 
   857   000F9B                     OSCTUNE         equ	3995	;# 
   858   000F9D                     PIE1            equ	3997	;# 
   859   000F9E                     PIR1            equ	3998	;# 
   860   000F9F                     IPR1            equ	3999	;# 
   861   000FA0                     PIE2            equ	4000	;# 
   862   000FA1                     PIR2            equ	4001	;# 
   863   000FA2                     IPR2            equ	4002	;# 
   864   000FA6                     EECON1          equ	4006	;# 
   865   000FA7                     EECON2          equ	4007	;# 
   866   000FA8                     EEDATA          equ	4008	;# 
   867   000FA9                     EEADR           equ	4009	;# 
   868   000FAB                     RCSTA           equ	4011	;# 
   869   000FAB                     RCSTA1          equ	4011	;# 
   870   000FAC                     TXSTA           equ	4012	;# 
   871   000FAC                     TXSTA1          equ	4012	;# 
   872   000FAD                     TXREG           equ	4013	;# 
   873   000FAD                     TXREG1          equ	4013	;# 
   874   000FAE                     RCREG           equ	4014	;# 
   875   000FAE                     RCREG1          equ	4014	;# 
   876   000FAF                     SPBRG           equ	4015	;# 
   877   000FAF                     SPBRG1          equ	4015	;# 
   878   000FB0                     SPBRGH          equ	4016	;# 
   879   000FB1                     T3CON           equ	4017	;# 
   880   000FB2                     TMR3            equ	4018	;# 
   881   000FB2                     TMR3L           equ	4018	;# 
   882   000FB3                     TMR3H           equ	4019	;# 
   883   000FB4                     CMCON           equ	4020	;# 
   884   000FB5                     CVRCON          equ	4021	;# 
   885   000FB6                     ECCP1AS         equ	4022	;# 
   886   000FB6                     CCP1AS          equ	4022	;# 
   887   000FB7                     ECCP1DEL        equ	4023	;# 
   888   000FB7                     CCP1DEL         equ	4023	;# 
   889   000FB8                     BAUDCON         equ	4024	;# 
   890   000FB8                     BAUDCTL         equ	4024	;# 
   891   000FBA                     CCP2CON         equ	4026	;# 
   892   000FBB                     CCPR2           equ	4027	;# 
   893   000FBB                     CCPR2L          equ	4027	;# 
   894   000FBC                     CCPR2H          equ	4028	;# 
   895   000FBD                     CCP1CON         equ	4029	;# 
   896   000FBD                     ECCP1CON        equ	4029	;# 
   897   000FBE                     CCPR1           equ	4030	;# 
   898   000FBE                     CCPR1L          equ	4030	;# 
   899   000FBF                     CCPR1H          equ	4031	;# 
   900   000FC0                     ADCON2          equ	4032	;# 
   901   000FC1                     ADCON1          equ	4033	;# 
   902   000FC2                     ADCON0          equ	4034	;# 
   903   000FC3                     ADRES           equ	4035	;# 
   904   000FC3                     ADRESL          equ	4035	;# 
   905   000FC4                     ADRESH          equ	4036	;# 
   906   000FC5                     SSPCON2         equ	4037	;# 
   907   000FC6                     SSPCON1         equ	4038	;# 
   908   000FC7                     SSPSTAT         equ	4039	;# 
   909   000FC8                     SSPADD          equ	4040	;# 
   910   000FC9                     SSPBUF          equ	4041	;# 
   911   000FCA                     T2CON           equ	4042	;# 
   912   000FCB                     PR2             equ	4043	;# 
   913   000FCB                     MEMCON          equ	4043	;# 
   914   000FCC                     TMR2            equ	4044	;# 
   915   000FCD                     T1CON           equ	4045	;# 
   916   000FCE                     TMR1            equ	4046	;# 
   917   000FCE                     TMR1L           equ	4046	;# 
   918   000FCF                     TMR1H           equ	4047	;# 
   919   000FD0                     RCON            equ	4048	;# 
   920   000FD1                     WDTCON          equ	4049	;# 
   921   000FD2                     HLVDCON         equ	4050	;# 
   922   000FD2                     LVDCON          equ	4050	;# 
   923   000FD3                     OSCCON          equ	4051	;# 
   924   000FD5                     T0CON           equ	4053	;# 
   925   000FD6                     TMR0            equ	4054	;# 
   926   000FD6                     TMR0L           equ	4054	;# 
   927   000FD7                     TMR0H           equ	4055	;# 
   928   000FD8                     STATUS          equ	4056	;# 
   929   000FD9                     FSR2            equ	4057	;# 
   930   000FD9                     FSR2L           equ	4057	;# 
   931   000FDA                     FSR2H           equ	4058	;# 
   932   000FDB                     PLUSW2          equ	4059	;# 
   933   000FDC                     PREINC2         equ	4060	;# 
   934   000FDD                     POSTDEC2        equ	4061	;# 
   935   000FDE                     POSTINC2        equ	4062	;# 
   936   000FDF                     INDF2           equ	4063	;# 
   937   000FE0                     BSR             equ	4064	;# 
   938   000FE1                     FSR1            equ	4065	;# 
   939   000FE1                     FSR1L           equ	4065	;# 
   940   000FE2                     FSR1H           equ	4066	;# 
   941   000FE3                     PLUSW1          equ	4067	;# 
   942   000FE4                     PREINC1         equ	4068	;# 
   943   000FE5                     POSTDEC1        equ	4069	;# 
   944   000FE6                     POSTINC1        equ	4070	;# 
   945   000FE7                     INDF1           equ	4071	;# 
   946   000FE8                     WREG            equ	4072	;# 
   947   000FE9                     FSR0            equ	4073	;# 
   948   000FE9                     FSR0L           equ	4073	;# 
   949   000FEA                     FSR0H           equ	4074	;# 
   950   000FEB                     PLUSW0          equ	4075	;# 
   951   000FEC                     PREINC0         equ	4076	;# 
   952   000FED                     POSTDEC0        equ	4077	;# 
   953   000FEE                     POSTINC0        equ	4078	;# 
   954   000FEF                     INDF0           equ	4079	;# 
   955   000FF0                     INTCON3         equ	4080	;# 
   956   000FF1                     INTCON2         equ	4081	;# 
   957   000FF2                     INTCON          equ	4082	;# 
   958   000FF3                     PROD            equ	4083	;# 
   959   000FF3                     PRODL           equ	4083	;# 
   960   000FF4                     PRODH           equ	4084	;# 
   961   000FF5                     TABLAT          equ	4085	;# 
   962   000FF6                     TBLPTR          equ	4086	;# 
   963   000FF6                     TBLPTRL         equ	4086	;# 
   964   000FF7                     TBLPTRH         equ	4087	;# 
   965   000FF8                     TBLPTRU         equ	4088	;# 
   966   000FF9                     PCLAT           equ	4089	;# 
   967   000FF9                     PC              equ	4089	;# 
   968   000FF9                     PCL             equ	4089	;# 
   969   000FFA                     PCLATH          equ	4090	;# 
   970   000FFB                     PCLATU          equ	4091	;# 
   971   000FFC                     STKPTR          equ	4092	;# 
   972   000FFD                     TOS             equ	4093	;# 
   973   000FFD                     TOSL            equ	4093	;# 
   974   000FFE                     TOSH            equ	4094	;# 
   975   000FFF                     TOSU            equ	4095	;# 
   976   007C62                     _LATD2          set	31842
   977   007C60                     _LATD0          set	31840
   978   007E2C                     _ACKEN          set	32300
   979   007E2D                     _ACKDT          set	32301
   980   007E2B                     _RCEN           set	32299
   981   007E2E                     _ACKSTAT        set	32302
   982   007E2A                     _PEN            set	32298
   983   007E29                     _RSEN           set	32297
   984   007E28                     _SEN            set	32296
   985   007C99                     _TRISB1         set	31897
   986   007C98                     _TRISB0         set	31896
   987   000FD3                     _OSCCONbits     set	4051
   988   000FB4                     _CMCON          set	4020
   989   000FC1                     _ADCON1         set	4033
   990   000FD3                     _OSCCON         set	4051
   991   000F8C                     _LATD           set	3980
   992   000F95                     _TRISD          set	3989
   993   000FC9                     _SSPBUF         set	4041
   994   000FC7                     _SSPSTAT        set	4039
   995   000FC8                     _SSPADD         set	4040
   996   000FC5                     _SSPCON2        set	4037
   997   000FC6                     _SSPCON1        set	4038
   998   000F92                     _TRISAbits      set	3986
   999   000F80                     _PORTAbits      set	3968
  1000                           
  1001                           	psect	smallconst
  1002   000800                     __psmallconst:
  1003                           	callstack 0
  1004   000800  00                 	db	0
  1005   000801                     STR_4:
  1006   000801  46                 	db	70	;'F'
  1007   000802  65                 	db	101	;'e'
  1008   000803  63                 	db	99	;'c'
  1009   000804  68                 	db	104	;'h'
  1010   000805  61                 	db	97	;'a'
  1011   000806  3A                 	db	58	;':'
  1012   000807  25                 	db	37
  1013   000808  30                 	db	48	;'0'
  1014   000809  32                 	db	50	;'2'
  1015   00080A  64                 	db	100	;'d'
  1016   00080B  2F                 	db	47
  1017   00080C  25                 	db	37
  1018   00080D  30                 	db	48	;'0'
  1019   00080E  32                 	db	50	;'2'
  1020   00080F  64                 	db	100	;'d'
  1021   000810  2F                 	db	47
  1022   000811  32                 	db	50	;'2'
  1023   000812  30                 	db	48	;'0'
  1024   000813  25                 	db	37
  1025   000814  30                 	db	48	;'0'
  1026   000815  32                 	db	50	;'2'
  1027   000816  64                 	db	100	;'d'
  1028   000817  00                 	db	0
  1029   000818                     STR_5:
  1030   000818  48                 	db	72	;'H'
  1031   000819  6F                 	db	111	;'o'
  1032   00081A  72                 	db	114	;'r'
  1033   00081B  61                 	db	97	;'a'
  1034   00081C  3A                 	db	58	;':'
  1035   00081D  20                 	db	32
  1036   00081E  25                 	db	37
  1037   00081F  30                 	db	48	;'0'
  1038   000820  32                 	db	50	;'2'
  1039   000821  64                 	db	100	;'d'
  1040   000822  3A                 	db	58	;':'
  1041   000823  25                 	db	37
  1042   000824  30                 	db	48	;'0'
  1043   000825  32                 	db	50	;'2'
  1044   000826  64                 	db	100	;'d'
  1045   000827  3A                 	db	58	;':'
  1046   000828  25                 	db	37
  1047   000829  30                 	db	48	;'0'
  1048   00082A  32                 	db	50	;'2'
  1049   00082B  64                 	db	100	;'d'
  1050   00082C  00                 	db	0
  1051   00082D                     STR_3:
  1052   00082D  43                 	db	67	;'C'
  1053   00082E  6F                 	db	111	;'o'
  1054   00082F  6E                 	db	110	;'n'
  1055   000830  66                 	db	102	;'f'
  1056   000831  69                 	db	105	;'i'
  1057   000832  67                 	db	103	;'g'
  1058   000833  75                 	db	117	;'u'
  1059   000834  72                 	db	114	;'r'
  1060   000835  61                 	db	97	;'a'
  1061   000836  6E                 	db	110	;'n'
  1062   000837  64                 	db	100	;'d'
  1063   000838  6F                 	db	111	;'o'
  1064   000839  20                 	db	32
  1065   00083A  52                 	db	82	;'R'
  1066   00083B  54                 	db	84	;'T'
  1067   00083C  43                 	db	67	;'C'
  1068   00083D  00                 	db	0
  1069   00083E                     STR_1:
  1070   00083E  54                 	db	84	;'T'
  1071   00083F  65                 	db	101	;'e'
  1072   000840  6D                 	db	109	;'m'
  1073   000841  70                 	db	112	;'p'
  1074   000842  65                 	db	101	;'e'
  1075   000843  72                 	db	114	;'r'
  1076   000844  61                 	db	97	;'a'
  1077   000845  74                 	db	116	;'t'
  1078   000846  75                 	db	117	;'u'
  1079   000847  72                 	db	114	;'r'
  1080   000848  61                 	db	97	;'a'
  1081   000849  3A                 	db	58	;':'
  1082   00084A  00                 	db	0
  1083   00084B                     STR_2:
  1084   00084B  45                 	db	69	;'E'
  1085   00084C  72                 	db	114	;'r'
  1086   00084D  72                 	db	114	;'r'
  1087   00084E  6F                 	db	111	;'o'
  1088   00084F  72                 	db	114	;'r'
  1089   000850  20                 	db	32
  1090   000851  00                 	db	0
  1091   000852  00                 	db	0	; dummy byte at the end
  1092   000800                     __smallconst    set	__psmallconst
  1093   000800                     __mediumconst   set	__psmallconst
  1094   000002                     __activetblptr  equ	2
  1095                           
  1096                           ; #config settings
  1097                           
  1098                           	psect	cinit
  1099   001796                     __pcinit:
  1100                           	callstack 0
  1101   001796                     start_initialization:
  1102                           	callstack 0
  1103   001796                     __initialization:
  1104                           	callstack 0
  1105                           
  1106                           ; Clear objects allocated to BANK0 (34 bytes)
  1107   001796  EE00  F060         	lfsr	0,__pbssBANK0
  1108   00179A  0E22               	movlw	34
  1109   00179C                     clear_0:
  1110   00179C  6AEE               	clrf	postinc0,c
  1111   00179E  06E8               	decf	wreg,f,c
  1112   0017A0  E1FD               	bnz	clear_0
  1113                           
  1114                           ; Clear objects allocated to COMRAM (3 bytes)
  1115   0017A2  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1116   0017A4  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1117   0017A6  6A5C               	clrf	__pbssCOMRAM& (0+255),c
  1118   0017A8                     end_of_initialization:
  1119                           	callstack 0
  1120   0017A8                     __end_of__initialization:
  1121                           	callstack 0
  1122   0017A8  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1123   0017AA  6EF8               	movwf	tblptru,c
  1124   0017AC  0100               	movlb	0
  1125   0017AE  EFB5  F00A         	goto	_main	;jump to C main() function
  1126                           
  1127                           	psect	bssCOMRAM
  1128   00005C                     __pbssCOMRAM:
  1129                           	callstack 0
  1130   00005C                     _width:
  1131                           	callstack 0
  1132   00005C                     	ds	2
  1133   00005E                     _flags:
  1134                           	callstack 0
  1135   00005E                     	ds	1
  1136                           
  1137                           	psect	bssBANK0
  1138   000060                     __pbssBANK0:
  1139                           	callstack 0
  1140   000060                     _prec:
  1141                           	callstack 0
  1142   000060                     	ds	2
  1143   000062                     _dbuf:
  1144                           	callstack 0
  1145   000062                     	ds	32
  1146                           
  1147                           	psect	cstackCOMRAM
  1148   000001                     __pcstackCOMRAM:
  1149                           	callstack 0
  1150   000001                     ?___awdiv:
  1151                           	callstack 0
  1152   000001                     ?___awmod:
  1153                           	callstack 0
  1154   000001                     ?_read_prec_or_width:
  1155                           	callstack 0
  1156   000001                     ?___lldiv:
  1157                           	callstack 0
  1158   000001                     DHT11_Read@data:
  1159                           	callstack 0
  1160   000001                     read_prec_or_width@fmt:
  1161                           	callstack 0
  1162   000001                     ___awdiv@dividend:
  1163                           	callstack 0
  1164   000001                     ___awmod@dividend:
  1165                           	callstack 0
  1166   000001                     fputc@c:
  1167                           	callstack 0
  1168   000001                     ___lldiv@dividend:
  1169                           	callstack 0
  1170   000001                     ??_LCD_Command:
  1171   000001                     ??_I2C_Master_Wait:
  1172   000001                     ??_LCD_Char:
  1173   000001                     ??_BCD2DEC:
  1174                           
  1175                           ; 1 bytes @ 0x0
  1176   000001                     	ds	1
  1177   000002                     ?_I2C_Master_Read:
  1178                           	callstack 0
  1179   000002                     DHT11_Read@i:
  1180                           	callstack 0
  1181   000002                     LCD_Command@cmd:
  1182                           	callstack 0
  1183   000002                     LCD_Char@dat:
  1184                           	callstack 0
  1185   000002                     BCD2DEC@val:
  1186                           	callstack 0
  1187   000002                     read_prec_or_width@ap:
  1188                           	callstack 0
  1189   000002                     I2C_Master_Read@a:
  1190                           	callstack 0
  1191   000002                     
  1192                           ; 1 bytes @ 0x1
  1193   000002                     	ds	1
  1194   000003                     fputc@fp:
  1195                           	callstack 0
  1196   000003                     LCD_String@msg:
  1197                           	callstack 0
  1198   000003                     ___awdiv@divisor:
  1199                           	callstack 0
  1200   000003                     ___awmod@divisor:
  1201                           	callstack 0
  1202   000003                     ??_DHT11_GetTemperature:
  1203   000003                     ??_LCD_Init:
  1204   000003                     ??_LCD_Clear:
  1205   000003                     ??_read_prec_or_width:
  1206                           
  1207                           ; 1 bytes @ 0x2
  1208   000003                     	ds	1
  1209   000004                     I2C_Master_Read@temp:
  1210                           	callstack 0
  1211   000004                     ??_fputc:
  1212   000004                     
  1213                           ; 1 bytes @ 0x3
  1214   000004                     	ds	1
  1215   000005                     LCD_String_xy@pos:
  1216                           	callstack 0
  1217   000005                     ___awdiv@counter:
  1218                           	callstack 0
  1219   000005                     ___awmod@counter:
  1220                           	callstack 0
  1221   000005                     read_prec_or_width@c:
  1222                           	callstack 0
  1223   000005                     ___lldiv@divisor:
  1224                           	callstack 0
  1225   000005                     
  1226                           ; 1 bytes @ 0x4
  1227   000005                     	ds	1
  1228   000006                     ___awdiv@sign:
  1229                           	callstack 0
  1230   000006                     ___awmod@sign:
  1231                           	callstack 0
  1232   000006                     LCD_String_xy@msg:
  1233                           	callstack 0
  1234   000006                     read_prec_or_width@n:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x5
  1238   000006                     	ds	1
  1239   000007                     ?_abs:
  1240                           	callstack 0
  1241   000007                     ___awdiv@quotient:
  1242                           	callstack 0
  1243   000007                     abs@a:
  1244                           	callstack 0
  1245   000007                     DHT11_GetTemperature@data:
  1246                           	callstack 0
  1247                           
  1248                           ; 5 bytes @ 0x6
  1249   000007                     	ds	1
  1250   000008                     LCD_String_xy@row:
  1251                           	callstack 0
  1252   000008                     
  1253                           ; 1 bytes @ 0x7
  1254   000008                     	ds	1
  1255   000009                     LCD_String_xy@location:
  1256                           	callstack 0
  1257   000009                     fputs@s:
  1258                           	callstack 0
  1259   000009                     ___lldiv@quotient:
  1260                           	callstack 0
  1261   000009                     ??_abs:
  1262   000009                     ??_DEC2BCD:
  1263   000009                     
  1264                           ; 1 bytes @ 0x8
  1265   000009                     	ds	1
  1266   00000A                     fputs@fp:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x9
  1270   00000A                     	ds	1
  1271   00000B                     DEC2BCD@val:
  1272                           	callstack 0
  1273   00000B                     fputs@c:
  1274                           	callstack 0
  1275   00000B                     
  1276                           ; 1 bytes @ 0xA
  1277   00000B                     	ds	1
  1278   00000C                     DHT11_GetTemperature@timeout:
  1279                           	callstack 0
  1280   00000C                     I2C_Master_Write@d:
  1281                           	callstack 0
  1282   00000C                     fputs@i:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0xB
  1286   00000C                     	ds	1
  1287   00000D                     ___lldiv@counter:
  1288                           	callstack 0
  1289                           
  1290                           ; 1 bytes @ 0xC
  1291   00000D                     	ds	1
  1292   00000E                     DHT11_GetTemperature@i:
  1293                           	callstack 0
  1294   00000E                     RTC_SetDateTime@m:
  1295                           	callstack 0
  1296   00000E                     RTC_GetDateTime@hour:
  1297                           	callstack 0
  1298   00000E                     pad@fp:
  1299                           	callstack 0
  1300   00000E                     I2C_Master_Init@c:
  1301                           	callstack 0
  1302   00000E                     ??_RTC_Init:
  1303                           
  1304                           ; 1 bytes @ 0xD
  1305   00000E                     	ds	1
  1306   00000F                     RTC_Init@sec:
  1307                           	callstack 0
  1308   00000F                     RTC_SetDateTime@s:
  1309                           	callstack 0
  1310   00000F                     RTC_GetDateTime@min:
  1311                           	callstack 0
  1312   00000F                     pad@buf:
  1313                           	callstack 0
  1314   00000F                     ??_mostrar_temperatura:
  1315                           
  1316                           ; 1 bytes @ 0xE
  1317   00000F                     	ds	1
  1318   000010                     RTC_SetDateTime@d:
  1319                           	callstack 0
  1320   000010                     RTC_GetDateTime@sec:
  1321                           	callstack 0
  1322   000010                     pad@p:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0xF
  1326   000010                     	ds	1
  1327   000011                     RTC_SetDateTime@mo:
  1328                           	callstack 0
  1329   000011                     RTC_GetDateTime@day:
  1330                           	callstack 0
  1331   000011                     mostrar_temperatura@buffer:
  1332                           	callstack 0
  1333                           
  1334                           ; 6 bytes @ 0x10
  1335   000011                     	ds	1
  1336   000012                     RTC_SetDateTime@y:
  1337                           	callstack 0
  1338   000012                     RTC_GetDateTime@month:
  1339                           	callstack 0
  1340   000012                     ??_I2C_Master_Init:
  1341   000012                     ??_pad:
  1342                           
  1343                           ; 1 bytes @ 0x11
  1344   000012                     	ds	1
  1345   000013                     RTC_GetDateTime@year:
  1346                           	callstack 0
  1347   000013                     pad@i:
  1348                           	callstack 0
  1349   000013                     ??_RTC_SetDateTime:
  1350                           
  1351                           ; 1 bytes @ 0x12
  1352   000013                     	ds	1
  1353   000014                     RTC_SetDateTime@h:
  1354                           	callstack 0
  1355   000014                     
  1356                           ; 1 bytes @ 0x13
  1357   000014                     	ds	1
  1358   000015                     dtoa@fp:
  1359                           	callstack 0
  1360                           
  1361                           ; 1 bytes @ 0x14
  1362   000015                     	ds	1
  1363   000016                     dtoa@d:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x15
  1367   000016                     	ds	1
  1368   000017                     mostrar_temperatura@temp:
  1369                           	callstack 0
  1370                           
  1371                           ; 1 bytes @ 0x16
  1372   000017                     	ds	1
  1373   000018                     _dtoa$863:
  1374                           	callstack 0
  1375   000018                     
  1376                           ; 1 bytes @ 0x17
  1377   000018                     	ds	2
  1378   00001A                     dtoa@p:
  1379                           	callstack 0
  1380                           
  1381                           ; 1 bytes @ 0x19
  1382   00001A                     	ds	1
  1383   00001B                     dtoa@w:
  1384                           	callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x1A
  1387   00001B                     	ds	2
  1388   00001D                     dtoa@s:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x1C
  1392   00001D                     	ds	1
  1393   00001E                     dtoa@i:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x1D
  1397   00001E                     	ds	2
  1398   000020                     vfpfcnvrt@fp:
  1399                           	callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x1F
  1402   000020                     	ds	1
  1403   000021                     vfpfcnvrt@fmt:
  1404                           	callstack 0
  1405                           
  1406                           ; 1 bytes @ 0x20
  1407   000021                     	ds	1
  1408   000022                     vfpfcnvrt@ap:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x21
  1412   000022                     	ds	1
  1413   000023                     vfpfcnvrt@convarg:
  1414                           	callstack 0
  1415   000023                     
  1416                           ; 1 bytes @ 0x22
  1417   000023                     	ds	4
  1418   000027                     vfpfcnvrt@done:
  1419                           	callstack 0
  1420                           
  1421                           ; 1 bytes @ 0x26
  1422   000027                     	ds	1
  1423   000028                     vfpfcnvrt@cp:
  1424                           	callstack 0
  1425                           
  1426                           ; 1 bytes @ 0x27
  1427   000028                     	ds	1
  1428   000029                     ?_vfprintf:
  1429                           	callstack 0
  1430   000029                     vfprintf@fp:
  1431                           	callstack 0
  1432                           
  1433                           ; 1 bytes @ 0x28
  1434   000029                     	ds	1
  1435   00002A                     vfprintf@fmt:
  1436                           	callstack 0
  1437                           
  1438                           ; 1 bytes @ 0x29
  1439   00002A                     	ds	1
  1440   00002B                     vfprintf@ap:
  1441                           	callstack 0
  1442                           
  1443                           ; 1 bytes @ 0x2A
  1444   00002B                     	ds	1
  1445   00002C                     vfprintf@cfmt:
  1446                           	callstack 0
  1447   00002C                     
  1448                           ; 1 bytes @ 0x2B
  1449   00002C                     	ds	1
  1450   00002D                     ?_sprintf:
  1451                           	callstack 0
  1452   00002D                     sprintf@s:
  1453                           	callstack 0
  1454                           
  1455                           ; 1 bytes @ 0x2C
  1456   00002D                     	ds	1
  1457   00002E                     sprintf@fmt:
  1458                           	callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x2D
  1461   00002E                     	ds	7
  1462   000035                     sprintf@ap:
  1463                           	callstack 0
  1464   000035                     
  1465                           ; 1 bytes @ 0x34
  1466   000035                     	ds	1
  1467   000036                     sprintf@f:
  1468                           	callstack 0
  1469                           
  1470                           ; 11 bytes @ 0x35
  1471   000036                     	ds	11
  1472   000041                     ??_mostrar_rtc:
  1473                           
  1474                           ; 1 bytes @ 0x40
  1475   000041                     	ds	2
  1476   000043                     mostrar_rtc@buffer:
  1477                           	callstack 0
  1478                           
  1479                           ; 17 bytes @ 0x42
  1480   000043                     	ds	17
  1481   000054                     mostrar_rtc@h:
  1482                           	callstack 0
  1483                           
  1484                           ; 1 bytes @ 0x53
  1485   000054                     	ds	1
  1486   000055                     mostrar_rtc@m:
  1487                           	callstack 0
  1488                           
  1489                           ; 1 bytes @ 0x54
  1490   000055                     	ds	1
  1491   000056                     mostrar_rtc@s:
  1492                           	callstack 0
  1493                           
  1494                           ; 1 bytes @ 0x55
  1495   000056                     	ds	1
  1496   000057                     mostrar_rtc@d:
  1497                           	callstack 0
  1498                           
  1499                           ; 1 bytes @ 0x56
  1500   000057                     	ds	1
  1501   000058                     mostrar_rtc@mo:
  1502                           	callstack 0
  1503                           
  1504                           ; 1 bytes @ 0x57
  1505   000058                     	ds	1
  1506   000059                     mostrar_rtc@y:
  1507                           	callstack 0
  1508                           
  1509                           ; 1 bytes @ 0x58
  1510   000059                     	ds	1
  1511   00005A                     ??_main:
  1512                           
  1513                           ; 1 bytes @ 0x59
  1514   00005A                     	ds	2
  1515                           
  1516 ;;
  1517 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1518 ;;
  1519 ;; *************** function _main *****************
  1520 ;; Defined at:
  1521 ;;		line 74 in file "main.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1537 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1538 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1539 ;;Total ram usage:        2 bytes
  1540 ;; Hardware stack levels required when called: 9
  1541 ;; This function calls:
  1542 ;;		_LCD_Init
  1543 ;;		_RTC_Init
  1544 ;;		_mostrar_rtc
  1545 ;;		_mostrar_temperatura
  1546 ;; This function is called by:
  1547 ;;		Startup code after reset
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text0
  1552   00156A                     __ptext0:
  1553                           	callstack 0
  1554   00156A                     _main:
  1555                           	callstack 22
  1556   00156A                     
  1557                           ;main.c: 75:     TRISD = 0x00;
  1558   00156A  6A95               	clrf	149,c	;volatile
  1559                           
  1560                           ;main.c: 76:     LATD = 0x00;
  1561   00156C  6A8C               	clrf	140,c	;volatile
  1562   00156E                     
  1563                           ;main.c: 78:     LCD_Init();
  1564   00156E  EC9F  F00B         	call	_LCD_Init	;wreg free
  1565                           
  1566                           ;main.c: 79:     RTC_Init();
  1567   001572  EC9C  F009         	call	_RTC_Init	;wreg free
  1568   001576                     l2017:
  1569                           
  1570                           ;main.c: 86:         mostrar_temperatura();
  1571   001576  ECF2  F006         	call	_mostrar_temperatura	;wreg free
  1572   00157A                     
  1573                           ;main.c: 87:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1574   00157A  0E15               	movlw	21
  1575   00157C  6E5B               	movwf	(??_main+1)^0,c
  1576   00157E  0E4B               	movlw	75
  1577   001580  6E5A               	movwf	??_main^0,c
  1578   001582  0EBE               	movlw	190
  1579   001584                     u1187:
  1580   001584  2EE8               	decfsz	wreg,f,c
  1581   001586  D7FE               	bra	u1187
  1582   001588  2E5A               	decfsz	??_main^0,f,c
  1583   00158A  D7FC               	bra	u1187
  1584   00158C  2E5B               	decfsz	(??_main+1)^0,f,c
  1585   00158E  D7FA               	bra	u1187
  1586   001590  D000               	nop2	
  1587   001592                     
  1588                           ;main.c: 90:         mostrar_rtc();
  1589   001592  EC09  F006         	call	_mostrar_rtc	;wreg free
  1590   001596                     
  1591                           ;main.c: 91:         _delay((unsigned long)((3000)*(8000000/4000.0)));
  1592   001596  0E1F               	movlw	31
  1593   001598  6E5B               	movwf	(??_main+1)^0,c
  1594   00159A  0E71               	movlw	113
  1595   00159C  6E5A               	movwf	??_main^0,c
  1596   00159E  0E1E               	movlw	30
  1597   0015A0                     u1197:
  1598   0015A0  2EE8               	decfsz	wreg,f,c
  1599   0015A2  D7FE               	bra	u1197
  1600   0015A4  2E5A               	decfsz	??_main^0,f,c
  1601   0015A6  D7FC               	bra	u1197
  1602   0015A8  2E5B               	decfsz	(??_main+1)^0,f,c
  1603   0015AA  D7FA               	bra	u1197
  1604   0015AC  D000               	nop2	
  1605   0015AE  EFBB  F00A         	goto	l2017
  1606   0015B2  EFFE  F03F         	goto	start
  1607   0015B6                     __end_of_main:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function _mostrar_temperatura *****************
  1611 ;; Defined at:
  1612 ;;		line 14 in file "main.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  buffer          6   16[COMRAM] unsigned char [6]
  1617 ;;  temp            1   22[COMRAM] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0
  1628 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1629 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1630 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1631 ;;Total ram usage:        9 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 3
  1634 ;; This function calls:
  1635 ;;		_DHT11_GetTemperature
  1636 ;;		_LCD_Clear
  1637 ;;		_LCD_Init
  1638 ;;		_LCD_String_xy
  1639 ;;		___awdiv
  1640 ;;		___awmod
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text1
  1647   000DE4                     __ptext1:
  1648                           	callstack 0
  1649   000DE4                     _mostrar_temperatura:
  1650                           	callstack 27
  1651   000DE4                     
  1652                           ;main.c: 15:     OSCCON = 0x72;
  1653   000DE4  0E72               	movlw	114
  1654   000DE6  6ED3               	movwf	211,c	;volatile
  1655   000DE8                     
  1656                           ;main.c: 16:     TRISAbits.TRISA0 = 1;
  1657   000DE8  8092               	bsf	146,0,c	;volatile
  1658                           
  1659                           ;main.c: 17:     ADCON1 = 0x0F;
  1660   000DEA  0E0F               	movlw	15
  1661   000DEC  6EC1               	movwf	193,c	;volatile
  1662                           
  1663                           ;main.c: 18:     CMCON = 0x07;
  1664   000DEE  0E07               	movlw	7
  1665   000DF0  6EB4               	movwf	180,c	;volatile
  1666   000DF2                     
  1667                           ;main.c: 20:     LCD_Init();
  1668   000DF2  EC9F  F00B         	call	_LCD_Init	;wreg free
  1669   000DF6                     
  1670                           ;main.c: 21:     LCD_Clear();
  1671   000DF6  ECD9  F00B         	call	_LCD_Clear	;wreg free
  1672   000DFA                     
  1673                           ;main.c: 22:     LCD_String_xy(0, 0, "Temperatura:");
  1674   000DFA  0E00               	movlw	0
  1675   000DFC  6E05               	movwf	LCD_String_xy@pos^0,c
  1676   000DFE  0E3E               	movlw	low STR_1
  1677   000E00  6E06               	movwf	LCD_String_xy@msg^0,c
  1678   000E02  5006               	movf	LCD_String_xy@msg^0,w,c
  1679   000E04  A4D8               	btfss	status,2,c
  1680   000E06  0E08               	movlw	high __smallconst
  1681   000E08  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1682   000E0A  0E00               	movlw	0
  1683   000E0C  EC18  F00B         	call	_LCD_String_xy
  1684   000E10                     l1967:
  1685                           
  1686                           ;main.c: 25:         uint8_t temp = DHT11_GetTemperature();
  1687   000E10  EC89  F005         	call	_DHT11_GetTemperature	;wreg free
  1688   000E14  6E17               	movwf	mostrar_temperatura@temp^0,c
  1689   000E16                     
  1690                           ;main.c: 27:         if (temp != 255) {
  1691   000E16  2817               	incf	mostrar_temperatura@temp^0,w,c
  1692   000E18  B4D8               	btfsc	status,2,c
  1693   000E1A  EF11  F007         	goto	u1171
  1694   000E1E  EF13  F007         	goto	u1170
  1695   000E22                     u1171:
  1696   000E22  EF3A  F007         	goto	l1981
  1697   000E26                     u1170:
  1698   000E26                     
  1699                           ;main.c: 28:             char buffer[6];;main.c: 30:             buffer[0] = (temp/10) +
      +                           '0';
  1700   000E26  C017  F001         	movff	mostrar_temperatura@temp,___awdiv@dividend
  1701   000E2A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  1702   000E2C  0E00               	movlw	0
  1703   000E2E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1704   000E30  0E0A               	movlw	10
  1705   000E32  6E03               	movwf	___awdiv@divisor^0,c
  1706   000E34  EC54  F007         	call	___awdiv	;wreg free
  1707   000E38  5001               	movf	?___awdiv^0,w,c
  1708   000E3A  0F30               	addlw	48
  1709   000E3C  6E11               	movwf	mostrar_temperatura@buffer^0,c
  1710                           
  1711                           ;main.c: 31:             buffer[1] = (temp%10) + '0';
  1712   000E3E  C017  F001         	movff	mostrar_temperatura@temp,___awmod@dividend
  1713   000E42  6A02               	clrf	(___awmod@dividend+1)^0,c
  1714   000E44  0E00               	movlw	0
  1715   000E46  6E04               	movwf	(___awmod@divisor+1)^0,c
  1716   000E48  0E0A               	movlw	10
  1717   000E4A  6E03               	movwf	___awmod@divisor^0,c
  1718   000E4C  ECB5  F007         	call	___awmod	;wreg free
  1719   000E50  5001               	movf	?___awmod^0,w,c
  1720   000E52  0F30               	addlw	48
  1721   000E54  6E12               	movwf	(mostrar_temperatura@buffer+1)^0,c
  1722   000E56                     
  1723                           ;main.c: 32:             buffer[2] = ' ';
  1724   000E56  0E20               	movlw	32
  1725   000E58  6E13               	movwf	(mostrar_temperatura@buffer+2)^0,c
  1726   000E5A                     
  1727                           ;main.c: 33:             buffer[3] = 'C';
  1728   000E5A  0E43               	movlw	67
  1729   000E5C  6E14               	movwf	(mostrar_temperatura@buffer+3)^0,c
  1730   000E5E                     
  1731                           ;main.c: 34:             buffer[4] = '\0';
  1732   000E5E  6A15               	clrf	(mostrar_temperatura@buffer+4)^0,c
  1733   000E60                     
  1734                           ;main.c: 36:             LCD_String_xy(1, 0, buffer);
  1735   000E60  0E00               	movlw	0
  1736   000E62  6E05               	movwf	LCD_String_xy@pos^0,c
  1737   000E64  0E11               	movlw	low mostrar_temperatura@buffer
  1738   000E66  6E06               	movwf	LCD_String_xy@msg^0,c
  1739   000E68  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
  1740   000E6A  0E01               	movlw	1
  1741   000E6C  EC18  F00B         	call	_LCD_String_xy
  1742                           
  1743                           ;main.c: 37:         } else {
  1744   000E70  EF45  F007         	goto	l1983
  1745   000E74                     l1981:
  1746                           
  1747                           ;main.c: 38:             LCD_String_xy(1, 0, "Error ");
  1748   000E74  0E00               	movlw	0
  1749   000E76  6E05               	movwf	LCD_String_xy@pos^0,c
  1750   000E78  0E4B               	movlw	low STR_2
  1751   000E7A  6E06               	movwf	LCD_String_xy@msg^0,c
  1752   000E7C  5006               	movf	LCD_String_xy@msg^0,w,c
  1753   000E7E  A4D8               	btfss	status,2,c
  1754   000E80  0E08               	movlw	high __smallconst
  1755   000E82  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1756   000E84  0E01               	movlw	1
  1757   000E86  EC18  F00B         	call	_LCD_String_xy
  1758   000E8A                     l1983:
  1759                           
  1760                           ;main.c: 40:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1761   000E8A  0E15               	movlw	21
  1762   000E8C  6E10               	movwf	(??_mostrar_temperatura+1)^0,c
  1763   000E8E  0E4B               	movlw	75
  1764   000E90  6E0F               	movwf	??_mostrar_temperatura^0,c
  1765   000E92  0EBE               	movlw	190
  1766   000E94                     u1207:
  1767   000E94  2EE8               	decfsz	wreg,f,c
  1768   000E96  D7FE               	bra	u1207
  1769   000E98  2E0F               	decfsz	??_mostrar_temperatura^0,f,c
  1770   000E9A  D7FC               	bra	u1207
  1771   000E9C  2E10               	decfsz	(??_mostrar_temperatura+1)^0,f,c
  1772   000E9E  D7FA               	bra	u1207
  1773   000EA0  D000               	nop2	
  1774   000EA2  EF08  F007         	goto	l1967
  1775   000EA6  0012               	return		;funcret
  1776   000EA8                     __end_of_mostrar_temperatura:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function _DHT11_GetTemperature *****************
  1780 ;; Defined at:
  1781 ;;		line 16 in file "DHT11.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  i               1   13[COMRAM] unsigned char 
  1786 ;;  data            5    6[COMRAM] unsigned char [5]
  1787 ;;  timeout         2   11[COMRAM] unsigned short 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      unsigned char 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1797 ;;      Params:         0       0       0       0       0       0       0       0       0
  1798 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1799 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1800 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1801 ;;Total ram usage:       12 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 1
  1804 ;; This function calls:
  1805 ;;		_DHT11_Read
  1806 ;; This function is called by:
  1807 ;;		_mostrar_temperatura
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text2
  1812   000B12                     __ptext2:
  1813                           	callstack 0
  1814   000B12                     _DHT11_GetTemperature:
  1815                           	callstack 28
  1816   000B12                     
  1817                           ;DHT11.c: 17:     TRISAbits.TRISA0 = 0;
  1818   000B12  9092               	bcf	146,0,c	;volatile
  1819                           
  1820                           ;DHT11.c: 18:     PORTAbits.RA0 = 0;
  1821   000B14  9080               	bcf	128,0,c	;volatile
  1822   000B16                     
  1823                           ;DHT11.c: 19:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1824   000B16  0E34               	movlw	52
  1825   000B18  6E03               	movwf	??_DHT11_GetTemperature^0,c
  1826   000B1A  0EF2               	movlw	242
  1827   000B1C                     u1217:
  1828   000B1C  2EE8               	decfsz	wreg,f,c
  1829   000B1E  D7FE               	bra	u1217
  1830   000B20  2E03               	decfsz	??_DHT11_GetTemperature^0,f,c
  1831   000B22  D7FC               	bra	u1217
  1832   000B24                     
  1833                           ;DHT11.c: 20:     PORTAbits.RA0 = 1;
  1834   000B24  8080               	bsf	128,0,c	;volatile
  1835                           
  1836                           ;DHT11.c: 21:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1837   000B26  0E1A               	movlw	26
  1838   000B28                     u1227:
  1839   000B28  2EE8               	decfsz	wreg,f,c
  1840   000B2A  D7FE               	bra	u1227
  1841   000B2C  D000               	nop2	
  1842   000B2E                     
  1843                           ;DHT11.c: 22:     TRISAbits.TRISA0 = 1;
  1844   000B2E  8092               	bsf	146,0,c	;volatile
  1845   000B30                     
  1846                           ;DHT11.c: 24:     if (PORTAbits.RA0 == 0) {
  1847   000B30  B080               	btfsc	128,0,c	;volatile
  1848   000B32  EF9D  F005         	goto	u551
  1849   000B36  EF9F  F005         	goto	u550
  1850   000B3A                     u551:
  1851   000B3A  EF07  F006         	goto	l1411
  1852   000B3E                     u550:
  1853   000B3E                     
  1854                           ;DHT11.c: 25:         uint16_t timeout = 1000;
  1855   000B3E  0E03               	movlw	3
  1856   000B40  6E0D               	movwf	(DHT11_GetTemperature@timeout+1)^0,c
  1857   000B42  0EE8               	movlw	232
  1858   000B44  6E0C               	movwf	DHT11_GetTemperature@timeout^0,c
  1859                           
  1860                           ;DHT11.c: 26:         while (!PORTAbits.RA0 && timeout--) _delay((unsigned long)((1)*(80
      +                          00000/4000000.0)));
  1861   000B46  EFA6  F005         	goto	l22
  1862   000B4A                     l23:
  1863   000B4A  D000               	nop2		;2 cycle nop
  1864   000B4C                     l22:
  1865   000B4C  B080               	btfsc	128,0,c	;volatile
  1866   000B4E  EFAB  F005         	goto	u561
  1867   000B52  EFAD  F005         	goto	u560
  1868   000B56                     u561:
  1869   000B56  EFBA  F005         	goto	l1391
  1870   000B5A                     u560:
  1871   000B5A  060C               	decf	DHT11_GetTemperature@timeout^0,f,c
  1872   000B5C  A0D8               	btfss	status,0,c
  1873   000B5E  060D               	decf	(DHT11_GetTemperature@timeout+1)^0,f,c
  1874   000B60  280C               	incf	DHT11_GetTemperature@timeout^0,w,c
  1875   000B62  E106               	bnz	u571
  1876   000B64  280D               	incf	(DHT11_GetTemperature@timeout+1)^0,w,c
  1877   000B66  A4D8               	btfss	status,2,c
  1878   000B68  EFB8  F005         	goto	u571
  1879   000B6C  EFBA  F005         	goto	u570
  1880   000B70                     u571:
  1881   000B70  EFA5  F005         	goto	l23
  1882   000B74                     u570:
  1883   000B74                     l1391:
  1884                           
  1885                           ;DHT11.c: 27:         timeout = 1000;
  1886   000B74  0E03               	movlw	3
  1887   000B76  6E0D               	movwf	(DHT11_GetTemperature@timeout+1)^0,c
  1888   000B78  0EE8               	movlw	232
  1889   000B7A  6E0C               	movwf	DHT11_GetTemperature@timeout^0,c
  1890                           
  1891                           ;DHT11.c: 28:         while (PORTAbits.RA0 && timeout--) _delay((unsigned long)((1)*(800
      +                          0000/4000000.0)));
  1892   000B7C  EFC1  F005         	goto	l27
  1893   000B80                     l28:
  1894   000B80  D000               	nop2		;2 cycle nop
  1895   000B82                     l27:
  1896   000B82  A080               	btfss	128,0,c	;volatile
  1897   000B84  EFC6  F005         	goto	u581
  1898   000B88  EFC8  F005         	goto	u580
  1899   000B8C                     u581:
  1900   000B8C  EFD5  F005         	goto	l31
  1901   000B90                     u580:
  1902   000B90  060C               	decf	DHT11_GetTemperature@timeout^0,f,c
  1903   000B92  A0D8               	btfss	status,0,c
  1904   000B94  060D               	decf	(DHT11_GetTemperature@timeout+1)^0,f,c
  1905   000B96  280C               	incf	DHT11_GetTemperature@timeout^0,w,c
  1906   000B98  E106               	bnz	u591
  1907   000B9A  280D               	incf	(DHT11_GetTemperature@timeout+1)^0,w,c
  1908   000B9C  A4D8               	btfss	status,2,c
  1909   000B9E  EFD3  F005         	goto	u591
  1910   000BA2  EFD5  F005         	goto	u590
  1911   000BA6                     u591:
  1912   000BA6  EFC0  F005         	goto	l28
  1913   000BAA                     u590:
  1914   000BAA                     l31:
  1915                           
  1916                           ;DHT11.c: 30:         uint8_t data[5];;DHT11.c: 31:         for (uint8_t i = 0; i < 5; i
      +                          ++) {
  1917   000BAA  6A0E               	clrf	DHT11_GetTemperature@i^0,c
  1918   000BAC                     l1399:
  1919                           
  1920                           ;DHT11.c: 32:             data[i] = DHT11_Read();
  1921   000BAC  500E               	movf	DHT11_GetTemperature@i^0,w,c
  1922   000BAE  0F07               	addlw	low DHT11_GetTemperature@data
  1923   000BB0  6ED9               	movwf	fsr2l,c
  1924   000BB2  6ADA               	clrf	fsr2h,c
  1925   000BB4  EC8C  F00A         	call	_DHT11_Read	;wreg free
  1926   000BB8  6EDF               	movwf	indf2,c
  1927   000BBA                     
  1928                           ;DHT11.c: 33:         }
  1929   000BBA  2A0E               	incf	DHT11_GetTemperature@i^0,f,c
  1930   000BBC  0E04               	movlw	4
  1931   000BBE  640E               	cpfsgt	DHT11_GetTemperature@i^0,c
  1932   000BC0  EFE4  F005         	goto	u601
  1933   000BC4  EFE6  F005         	goto	u600
  1934   000BC8                     u601:
  1935   000BC8  EFD6  F005         	goto	l1399
  1936   000BCC                     u600:
  1937   000BCC                     
  1938                           ;DHT11.c: 35:         if (data[0] + data[1] + data[2] + data[3] == data[4]) {
  1939   000BCC  500B               	movf	(DHT11_GetTemperature@data+4)^0,w,c
  1940   000BCE  6E03               	movwf	??_DHT11_GetTemperature^0,c
  1941   000BD0  6A04               	clrf	(??_DHT11_GetTemperature+1)^0,c
  1942   000BD2  5008               	movf	(DHT11_GetTemperature@data+1)^0,w,c
  1943   000BD4  C007  F005         	movff	DHT11_GetTemperature@data,??_DHT11_GetTemperature+2
  1944   000BD8  6A06               	clrf	(??_DHT11_GetTemperature+3)^0,c
  1945   000BDA  2605               	addwf	(??_DHT11_GetTemperature+2)^0,f,c
  1946   000BDC  0E00               	movlw	0
  1947   000BDE  2206               	addwfc	(??_DHT11_GetTemperature+3)^0,f,c
  1948   000BE0  5009               	movf	(DHT11_GetTemperature@data+2)^0,w,c
  1949   000BE2  2605               	addwf	(??_DHT11_GetTemperature+2)^0,f,c
  1950   000BE4  0E00               	movlw	0
  1951   000BE6  2206               	addwfc	(??_DHT11_GetTemperature+3)^0,f,c
  1952   000BE8  500A               	movf	(DHT11_GetTemperature@data+3)^0,w,c
  1953   000BEA  2605               	addwf	(??_DHT11_GetTemperature+2)^0,f,c
  1954   000BEC  0E00               	movlw	0
  1955   000BEE  2206               	addwfc	(??_DHT11_GetTemperature+3)^0,f,c
  1956   000BF0  5003               	movf	??_DHT11_GetTemperature^0,w,c
  1957   000BF2  1805               	xorwf	(??_DHT11_GetTemperature+2)^0,w,c
  1958   000BF4  E107               	bnz	u611
  1959   000BF6  5004               	movf	(??_DHT11_GetTemperature+1)^0,w,c
  1960   000BF8  1806               	xorwf	(??_DHT11_GetTemperature+3)^0,w,c
  1961   000BFA  A4D8               	btfss	status,2,c
  1962   000BFC  EF02  F006         	goto	u611
  1963   000C00  EF04  F006         	goto	u610
  1964   000C04                     u611:
  1965   000C04  EF07  F006         	goto	l1411
  1966   000C08                     u610:
  1967   000C08                     
  1968                           ;DHT11.c: 36:             return data[2];
  1969   000C08  5009               	movf	(DHT11_GetTemperature@data+2)^0,w,c
  1970   000C0A  EF08  F006         	goto	l35
  1971   000C0E                     l1411:
  1972                           
  1973                           ;DHT11.c: 39:     return 255;
  1974   000C0E  0EFF               	movlw	255
  1975   000C10                     l35:
  1976   000C10  0012               	return		;funcret
  1977   000C12                     __end_of_DHT11_GetTemperature:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _DHT11_Read *****************
  1981 ;; Defined at:
  1982 ;;		line 4 in file "DHT11.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  i               1    1[COMRAM] unsigned char 
  1987 ;;  data            1    0[COMRAM] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      unsigned char 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1997 ;;      Params:         0       0       0       0       0       0       0       0       0
  1998 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2000 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2001 ;;Total ram usage:        2 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_DHT11_GetTemperature
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text3
  2011   001518                     __ptext3:
  2012                           	callstack 0
  2013   001518                     _DHT11_Read:
  2014                           	callstack 28
  2015   001518                     
  2016                           ;DHT11.c: 5:     uint8_t data = 0;
  2017   001518  6A01               	clrf	DHT11_Read@data^0,c
  2018                           
  2019                           ;DHT11.c: 6:     for (uint8_t i = 0; i < 8; i++) {
  2020   00151A  6A02               	clrf	DHT11_Read@i^0,c
  2021   00151C                     l11:
  2022   00151C  A080               	btfss	128,0,c	;volatile
  2023   00151E  EF93  F00A         	goto	u421
  2024   001522  EF95  F00A         	goto	u420
  2025   001526                     u421:
  2026   001526  EF8E  F00A         	goto	l11
  2027   00152A                     u420:
  2028   00152A                     
  2029                           ;DHT11.c: 8:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2030   00152A  0E21               	movlw	33
  2031   00152C                     u1237:
  2032   00152C  2EE8               	decfsz	wreg,f,c
  2033   00152E  D7FE               	bra	u1237
  2034   001530  0000               	nop	
  2035   001532                     
  2036                           ;DHT11.c: 9:         data <<= 1;
  2037   001532  90D8               	bcf	status,0,c
  2038   001534  3601               	rlcf	DHT11_Read@data^0,f,c
  2039   001536                     
  2040                           ;DHT11.c: 10:         if (PORTAbits.RA0) data |= 1;
  2041   001536  A080               	btfss	128,0,c	;volatile
  2042   001538  EFA0  F00A         	goto	u431
  2043   00153C  EFA2  F00A         	goto	u430
  2044   001540                     u431:
  2045   001540  EFA3  F00A         	goto	l15
  2046   001544                     u430:
  2047   001544  8001               	bsf	DHT11_Read@data^0,0,c
  2048   001546                     l15:
  2049   001546  B080               	btfsc	128,0,c	;volatile
  2050   001548  EFA8  F00A         	goto	u441
  2051   00154C  EFAA  F00A         	goto	u440
  2052   001550                     u441:
  2053   001550  EFA3  F00A         	goto	l15
  2054   001554                     u440:
  2055   001554                     
  2056                           ;DHT11.c: 12:     }
  2057   001554  2A02               	incf	DHT11_Read@i^0,f,c
  2058   001556  0E07               	movlw	7
  2059   001558  6402               	cpfsgt	DHT11_Read@i^0,c
  2060   00155A  EFB1  F00A         	goto	u451
  2061   00155E  EFB3  F00A         	goto	u450
  2062   001562                     u451:
  2063   001562  EF8E  F00A         	goto	l11
  2064   001566                     u450:
  2065   001566                     
  2066                           ;DHT11.c: 13:     return data;
  2067   001566  5001               	movf	DHT11_Read@data^0,w,c
  2068   001568  0012               	return		;funcret
  2069   00156A                     __end_of_DHT11_Read:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function _mostrar_rtc *****************
  2073 ;; Defined at:
  2074 ;;		line 44 in file "main.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  buffer         17   66[COMRAM] unsigned char [17]
  2079 ;;  y               1   88[COMRAM] unsigned char 
  2080 ;;  mo              1   87[COMRAM] unsigned char 
  2081 ;;  d               1   86[COMRAM] unsigned char 
  2082 ;;  s               1   85[COMRAM] unsigned char 
  2083 ;;  m               1   84[COMRAM] unsigned char 
  2084 ;;  h               1   83[COMRAM] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0
  2095 ;;      Locals:        23       0       0       0       0       0       0       0       0
  2096 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2097 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2098 ;;Total ram usage:       25 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; Hardware stack levels required when called: 8
  2101 ;; This function calls:
  2102 ;;		_I2C_Master_Init
  2103 ;;		_LCD_Clear
  2104 ;;		_LCD_Init
  2105 ;;		_LCD_String_xy
  2106 ;;		_RTC_GetDateTime
  2107 ;;		_RTC_Init
  2108 ;;		_RTC_SetDateTime
  2109 ;;		_sprintf
  2110 ;; This function is called by:
  2111 ;;		_main
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text4
  2116   000C12                     __ptext4:
  2117                           	callstack 0
  2118   000C12                     _mostrar_rtc:
  2119                           	callstack 22
  2120   000C12                     
  2121                           ;main.c: 45:   unsigned char h, m, s, d, mo, y;;main.c: 46:     char buffer[17];;main.c:
      +                           48:     OSCCONbits.IRCF = 0b111;
  2122   000C12  0E70               	movlw	112
  2123   000C14  12D3               	iorwf	211,f,c	;volatile
  2124                           
  2125                           ;main.c: 49:     OSCCONbits.SCS = 0b10;
  2126   000C16  50D3               	movf	211,w,c	;volatile
  2127   000C18  0BFC               	andlw	-4
  2128   000C1A  0902               	iorlw	2
  2129   000C1C  6ED3               	movwf	211,c	;volatile
  2130                           
  2131                           ;main.c: 50:     ADCON1 = 0x0F;
  2132   000C1E  0E0F               	movlw	15
  2133   000C20  6EC1               	movwf	193,c	;volatile
  2134   000C22                     
  2135                           ;main.c: 52:     LCD_Init();
  2136   000C22  EC9F  F00B         	call	_LCD_Init	;wreg free
  2137   000C26                     
  2138                           ;main.c: 53:     LCD_Clear();
  2139   000C26  ECD9  F00B         	call	_LCD_Clear	;wreg free
  2140   000C2A                     
  2141                           ;main.c: 54:     I2C_Master_Init(100000);
  2142   000C2A  0EA0               	movlw	160
  2143   000C2C  6E0E               	movwf	I2C_Master_Init@c^0,c
  2144   000C2E  0E86               	movlw	134
  2145   000C30  6E0F               	movwf	(I2C_Master_Init@c+1)^0,c
  2146   000C32  0E01               	movlw	1
  2147   000C34  6E10               	movwf	(I2C_Master_Init@c+2)^0,c
  2148   000C36  0E00               	movlw	0
  2149   000C38  6E11               	movwf	(I2C_Master_Init@c+3)^0,c
  2150   000C3A  EC0C  F00A         	call	_I2C_Master_Init	;wreg free
  2151   000C3E                     
  2152                           ;main.c: 55:     LCD_String_xy(0, 0, "Configurando RTC");
  2153   000C3E  0E00               	movlw	0
  2154   000C40  6E05               	movwf	LCD_String_xy@pos^0,c
  2155   000C42  0E2D               	movlw	low STR_3
  2156   000C44  6E06               	movwf	LCD_String_xy@msg^0,c
  2157   000C46  5006               	movf	LCD_String_xy@msg^0,w,c
  2158   000C48  A4D8               	btfss	status,2,c
  2159   000C4A  0E08               	movlw	high __smallconst
  2160   000C4C  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2161   000C4E  0E00               	movlw	0
  2162   000C50  EC18  F00B         	call	_LCD_String_xy
  2163   000C54                     
  2164                           ;main.c: 56:     RTC_Init();
  2165   000C54  EC9C  F009         	call	_RTC_Init	;wreg free
  2166   000C58                     
  2167                           ;main.c: 57:     RTC_SetDateTime(14, 30, 0, 8, 4, 25);
  2168   000C58  0E1E               	movlw	30
  2169   000C5A  6E0E               	movwf	RTC_SetDateTime@m^0,c
  2170   000C5C  0E00               	movlw	0
  2171   000C5E  6E0F               	movwf	RTC_SetDateTime@s^0,c
  2172   000C60  0E08               	movlw	8
  2173   000C62  6E10               	movwf	RTC_SetDateTime@d^0,c
  2174   000C64  0E04               	movlw	4
  2175   000C66  6E11               	movwf	RTC_SetDateTime@mo^0,c
  2176   000C68  0E19               	movlw	25
  2177   000C6A  6E12               	movwf	RTC_SetDateTime@y^0,c
  2178   000C6C  0E0E               	movlw	14
  2179   000C6E  ECB3  F008         	call	_RTC_SetDateTime
  2180   000C72                     
  2181                           ;main.c: 58:     LCD_Clear();
  2182   000C72  ECD9  F00B         	call	_LCD_Clear	;wreg free
  2183   000C76                     l2001:
  2184                           
  2185                           ;main.c: 60:         RTC_GetDateTime(&h, &m, &s, &d, &mo, &y);
  2186   000C76  0E54               	movlw	low mostrar_rtc@h
  2187   000C78  6E0E               	movwf	RTC_GetDateTime@hour^0,c
  2188   000C7A  0E55               	movlw	low mostrar_rtc@m
  2189   000C7C  6E0F               	movwf	RTC_GetDateTime@min^0,c
  2190   000C7E  0E56               	movlw	low mostrar_rtc@s
  2191   000C80  6E10               	movwf	RTC_GetDateTime@sec^0,c
  2192   000C82  0E57               	movlw	low mostrar_rtc@d
  2193   000C84  6E11               	movwf	RTC_GetDateTime@day^0,c
  2194   000C86  0E58               	movlw	low mostrar_rtc@mo
  2195   000C88  6E12               	movwf	RTC_GetDateTime@month^0,c
  2196   000C8A  0E59               	movlw	low mostrar_rtc@y
  2197   000C8C  6E13               	movwf	RTC_GetDateTime@year^0,c
  2198   000C8E  EC85  F006         	call	_RTC_GetDateTime	;wreg free
  2199   000C92                     
  2200                           ;main.c: 62:         sprintf(buffer, "Fecha:%02d/%02d/20%02d", d, mo, y);
  2201   000C92  0E43               	movlw	low mostrar_rtc@buffer
  2202   000C94  6E2D               	movwf	sprintf@s^0,c
  2203   000C96  0E01               	movlw	low STR_4
  2204   000C98  6E2E               	movwf	sprintf@fmt^0,c
  2205   000C9A  C057  F02F         	movff	mostrar_rtc@d,?_sprintf+2
  2206   000C9E  6A30               	clrf	(?_sprintf+3)^0,c
  2207   000CA0  C058  F031         	movff	mostrar_rtc@mo,?_sprintf+4
  2208   000CA4  6A32               	clrf	(?_sprintf+5)^0,c
  2209   000CA6  C059  F033         	movff	mostrar_rtc@y,?_sprintf+6
  2210   000CAA  6A34               	clrf	(?_sprintf+7)^0,c
  2211   000CAC  EC6B  F00B         	call	_sprintf	;wreg free
  2212   000CB0                     
  2213                           ;main.c: 63:         LCD_String_xy(0, 0, buffer);
  2214   000CB0  0E00               	movlw	0
  2215   000CB2  6E05               	movwf	LCD_String_xy@pos^0,c
  2216   000CB4  0E43               	movlw	low mostrar_rtc@buffer
  2217   000CB6  6E06               	movwf	LCD_String_xy@msg^0,c
  2218   000CB8  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
  2219   000CBA  0E00               	movlw	0
  2220   000CBC  EC18  F00B         	call	_LCD_String_xy
  2221   000CC0                     
  2222                           ;main.c: 66:         sprintf(buffer, "Hora: %02d:%02d:%02d", h, m, s);
  2223   000CC0  0E43               	movlw	low mostrar_rtc@buffer
  2224   000CC2  6E2D               	movwf	sprintf@s^0,c
  2225   000CC4  0E18               	movlw	low STR_5
  2226   000CC6  6E2E               	movwf	sprintf@fmt^0,c
  2227   000CC8  C054  F02F         	movff	mostrar_rtc@h,?_sprintf+2
  2228   000CCC  6A30               	clrf	(?_sprintf+3)^0,c
  2229   000CCE  C055  F031         	movff	mostrar_rtc@m,?_sprintf+4
  2230   000CD2  6A32               	clrf	(?_sprintf+5)^0,c
  2231   000CD4  C056  F033         	movff	mostrar_rtc@s,?_sprintf+6
  2232   000CD8  6A34               	clrf	(?_sprintf+7)^0,c
  2233   000CDA  EC6B  F00B         	call	_sprintf	;wreg free
  2234   000CDE                     
  2235                           ;main.c: 67:         LCD_String_xy(1, 0, buffer);
  2236   000CDE  0E00               	movlw	0
  2237   000CE0  6E05               	movwf	LCD_String_xy@pos^0,c
  2238   000CE2  0E43               	movlw	low mostrar_rtc@buffer
  2239   000CE4  6E06               	movwf	LCD_String_xy@msg^0,c
  2240   000CE6  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
  2241   000CE8  0E01               	movlw	1
  2242   000CEA  EC18  F00B         	call	_LCD_String_xy
  2243   000CEE                     
  2244                           ;main.c: 69:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  2245   000CEE  0E0B               	movlw	11
  2246   000CF0  6E42               	movwf	(??_mostrar_rtc+1)^0,c
  2247   000CF2  0E26               	movlw	38
  2248   000CF4  6E41               	movwf	??_mostrar_rtc^0,c
  2249   000CF6  0E5E               	movlw	94
  2250   000CF8                     u1247:
  2251   000CF8  2EE8               	decfsz	wreg,f,c
  2252   000CFA  D7FE               	bra	u1247
  2253   000CFC  2E41               	decfsz	??_mostrar_rtc^0,f,c
  2254   000CFE  D7FC               	bra	u1247
  2255   000D00  2E42               	decfsz	(??_mostrar_rtc+1)^0,f,c
  2256   000D02  D7FA               	bra	u1247
  2257   000D04  EF3B  F006         	goto	l2001
  2258   000D08  0012               	return		;funcret
  2259   000D0A                     __end_of_mostrar_rtc:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _sprintf *****************
  2263 ;; Defined at:
  2264 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  s               1   44[COMRAM] PTR unsigned char 
  2267 ;;		 -> mostrar_rtc@buffer(17), 
  2268 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  2269 ;;		 -> STR_5(21), STR_4(23), 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  f              11   53[COMRAM] struct _IO_FILE
  2272 ;;  ret             2    0        int 
  2273 ;;  ap              1   52[COMRAM] PTR void [1]
  2274 ;;		 -> ?_sprintf(2), 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  2   44[COMRAM] int 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2284 ;;      Params:         8       0       0       0       0       0       0       0       0
  2285 ;;      Locals:        12       0       0       0       0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2287 ;;      Totals:        20       0       0       0       0       0       0       0       0
  2288 ;;Total ram usage:       20 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 7
  2291 ;; This function calls:
  2292 ;;		_vfprintf
  2293 ;; This function is called by:
  2294 ;;		_mostrar_rtc
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text5
  2299   0016D6                     __ptext5:
  2300                           	callstack 0
  2301   0016D6                     _sprintf:
  2302                           	callstack 22
  2303   0016D6  0E2F               	movlw	low (?_sprintf+2)
  2304   0016D8  6E35               	movwf	sprintf@ap^0,c
  2305   0016DA  C02D  F036         	movff	sprintf@s,sprintf@f
  2306   0016DE  0E00               	movlw	0
  2307   0016E0  6E39               	movwf	(sprintf@f+3)^0,c
  2308   0016E2  0E00               	movlw	0
  2309   0016E4  6E38               	movwf	(sprintf@f+2)^0,c
  2310   0016E6  0E00               	movlw	0
  2311   0016E8  6E40               	movwf	(sprintf@f+10)^0,c
  2312   0016EA  0E00               	movlw	0
  2313   0016EC  6E3F               	movwf	(sprintf@f+9)^0,c
  2314   0016EE  0E36               	movlw	low sprintf@f
  2315   0016F0  6E29               	movwf	vfprintf@fp^0,c
  2316   0016F2  C02E  F02A         	movff	sprintf@fmt,vfprintf@fmt
  2317   0016F6  0E35               	movlw	low sprintf@ap
  2318   0016F8  6E2B               	movwf	vfprintf@ap^0,c
  2319   0016FA  ECDB  F00A         	call	_vfprintf	;wreg free
  2320   0016FE  502D               	movf	sprintf@s^0,w,c
  2321   001700  2438               	addwf	(sprintf@f+2)^0,w,c
  2322   001702  6ED9               	movwf	fsr2l,c
  2323   001704  6ADA               	clrf	fsr2h,c
  2324   001706  6ADF               	clrf	indf2,c
  2325   001708  0012               	return		;funcret
  2326   00170A                     __end_of_sprintf:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _vfprintf *****************
  2330 ;; Defined at:
  2331 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  fp              1   40[COMRAM] PTR struct _IO_FILE
  2334 ;;		 -> sprintf@f(11), 
  2335 ;;  fmt             1   41[COMRAM] PTR const unsigned char 
  2336 ;;		 -> STR_5(21), STR_4(23), 
  2337 ;;  ap              1   42[COMRAM] PTR PTR void 
  2338 ;;		 -> sprintf@ap(1), 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  cfmt            1   43[COMRAM] PTR unsigned char 
  2341 ;;		 -> STR_5(21), STR_4(23), 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  2   40[COMRAM] int 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2351 ;;      Params:         3       0       0       0       0       0       0       0       0
  2352 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2354 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2355 ;;Total ram usage:        4 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 6
  2358 ;; This function calls:
  2359 ;;		_vfpfcnvrt
  2360 ;; This function is called by:
  2361 ;;		_sprintf
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text6
  2366   0015B6                     __ptext6:
  2367                           	callstack 0
  2368   0015B6                     _vfprintf:
  2369                           	callstack 22
  2370   0015B6                     
  2371                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2372   0015B6  C02A  F02C         	movff	vfprintf@fmt,vfprintf@cfmt
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2375   0015BA  EFE7  F00A         	goto	l1875
  2376   0015BE                     l1873:
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2379   0015BE  C029  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  2380   0015C2  0E2C               	movlw	low vfprintf@cfmt
  2381   0015C4  6E21               	movwf	vfpfcnvrt@fmt^0,c
  2382   0015C6  C02B  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  2383   0015CA  ECDC  F004         	call	_vfpfcnvrt	;wreg free
  2384   0015CE                     l1875:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2387   0015CE  C02C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2388   0015D2                     	if	1	;There is more than 1 active tblptr byte
  2389   0015D2  0E08               	movlw	high __smallconst
  2390   0015D4  6EF7               	movwf	tblptrh,c
  2391   0015D6                     	endif
  2392   0015D6                     	if	0	;tblptru may be non-zero
  2393   0015D6                     	endif
  2394   0015D6                     	if	0	;tblptru may be non-zero
  2395   0015D6                     	endif
  2396   0015D6  0008               	tblrd		*
  2397   0015D8  50F5               	movf	tablat,w,c
  2398   0015DA  0900               	iorlw	0
  2399   0015DC  A4D8               	btfss	status,2,c
  2400   0015DE  EFF3  F00A         	goto	u1131
  2401   0015E2  EFF5  F00A         	goto	u1130
  2402   0015E6                     u1131:
  2403   0015E6  EFDF  F00A         	goto	l1873
  2404   0015EA                     u1130:
  2405   0015EA                     
  2406                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2407   0015EA  0E00               	movlw	0
  2408   0015EC  6E2A               	movwf	(?_vfprintf+1)^0,c
  2409   0015EE  0E00               	movlw	0
  2410   0015F0  6E29               	movwf	?_vfprintf^0,c
  2411   0015F2  0012               	return		;funcret
  2412   0015F4                     __end_of_vfprintf:
  2413                           	callstack 0
  2414                           
  2415 ;; *************** function _vfpfcnvrt *****************
  2416 ;; Defined at:
  2417 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  2420 ;;		 -> sprintf@f(11), 
  2421 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  2422 ;;		 -> vfprintf@cfmt(1), 
  2423 ;;  ap              1   33[COMRAM] PTR PTR void 
  2424 ;;		 -> sprintf@ap(1), 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  convarg         4   34[COMRAM] struct .
  2427 ;;  cp              1   39[COMRAM] PTR unsigned char 
  2428 ;;		 -> STR_5(21), STR_4(23), 
  2429 ;;  done            1   38[COMRAM] _Bool 
  2430 ;;  c               1    0        unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2440 ;;      Params:         3       0       0       0       0       0       0       0       0
  2441 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2443 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2444 ;;Total ram usage:        9 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 5
  2447 ;; This function calls:
  2448 ;;		_dtoa
  2449 ;;		_fputc
  2450 ;;		_read_prec_or_width
  2451 ;; This function is called by:
  2452 ;;		_vfprintf
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text7
  2457   0009B8                     __ptext7:
  2458                           	callstack 0
  2459   0009B8                     _vfpfcnvrt:
  2460                           	callstack 22
  2461   0009B8                     
  2462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2463   0009B8  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2464   0009BA  6ED9               	movwf	fsr2l,c
  2465   0009BC  6ADA               	clrf	fsr2h,c
  2466   0009BE  CFDF FFF6          	movff	indf2,tblptrl
  2467   0009C2                     	if	1	;There is more than 1 active tblptr byte
  2468   0009C2  0E08               	movlw	high __smallconst
  2469   0009C4  6EF7               	movwf	tblptrh,c
  2470   0009C6                     	endif
  2471   0009C6                     	if	0	;tblptru may be non-zero
  2472   0009C6                     	endif
  2473   0009C6                     	if	0	;tblptru may be non-zero
  2474   0009C6                     	endif
  2475   0009C6  0008               	tblrd		*
  2476   0009C8  50F5               	movf	tablat,w,c
  2477   0009CA  0A25               	xorlw	37
  2478   0009CC  A4D8               	btfss	status,2,c
  2479   0009CE  EFEB  F004         	goto	u1001
  2480   0009D2  EFED  F004         	goto	u1000
  2481   0009D6                     u1001:
  2482   0009D6  EF77  F005         	goto	l1809
  2483   0009DA                     u1000:
  2484   0009DA                     
  2485                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2486   0009DA  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2487   0009DC  6ED9               	movwf	fsr2l,c
  2488   0009DE  6ADA               	clrf	fsr2h,c
  2489   0009E0  2ADF               	incf	indf2,f,c
  2490   0009E2                     
  2491                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2492   0009E2  0E00               	movlw	0
  2493   0009E4  6E5D               	movwf	(_width+1)^0,c
  2494   0009E6  0E00               	movlw	0
  2495   0009E8  6E5C               	movwf	_width^0,c
  2496   0009EA  C05C  F05E         	movff	_width,_flags
  2497   0009EE                     
  2498                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2499   0009EE  0100               	movlb	0	; () banked
  2500   0009F0  6960               	setf	_prec& (0+255),b
  2501   0009F2  6961               	setf	(_prec+1)& (0+255),b
  2502   0009F4                     
  2503                           ; BSR set to: 0
  2504                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2505   0009F4  6A27               	clrf	vfpfcnvrt@done^0,c
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2508   0009F6  EF17  F005         	goto	l1783
  2509   0009FA                     l1773:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2512   0009FA  825E               	bsf	_flags^0,1,c
  2513   0009FC                     
  2514                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2515   0009FC  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2516   0009FE  6ED9               	movwf	fsr2l,c
  2517   000A00  6ADA               	clrf	fsr2h,c
  2518   000A02  2ADF               	incf	indf2,f,c
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2521   000A04  EF17  F005         	goto	l1783
  2522   000A08                     l1777:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2525   000A08  0E01               	movlw	1
  2526   000A0A  6E27               	movwf	vfpfcnvrt@done^0,c
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2529   000A0C  EF17  F005         	goto	l1783
  2530   000A10                     l1781:
  2531   000A10  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2532   000A12  6ED9               	movwf	fsr2l,c
  2533   000A14  6ADA               	clrf	fsr2h,c
  2534   000A16  CFDF FFF6          	movff	indf2,tblptrl
  2535   000A1A                     	if	1	;There is more than 1 active tblptr byte
  2536   000A1A  0E08               	movlw	high __smallconst
  2537   000A1C  6EF7               	movwf	tblptrh,c
  2538   000A1E                     	endif
  2539   000A1E                     	if	0	;tblptru may be non-zero
  2540   000A1E                     	endif
  2541   000A1E                     	if	0	;tblptru may be non-zero
  2542   000A1E                     	endif
  2543   000A1E  0008               	tblrd		*
  2544   000A20  50F5               	movf	tablat,w,c
  2545                           
  2546                           ; Switch size 1, requested type "simple"
  2547                           ; Number of cases is 1, Range of values is 48 to 48
  2548                           ; switch strategies available:
  2549                           ; Name         Instructions Cycles
  2550                           ; simple_byte            4     3 (average)
  2551                           ;	Chosen strategy is simple_byte
  2552   000A22  0A30               	xorlw	48	; case 48
  2553   000A24  B4D8               	btfsc	status,2,c
  2554   000A26  EFFD  F004         	goto	l1773
  2555   000A2A  EF04  F005         	goto	l1777
  2556   000A2E                     l1783:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2559   000A2E  5027               	movf	vfpfcnvrt@done^0,w,c
  2560   000A30  B4D8               	btfsc	status,2,c
  2561   000A32  EF1D  F005         	goto	u1011
  2562   000A36  EF1F  F005         	goto	u1010
  2563   000A3A                     u1011:
  2564   000A3A  EF08  F005         	goto	l1781
  2565   000A3E                     u1010:
  2566   000A3E                     
  2567                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2568   000A3E  C021  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2569   000A42  C022  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2570   000A46  EC61  F008         	call	_read_prec_or_width	;wreg free
  2571   000A4A  C001  F05C         	movff	?_read_prec_or_width,_width
  2572   000A4E  C002  F05D         	movff	?_read_prec_or_width+1,_width+1
  2573   000A52                     
  2574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2575   000A52  BE5D               	btfsc	(_width+1)^0,7,c
  2576   000A54  EF30  F005         	goto	u1020
  2577   000A58  EF2E  F005         	goto	u1021
  2578   000A5C                     u1021:
  2579   000A5C  EF35  F005         	goto	l1791
  2580   000A60                     u1020:
  2581   000A60                     
  2582                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2583   000A60  805E               	bsf	_flags^0,0,c
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2586   000A62  6C5C               	negf	_width^0,c
  2587   000A64  1E5D               	comf	(_width+1)^0,f,c
  2588   000A66  B0D8               	btfsc	status,0,c
  2589   000A68  2A5D               	incf	(_width+1)^0,f,c
  2590   000A6A                     l1791:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2593   000A6A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2594   000A6C  6ED9               	movwf	fsr2l,c
  2595   000A6E  6ADA               	clrf	fsr2h,c
  2596   000A70  50DF               	movf	indf2,w,c
  2597   000A72  6E28               	movwf	vfpfcnvrt@cp^0,c
  2598   000A74                     
  2599                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2600   000A74  C028  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2601   000A78                     	if	1	;There is more than 1 active tblptr byte
  2602   000A78  0E08               	movlw	high __smallconst
  2603   000A7A  6EF7               	movwf	tblptrh,c
  2604   000A7C                     	endif
  2605   000A7C                     	if	0	;tblptru may be non-zero
  2606   000A7C                     	endif
  2607   000A7C                     	if	0	;tblptru may be non-zero
  2608   000A7C                     	endif
  2609   000A7C  0008               	tblrd		*
  2610   000A7E  50F5               	movf	tablat,w,c
  2611   000A80  0A64               	xorlw	100
  2612   000A82  B4D8               	btfsc	status,2,c
  2613   000A84  EF46  F005         	goto	u1031
  2614   000A88  EF48  F005         	goto	u1030
  2615   000A8C                     u1031:
  2616   000A8C  EF56  F005         	goto	l1797
  2617   000A90                     u1030:
  2618   000A90  C028  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2619   000A94                     	if	1	;There is more than 1 active tblptr byte
  2620   000A94  0E08               	movlw	high __smallconst
  2621   000A96  6EF7               	movwf	tblptrh,c
  2622   000A98                     	endif
  2623   000A98                     	if	0	;tblptru may be non-zero
  2624   000A98                     	endif
  2625   000A98                     	if	0	;tblptru may be non-zero
  2626   000A98                     	endif
  2627   000A98  0008               	tblrd		*
  2628   000A9A  50F5               	movf	tablat,w,c
  2629   000A9C  0A69               	xorlw	105
  2630   000A9E  A4D8               	btfss	status,2,c
  2631   000AA0  EF54  F005         	goto	u1041
  2632   000AA4  EF56  F005         	goto	u1040
  2633   000AA8                     u1041:
  2634   000AA8  EF71  F005         	goto	l1805
  2635   000AAC                     u1040:
  2636   000AAC                     l1797:
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2639   000AAC  5022               	movf	vfpfcnvrt@ap^0,w,c
  2640   000AAE  6ED9               	movwf	fsr2l,c
  2641   000AB0  6ADA               	clrf	fsr2h,c
  2642   000AB2  0E02               	movlw	2
  2643   000AB4  26DF               	addwf	indf2,f,c
  2644   000AB6  5CDF               	subwf	indf2,w,c
  2645   000AB8  6ED9               	movwf	fsr2l,c
  2646   000ABA  6ADA               	clrf	fsr2h,c
  2647   000ABC  CFDE F023          	movff	postinc2,vfpfcnvrt@convarg
  2648   000AC0  CFDE F024          	movff	postinc2,vfpfcnvrt@convarg+1
  2649   000AC4                     
  2650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2651   000AC4  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2652   000AC6  6ED9               	movwf	fsr2l,c
  2653   000AC8  6ADA               	clrf	fsr2h,c
  2654   000ACA  2828               	incf	vfpfcnvrt@cp^0,w,c
  2655   000ACC  6EDF               	movwf	indf2,c
  2656   000ACE                     
  2657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2658   000ACE  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  2659   000AD2  C023  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  2660   000AD6  C024  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2661   000ADA  EC2A  F004         	call	_dtoa	;wreg free
  2662   000ADE  EF88  F005         	goto	l951
  2663   000AE2                     l1805:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2666   000AE2  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2667   000AE4  6ED9               	movwf	fsr2l,c
  2668   000AE6  6ADA               	clrf	fsr2h,c
  2669   000AE8  2ADF               	incf	indf2,f,c
  2670   000AEA  EF88  F005         	goto	l951
  2671   000AEE                     l1809:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2674   000AEE  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2675   000AF0  6ED9               	movwf	fsr2l,c
  2676   000AF2  6ADA               	clrf	fsr2h,c
  2677   000AF4  CFDF FFF6          	movff	indf2,tblptrl
  2678   000AF8                     	if	1	;There is more than 1 active tblptr byte
  2679   000AF8  0E08               	movlw	high __smallconst
  2680   000AFA  6EF7               	movwf	tblptrh,c
  2681   000AFC                     	endif
  2682   000AFC                     	if	0	;tblptru may be non-zero
  2683   000AFC                     	endif
  2684   000AFC                     	if	0	;tblptru may be non-zero
  2685   000AFC                     	endif
  2686   000AFC  0008               	tblrd		*
  2687   000AFE  50F5               	movf	tablat,w,c
  2688   000B00  6E01               	movwf	fputc@c^0,c
  2689   000B02  6A02               	clrf	(fputc@c+1)^0,c
  2690   000B04  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2691   000B08  EC0C  F008         	call	_fputc	;wreg free
  2692   000B0C  EF71  F005         	goto	l1805
  2693   000B10                     l951:
  2694   000B10  0012               	return		;funcret
  2695   000B12                     __end_of_vfpfcnvrt:
  2696                           	callstack 0
  2697                           
  2698 ;; *************** function _read_prec_or_width *****************
  2699 ;; Defined at:
  2700 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  2703 ;;		 -> vfprintf@cfmt(1), 
  2704 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  2705 ;;		 -> sprintf@ap(1), 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  c               1    4[COMRAM] unsigned char 
  2708 ;;  n               2    5[COMRAM] int 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  2    0[COMRAM] int 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2718 ;;      Params:         2       0       0       0       0       0       0       0       0
  2719 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2720 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2721 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2722 ;;Total ram usage:        7 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_vfpfcnvrt
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731                           	psect	text8
  2732   0010C2                     __ptext8:
  2733                           	callstack 0
  2734   0010C2                     _read_prec_or_width:
  2735                           	callstack 26
  2736   0010C2                     
  2737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2738   0010C2  0E00               	movlw	0
  2739   0010C4  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2740   0010C6  0E00               	movlw	0
  2741   0010C8  6E06               	movwf	read_prec_or_width@n^0,c
  2742   0010CA                     
  2743                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2744   0010CA  5001               	movf	read_prec_or_width@fmt^0,w,c
  2745   0010CC  6ED9               	movwf	fsr2l,c
  2746   0010CE  6ADA               	clrf	fsr2h,c
  2747   0010D0  CFDF FFF6          	movff	indf2,tblptrl
  2748   0010D4                     	if	1	;There is more than 1 active tblptr byte
  2749   0010D4  0E08               	movlw	high __smallconst
  2750   0010D6  6EF7               	movwf	tblptrh,c
  2751   0010D8                     	endif
  2752   0010D8                     	if	0	;tblptru may be non-zero
  2753   0010D8                     	endif
  2754   0010D8                     	if	0	;tblptru may be non-zero
  2755   0010D8                     	endif
  2756   0010D8  0008               	tblrd		*
  2757   0010DA  50F5               	movf	tablat,w,c
  2758   0010DC  0A2A               	xorlw	42
  2759   0010DE  A4D8               	btfss	status,2,c
  2760   0010E0  EF74  F008         	goto	u981
  2761   0010E4  EF76  F008         	goto	u980
  2762   0010E8                     u981:
  2763   0010E8  EF9B  F008         	goto	l1761
  2764   0010EC                     u980:
  2765   0010EC                     
  2766                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2767   0010EC  5001               	movf	read_prec_or_width@fmt^0,w,c
  2768   0010EE  6ED9               	movwf	fsr2l,c
  2769   0010F0  6ADA               	clrf	fsr2h,c
  2770   0010F2  2ADF               	incf	indf2,f,c
  2771   0010F4                     
  2772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2773   0010F4  5002               	movf	read_prec_or_width@ap^0,w,c
  2774   0010F6  6ED9               	movwf	fsr2l,c
  2775   0010F8  6ADA               	clrf	fsr2h,c
  2776   0010FA  0E02               	movlw	2
  2777   0010FC  26DF               	addwf	indf2,f,c
  2778   0010FE  5CDF               	subwf	indf2,w,c
  2779   001100  6ED9               	movwf	fsr2l,c
  2780   001102  6ADA               	clrf	fsr2h,c
  2781   001104  CFDE F006          	movff	postinc2,read_prec_or_width@n
  2782   001108  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2785   00110C  EFAE  F008         	goto	l932
  2786   001110                     l1757:
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2789   001110  0E0A               	movlw	10
  2790   001112  0206               	mulwf	read_prec_or_width@n^0,c
  2791   001114  CFF3 F003          	movff	prodl,??_read_prec_or_width
  2792   001118  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  2793   00111C  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  2794   00111E  50F3               	movf	prodl,w,c
  2795   001120  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  2796   001122  5005               	movf	read_prec_or_width@c^0,w,c
  2797   001124  2403               	addwf	??_read_prec_or_width^0,w,c
  2798   001126  6E06               	movwf	read_prec_or_width@n^0,c
  2799   001128  0E00               	movlw	0
  2800   00112A  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2801   00112C  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2802   00112E                     
  2803                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2804   00112E  5001               	movf	read_prec_or_width@fmt^0,w,c
  2805   001130  6ED9               	movwf	fsr2l,c
  2806   001132  6ADA               	clrf	fsr2h,c
  2807   001134  2ADF               	incf	indf2,f,c
  2808   001136                     l1761:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2811   001136  5001               	movf	read_prec_or_width@fmt^0,w,c
  2812   001138  6ED9               	movwf	fsr2l,c
  2813   00113A  6ADA               	clrf	fsr2h,c
  2814   00113C  CFDF FFF6          	movff	indf2,tblptrl
  2815   001140                     	if	1	;There is more than 1 active tblptr byte
  2816   001140  0E08               	movlw	high __smallconst
  2817   001142  6EF7               	movwf	tblptrh,c
  2818   001144                     	endif
  2819   001144                     	if	0	;tblptru may be non-zero
  2820   001144                     	endif
  2821   001144                     	if	0	;tblptru may be non-zero
  2822   001144                     	endif
  2823   001144  0008               	tblrd		*
  2824   001146  50F5               	movf	tablat,w,c
  2825   001148  0FD0               	addlw	208
  2826   00114A  6E05               	movwf	read_prec_or_width@c^0,c
  2827   00114C  0E09               	movlw	9
  2828   00114E  6405               	cpfsgt	read_prec_or_width@c^0,c
  2829   001150  EFAC  F008         	goto	u991
  2830   001154  EFAE  F008         	goto	u990
  2831   001158                     u991:
  2832   001158  EF88  F008         	goto	l1757
  2833   00115C                     u990:
  2834   00115C                     l932:
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2837   00115C  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  2838   001160  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2839   001164  0012               	return		;funcret
  2840   001166                     __end_of_read_prec_or_width:
  2841                           	callstack 0
  2842                           
  2843 ;; *************** function _dtoa *****************
  2844 ;; Defined at:
  2845 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2848 ;;		 -> sprintf@f(11), 
  2849 ;;  d               2   21[COMRAM] int 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  i               2   29[COMRAM] int 
  2852 ;;  w               2   26[COMRAM] int 
  2853 ;;  s               1   28[COMRAM] unsigned char 
  2854 ;;  p               1   25[COMRAM] _Bool 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2864 ;;      Params:         3       0       0       0       0       0       0       0       0
  2865 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2867 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2868 ;;Total ram usage:       11 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 4
  2871 ;; This function calls:
  2872 ;;		___awdiv
  2873 ;;		___awmod
  2874 ;;		_abs
  2875 ;;		_pad
  2876 ;; This function is called by:
  2877 ;;		_vfpfcnvrt
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text9
  2882   000854                     __ptext9:
  2883                           	callstack 0
  2884   000854                     _dtoa:
  2885                           	callstack 22
  2886   000854                     
  2887                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2888   000854  0E01               	movlw	1
  2889   000856  6E1A               	movwf	dtoa@p^0,c
  2890   000858                     
  2891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2892   000858  BE17               	btfsc	(dtoa@d+1)^0,7,c
  2893   00085A  EF31  F004         	goto	u881
  2894   00085E  EF34  F004         	goto	u880
  2895   000862                     u881:
  2896   000862  0E01               	movlw	1
  2897   000864  EF35  F004         	goto	u890
  2898   000868                     u880:
  2899   000868  0E00               	movlw	0
  2900   00086A                     u890:
  2901   00086A  6E1D               	movwf	dtoa@s^0,c
  2902   00086C                     
  2903                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2904   00086C  C05C  F01B         	movff	_width,dtoa@w
  2905   000870  C05D  F01C         	movff	_width+1,dtoa@w+1
  2906   000874                     
  2907                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
  2908   000874  501D               	movf	dtoa@s^0,w,c
  2909   000876  B4D8               	btfsc	status,2,c
  2910   000878  EF40  F004         	goto	u901
  2911   00087C  EF42  F004         	goto	u900
  2912   000880                     u901:
  2913   000880  EF59  F004         	goto	l915
  2914   000884                     u900:
  2915   000884                     
  2916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
  2917   000884  061B               	decf	dtoa@w^0,f,c
  2918   000886  A0D8               	btfss	status,0,c
  2919   000888  061C               	decf	(dtoa@w+1)^0,f,c
  2920   00088A                     
  2921                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2922   00088A  501D               	movf	dtoa@s^0,w,c
  2923   00088C  A4D8               	btfss	status,2,c
  2924   00088E  EF4B  F004         	goto	u911
  2925   000892  EF4D  F004         	goto	u910
  2926   000896                     u911:
  2927   000896  EF53  F004         	goto	l1713
  2928   00089A                     u910:
  2929   00089A  0E00               	movlw	0
  2930   00089C  6E19               	movwf	(_dtoa$863+1)^0,c
  2931   00089E  0E2B               	movlw	43
  2932   0008A0  6E18               	movwf	_dtoa$863^0,c
  2933   0008A2  EF57  F004         	goto	l1715
  2934   0008A6                     l1713:
  2935   0008A6  0E00               	movlw	0
  2936   0008A8  6E19               	movwf	(_dtoa$863+1)^0,c
  2937   0008AA  0E2D               	movlw	45
  2938   0008AC  6E18               	movwf	_dtoa$863^0,c
  2939   0008AE                     l1715:
  2940   0008AE  C018  F01D         	movff	_dtoa$863,dtoa@s
  2941   0008B2                     l915:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2944   0008B2  0E00               	movlw	0
  2945   0008B4  6E1F               	movwf	(dtoa@i+1)^0,c
  2946   0008B6  0E1F               	movlw	31
  2947   0008B8  6E1E               	movwf	dtoa@i^0,c
  2948   0008BA                     
  2949                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2950   0008BA  0100               	movlb	0	; () banked
  2951   0008BC  6B81               	clrf	(_dbuf+31)& (0+255),b
  2952                           
  2953                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2954   0008BE  EF8D  F004         	goto	l1729
  2955   0008C2                     l1719:
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
  2958   0008C2  061E               	decf	dtoa@i^0,f,c
  2959   0008C4  A0D8               	btfss	status,0,c
  2960   0008C6  061F               	decf	(dtoa@i+1)^0,f,c
  2961   0008C8                     
  2962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2963   0008C8  501E               	movf	dtoa@i^0,w,c
  2964   0008CA  0F62               	addlw	low _dbuf
  2965   0008CC  6ED9               	movwf	fsr2l,c
  2966   0008CE  6ADA               	clrf	fsr2h,c
  2967   0008D0  C016  F001         	movff	dtoa@d,___awmod@dividend
  2968   0008D4  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2969   0008D8  0E00               	movlw	0
  2970   0008DA  6E04               	movwf	(___awmod@divisor+1)^0,c
  2971   0008DC  0E0A               	movlw	10
  2972   0008DE  6E03               	movwf	___awmod@divisor^0,c
  2973   0008E0  ECB5  F007         	call	___awmod	;wreg free
  2974   0008E4  C001  F007         	movff	?___awmod,abs@a
  2975   0008E8  C002  F008         	movff	?___awmod+1,abs@a+1
  2976   0008EC  EC85  F00B         	call	_abs	;wreg free
  2977   0008F0  5007               	movf	?_abs^0,w,c
  2978   0008F2  0F30               	addlw	48
  2979   0008F4  6EDF               	movwf	indf2,c
  2980   0008F6                     
  2981                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2982   0008F6  6A1A               	clrf	dtoa@p^0,c
  2983   0008F8                     
  2984                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
  2985   0008F8  061B               	decf	dtoa@w^0,f,c
  2986   0008FA  A0D8               	btfss	status,0,c
  2987   0008FC  061C               	decf	(dtoa@w+1)^0,f,c
  2988   0008FE                     
  2989                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2990   0008FE  C016  F001         	movff	dtoa@d,___awdiv@dividend
  2991   000902  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2992   000906  0E00               	movlw	0
  2993   000908  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2994   00090A  0E0A               	movlw	10
  2995   00090C  6E03               	movwf	___awdiv@divisor^0,c
  2996   00090E  EC54  F007         	call	___awdiv	;wreg free
  2997   000912  C001  F016         	movff	?___awdiv,dtoa@d
  2998   000916  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  2999   00091A                     l1729:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3002   00091A  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  3003   00091C  EF98  F004         	goto	u921
  3004   000920  501F               	movf	(dtoa@i+1)^0,w,c
  3005   000922  E108               	bnz	u920
  3006   000924  041E               	decf	dtoa@i^0,w,c
  3007   000926  A0D8               	btfss	status,0,c
  3008   000928  EF98  F004         	goto	u921
  3009   00092C  EF9A  F004         	goto	u920
  3010   000930                     u921:
  3011   000930  EFBF  F004         	goto	l1739
  3012   000934                     u920:
  3013   000934  5016               	movf	dtoa@d^0,w,c
  3014   000936  1017               	iorwf	(dtoa@d+1)^0,w,c
  3015   000938  A4D8               	btfss	status,2,c
  3016   00093A  EFA1  F004         	goto	u931
  3017   00093E  EFA3  F004         	goto	u930
  3018   000942                     u931:
  3019   000942  EF61  F004         	goto	l1719
  3020   000946                     u930:
  3021   000946  501A               	movf	dtoa@p^0,w,c
  3022   000948  A4D8               	btfss	status,2,c
  3023   00094A  EFA9  F004         	goto	u941
  3024   00094E  EFAB  F004         	goto	u940
  3025   000952                     u941:
  3026   000952  EF61  F004         	goto	l1719
  3027   000956                     u940:
  3028   000956  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  3029   000958  EFB6  F004         	goto	u951
  3030   00095C  501C               	movf	(dtoa@w+1)^0,w,c
  3031   00095E  E108               	bnz	u950
  3032   000960  041B               	decf	dtoa@w^0,w,c
  3033   000962  A0D8               	btfss	status,0,c
  3034   000964  EFB6  F004         	goto	u951
  3035   000968  EFB8  F004         	goto	u950
  3036   00096C                     u951:
  3037   00096C  EFBF  F004         	goto	l1739
  3038   000970                     u950:
  3039   000970  B25E               	btfsc	_flags^0,1,c
  3040   000972  EFBD  F004         	goto	u961
  3041   000976  EFBF  F004         	goto	u960
  3042   00097A                     u961:
  3043   00097A  EF61  F004         	goto	l1719
  3044   00097E                     u960:
  3045   00097E                     l1739:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  3048   00097E  501D               	movf	dtoa@s^0,w,c
  3049   000980  B4D8               	btfsc	status,2,c
  3050   000982  EFC5  F004         	goto	u971
  3051   000986  EFC7  F004         	goto	u970
  3052   00098A                     u971:
  3053   00098A  EFD0  F004         	goto	l1745
  3054   00098E                     u970:
  3055   00098E                     
  3056                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
  3057   00098E  061E               	decf	dtoa@i^0,f,c
  3058   000990  A0D8               	btfss	status,0,c
  3059   000992  061F               	decf	(dtoa@i+1)^0,f,c
  3060   000994                     
  3061                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  3062   000994  501E               	movf	dtoa@i^0,w,c
  3063   000996  0F62               	addlw	low _dbuf
  3064   000998  6ED9               	movwf	fsr2l,c
  3065   00099A  6ADA               	clrf	fsr2h,c
  3066   00099C  C01D  FFDF         	movff	dtoa@s,indf2
  3067   0009A0                     l1745:
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3070   0009A0  C015  F00E         	movff	dtoa@fp,pad@fp
  3071   0009A4  501E               	movf	dtoa@i^0,w,c
  3072   0009A6  0F62               	addlw	low _dbuf
  3073   0009A8  6E0F               	movwf	pad@buf^0,c
  3074   0009AA  C01B  F010         	movff	dtoa@w,pad@p
  3075   0009AE  C01C  F011         	movff	dtoa@w+1,pad@p+1
  3076   0009B2  EC57  F009         	call	_pad	;wreg free
  3077   0009B6  0012               	return		;funcret
  3078   0009B8                     __end_of_dtoa:
  3079                           	callstack 0
  3080                           
  3081 ;; *************** function _pad *****************
  3082 ;; Defined at:
  3083 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  3086 ;;		 -> sprintf@f(11), 
  3087 ;;  buf             1   14[COMRAM] PTR unsigned char 
  3088 ;;		 -> dbuf(32), 
  3089 ;;  p               2   15[COMRAM] int 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  i               2   18[COMRAM] int 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3101 ;;      Params:         4       0       0       0       0       0       0       0       0
  3102 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3103 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3104 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3105 ;;Total ram usage:        7 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; Hardware stack levels required when called: 3
  3108 ;; This function calls:
  3109 ;;		_fputc
  3110 ;;		_fputs
  3111 ;; This function is called by:
  3112 ;;		_dtoa
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text10
  3117   0012AE                     __ptext10:
  3118                           	callstack 0
  3119   0012AE                     _pad:
  3120                           	callstack 22
  3121   0012AE                     
  3122                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  3123   0012AE  A05E               	btfss	_flags^0,0,c
  3124   0012B0  EF5C  F009         	goto	u831
  3125   0012B4  EF5E  F009         	goto	u830
  3126   0012B8                     u831:
  3127   0012B8  EF64  F009         	goto	l1683
  3128   0012BC                     u830:
  3129   0012BC                     
  3130                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3131   0012BC  C00F  F009         	movff	pad@buf,fputs@s
  3132   0012C0  C00E  F00A         	movff	pad@fp,fputs@fp
  3133   0012C4  ECFA  F00A         	call	_fputs	;wreg free
  3134   0012C8                     l1683:
  3135                           
  3136                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3137   0012C8  BE11               	btfsc	(pad@p+1)^0,7,c
  3138   0012CA  EF6B  F009         	goto	u840
  3139   0012CE  EF69  F009         	goto	u841
  3140   0012D2                     u841:
  3141   0012D2  EF6F  F009         	goto	l907
  3142   0012D6                     u840:
  3143   0012D6                     
  3144                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3145   0012D6  0E00               	movlw	0
  3146   0012D8  6E11               	movwf	(pad@p+1)^0,c
  3147   0012DA  0E00               	movlw	0
  3148   0012DC  6E10               	movwf	pad@p^0,c
  3149   0012DE                     l907:
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3152   0012DE  0E00               	movlw	0
  3153   0012E0  6E14               	movwf	(pad@i+1)^0,c
  3154   0012E2  0E00               	movlw	0
  3155   0012E4  6E13               	movwf	pad@i^0,c
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3158   0012E6  EF7F  F009         	goto	l1691
  3159   0012EA                     l1687:
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3162   0012EA  0E00               	movlw	0
  3163   0012EC  6E02               	movwf	(fputc@c+1)^0,c
  3164   0012EE  0E20               	movlw	32
  3165   0012F0  6E01               	movwf	fputc@c^0,c
  3166   0012F2  C00E  F003         	movff	pad@fp,fputc@fp
  3167   0012F6  EC0C  F008         	call	_fputc	;wreg free
  3168   0012FA                     
  3169                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3170   0012FA  4A13               	infsnz	pad@i^0,f,c
  3171   0012FC  2A14               	incf	(pad@i+1)^0,f,c
  3172   0012FE                     l1691:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3175   0012FE  5010               	movf	pad@p^0,w,c
  3176   001300  5C13               	subwf	pad@i^0,w,c
  3177   001302  5014               	movf	(pad@i+1)^0,w,c
  3178   001304  0A80               	xorlw	128
  3179   001306  6E12               	movwf	??_pad^0,c
  3180   001308  5011               	movf	(pad@p+1)^0,w,c
  3181   00130A  0A80               	xorlw	128
  3182   00130C  5812               	subwfb	??_pad^0,w,c
  3183   00130E  A0D8               	btfss	status,0,c
  3184   001310  EF8C  F009         	goto	u851
  3185   001314  EF8E  F009         	goto	u850
  3186   001318                     u851:
  3187   001318  EF75  F009         	goto	l1687
  3188   00131C                     u850:
  3189   00131C                     
  3190                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3191   00131C  B05E               	btfsc	_flags^0,0,c
  3192   00131E  EF93  F009         	goto	u861
  3193   001322  EF95  F009         	goto	u860
  3194   001326                     u861:
  3195   001326  EF9B  F009         	goto	l912
  3196   00132A                     u860:
  3197   00132A                     
  3198                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3199   00132A  C00F  F009         	movff	pad@buf,fputs@s
  3200   00132E  C00E  F00A         	movff	pad@fp,fputs@fp
  3201   001332  ECFA  F00A         	call	_fputs	;wreg free
  3202   001336                     l912:
  3203   001336  0012               	return		;funcret
  3204   001338                     __end_of_pad:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _fputs *****************
  3208 ;; Defined at:
  3209 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  s               1    8[COMRAM] PTR const unsigned char 
  3212 ;;		 -> dbuf(32), 
  3213 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  3214 ;;		 -> sprintf@f(11), 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  i               2   11[COMRAM] int 
  3217 ;;  c               1   10[COMRAM] unsigned char 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  2    8[COMRAM] int 
  3220 ;; Registers used:
  3221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3227 ;;      Params:         2       0       0       0       0       0       0       0       0
  3228 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3230 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3231 ;;Total ram usage:        5 bytes
  3232 ;; Hardware stack levels used: 1
  3233 ;; Hardware stack levels required when called: 2
  3234 ;; This function calls:
  3235 ;;		_fputc
  3236 ;; This function is called by:
  3237 ;;		_pad
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text11
  3242   0015F4                     __ptext11:
  3243                           	callstack 0
  3244   0015F4                     _fputs:
  3245                           	callstack 22
  3246   0015F4  0E00               	movlw	0
  3247   0015F6  6E0D               	movwf	(fputs@i+1)^0,c
  3248   0015F8  0E00               	movlw	0
  3249   0015FA  6E0C               	movwf	fputs@i^0,c
  3250   0015FC  EF09  F00B         	goto	l1597
  3251   001600                     l1593:
  3252   001600  C00B  F001         	movff	fputs@c,fputc@c
  3253   001604  6A02               	clrf	(fputc@c+1)^0,c
  3254   001606  C00A  F003         	movff	fputs@fp,fputc@fp
  3255   00160A  EC0C  F008         	call	_fputc	;wreg free
  3256   00160E  4A0C               	infsnz	fputs@i^0,f,c
  3257   001610  2A0D               	incf	(fputs@i+1)^0,f,c
  3258   001612                     l1597:
  3259   001612  5009               	movf	fputs@s^0,w,c
  3260   001614  240C               	addwf	fputs@i^0,w,c
  3261   001616  6ED9               	movwf	fsr2l,c
  3262   001618  6ADA               	clrf	fsr2h,c
  3263   00161A  50DF               	movf	indf2,w,c
  3264   00161C  6E0B               	movwf	fputs@c^0,c
  3265   00161E  500B               	movf	fputs@c^0,w,c
  3266   001620  A4D8               	btfss	status,2,c
  3267   001622  EF15  F00B         	goto	u701
  3268   001626  EF17  F00B         	goto	u700
  3269   00162A                     u701:
  3270   00162A  EF00  F00B         	goto	l1593
  3271   00162E                     u700:
  3272   00162E  0012               	return		;funcret
  3273   001630                     __end_of_fputs:
  3274                           	callstack 0
  3275                           
  3276 ;; *************** function _fputc *****************
  3277 ;; Defined at:
  3278 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  c               2    0[COMRAM] int 
  3281 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3282 ;;		 -> sprintf@f(11), 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  2    0[COMRAM] int 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3294 ;;      Params:         3       0       0       0       0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3296 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3297 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3298 ;;Total ram usage:        8 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 1
  3301 ;; This function calls:
  3302 ;;		_putch
  3303 ;; This function is called by:
  3304 ;;		_pad
  3305 ;;		_vfpfcnvrt
  3306 ;;		_fputs
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text12
  3311   001018                     __ptext12:
  3312                           	callstack 0
  3313   001018                     _fputc:
  3314                           	callstack 25
  3315   001018  5003               	movf	fputc@fp^0,w,c
  3316   00101A  B4D8               	btfsc	status,2,c
  3317   00101C  EF12  F008         	goto	u661
  3318   001020  EF14  F008         	goto	u660
  3319   001024                     u661:
  3320   001024  EF1C  F008         	goto	l1581
  3321   001028                     u660:
  3322   001028  5003               	movf	fputc@fp^0,w,c
  3323   00102A  A4D8               	btfss	status,2,c
  3324   00102C  EF1A  F008         	goto	u671
  3325   001030  EF1C  F008         	goto	u670
  3326   001034                     u671:
  3327   001034  EF21  F008         	goto	l1583
  3328   001038                     u670:
  3329   001038                     l1581:
  3330   001038  5001               	movf	fputc@c^0,w,c
  3331   00103A  EC03  F00C         	call	_putch
  3332   00103E  EF60  F008         	goto	l976
  3333   001042                     l1583:
  3334   001042  5003               	movf	fputc@fp^0,w,c
  3335   001044  6ED9               	movwf	fsr2l,c
  3336   001046  6ADA               	clrf	fsr2h,c
  3337   001048  0E09               	movlw	9
  3338   00104A  26D9               	addwf	fsr2l,f,c
  3339   00104C  50DE               	movf	postinc2,w,c
  3340   00104E  10DE               	iorwf	postinc2,w,c
  3341   001050  B4D8               	btfsc	status,2,c
  3342   001052  EF2D  F008         	goto	u681
  3343   001056  EF2F  F008         	goto	u680
  3344   00105A                     u681:
  3345   00105A  EF48  F008         	goto	l1587
  3346   00105E                     u680:
  3347   00105E  5003               	movf	fputc@fp^0,w,c
  3348   001060  6ED9               	movwf	fsr2l,c
  3349   001062  6ADA               	clrf	fsr2h,c
  3350   001064  0E09               	movlw	9
  3351   001066  26D9               	addwf	fsr2l,f,c
  3352   001068  5003               	movf	fputc@fp^0,w,c
  3353   00106A  6EE1               	movwf	fsr1l,c
  3354   00106C  6AE2               	clrf	fsr1h,c
  3355   00106E  0E02               	movlw	2
  3356   001070  26E1               	addwf	fsr1l,f,c
  3357   001072  50DE               	movf	postinc2,w,c
  3358   001074  5CE6               	subwf	postinc1,w,c
  3359   001076  50E6               	movf	postinc1,w,c
  3360   001078  0A80               	xorlw	128
  3361   00107A  6E08               	movwf	(??_fputc+4)^0,c
  3362   00107C  50DE               	movf	postinc2,w,c
  3363   00107E  0A80               	xorlw	128
  3364   001080  5808               	subwfb	(??_fputc+4)^0,w,c
  3365   001082  B0D8               	btfsc	status,0,c
  3366   001084  EF46  F008         	goto	u691
  3367   001088  EF48  F008         	goto	u690
  3368   00108C                     u691:
  3369   00108C  EF60  F008         	goto	l976
  3370   001090                     u690:
  3371   001090                     l1587:
  3372   001090  5003               	movf	fputc@fp^0,w,c
  3373   001092  6ED9               	movwf	fsr2l,c
  3374   001094  6ADA               	clrf	fsr2h,c
  3375   001096  0E02               	movlw	2
  3376   001098  26D9               	addwf	fsr2l,f,c
  3377   00109A  50DF               	movf	indf2,w,c
  3378   00109C  6E04               	movwf	??_fputc^0,c
  3379   00109E  5003               	movf	fputc@fp^0,w,c
  3380   0010A0  6ED9               	movwf	fsr2l,c
  3381   0010A2  6ADA               	clrf	fsr2h,c
  3382   0010A4  50DF               	movf	indf2,w,c
  3383   0010A6  2404               	addwf	??_fputc^0,w,c
  3384   0010A8  6ED9               	movwf	fsr2l,c
  3385   0010AA  6ADA               	clrf	fsr2h,c
  3386   0010AC  C001  FFDF         	movff	fputc@c,indf2
  3387   0010B0  5003               	movf	fputc@fp^0,w,c
  3388   0010B2  6ED9               	movwf	fsr2l,c
  3389   0010B4  6ADA               	clrf	fsr2h,c
  3390   0010B6  0E02               	movlw	2
  3391   0010B8  26D9               	addwf	fsr2l,f,c
  3392   0010BA  2ADE               	incf	postinc2,f,c
  3393   0010BC  0E00               	movlw	0
  3394   0010BE  22DD               	addwfc	postdec2,f,c
  3395   0010C0                     l976:
  3396   0010C0  0012               	return		;funcret
  3397   0010C2                     __end_of_fputc:
  3398                           	callstack 0
  3399                           
  3400 ;; *************** function _putch *****************
  3401 ;; Defined at:
  3402 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;  c               1    wreg     unsigned char 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  c               1    0[COMRAM] unsigned char 
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3416 ;;      Params:         0       0       0       0       0       0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3419 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3420 ;;Total ram usage:        0 bytes
  3421 ;; Hardware stack levels used: 1
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_fputc
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text13
  3430   001806                     __ptext13:
  3431                           	callstack 0
  3432   001806                     _putch:
  3433                           	callstack 25
  3434   001806  0012               	return		;funcret
  3435   001808                     __end_of_putch:
  3436                           	callstack 0
  3437                           
  3438 ;; *************** function _abs *****************
  3439 ;; Defined at:
  3440 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  a               2    6[COMRAM] int 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  2    6[COMRAM] int 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3454 ;;      Params:         2       0       0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3456 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3457 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3458 ;;Total ram usage:        4 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_dtoa
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text14
  3468   00170A                     __ptext14:
  3469                           	callstack 0
  3470   00170A                     _abs:
  3471                           	callstack 25
  3472   00170A  BE08               	btfsc	(abs@a+1)^0,7,c
  3473   00170C  EF8A  F00B         	goto	u871
  3474   001710  EF8C  F00B         	goto	u870
  3475   001714                     u871:
  3476   001714  EF92  F00B         	goto	l961
  3477   001718                     u870:
  3478   001718  C007  F007         	movff	abs@a,?_abs
  3479   00171C  C008  F008         	movff	abs@a+1,?_abs+1
  3480   001720  EF9E  F00B         	goto	l964
  3481   001724                     l961:
  3482   001724  C007  F009         	movff	abs@a,??_abs
  3483   001728  C008  F00A         	movff	abs@a+1,??_abs+1
  3484   00172C  1E09               	comf	??_abs^0,f,c
  3485   00172E  1E0A               	comf	(??_abs+1)^0,f,c
  3486   001730  4A09               	infsnz	??_abs^0,f,c
  3487   001732  2A0A               	incf	(??_abs+1)^0,f,c
  3488   001734  C009  F007         	movff	??_abs,?_abs
  3489   001738  C00A  F008         	movff	??_abs+1,?_abs+1
  3490   00173C                     l964:
  3491   00173C  0012               	return		;funcret
  3492   00173E                     __end_of_abs:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _RTC_SetDateTime *****************
  3496 ;; Defined at:
  3497 ;;		line 36 in file "ds1307.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  h               1    wreg     unsigned char 
  3500 ;;  m               1   13[COMRAM] unsigned char 
  3501 ;;  s               1   14[COMRAM] unsigned char 
  3502 ;;  d               1   15[COMRAM] unsigned char 
  3503 ;;  mo              1   16[COMRAM] unsigned char 
  3504 ;;  y               1   17[COMRAM] unsigned char 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  h               1   19[COMRAM] unsigned char 
  3507 ;;  check           1    0        unsigned char 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, status,2, status,0, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3517 ;;      Params:         5       0       0       0       0       0       0       0       0
  3518 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3519 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3520 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3521 ;;Total ram usage:        7 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 2
  3524 ;; This function calls:
  3525 ;;		_DEC2BCD
  3526 ;;		_I2C_Master_Start
  3527 ;;		_I2C_Master_Stop
  3528 ;;		_I2C_Master_Write
  3529 ;; This function is called by:
  3530 ;;		_mostrar_rtc
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text15
  3535   001166                     __ptext15:
  3536                           	callstack 0
  3537   001166                     _RTC_SetDateTime:
  3538                           	callstack 27
  3539                           
  3540                           ;incstack = 0
  3541                           ;RTC_SetDateTime@h stored from wreg
  3542   001166  6E14               	movwf	RTC_SetDateTime@h^0,c
  3543   001168                     
  3544                           ;ds1307.c: 36: void RTC_SetDateTime(unsigned char h, unsigned char m, unsigned char s,;d
      +                          s1307.c: 37:                      unsigned char d, unsigned char mo, unsigned char y) {;
      +                          ds1307.c: 38:     unsigned char check;;ds1307.c: 41:     s &= 0x7F;
  3545   001168  9E0F               	bcf	RTC_SetDateTime@s^0,7,c
  3546   00116A                     
  3547                           ;ds1307.c: 44:     I2C_Master_Start();
  3548   00116A  ECFB  F00B         	call	_I2C_Master_Start	;wreg free
  3549   00116E                     
  3550                           ;ds1307.c: 45:     I2C_Master_Write(0b11010000);
  3551   00116E  0E00               	movlw	0
  3552   001170  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  3553   001172  0ED0               	movlw	208
  3554   001174  6E0C               	movwf	I2C_Master_Write@d^0,c
  3555   001176  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  3556   00117A                     
  3557                           ;ds1307.c: 46:     I2C_Master_Write(0b00000000);
  3558   00117A  0E00               	movlw	0
  3559   00117C  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  3560   00117E  0E00               	movlw	0
  3561   001180  6E0C               	movwf	I2C_Master_Write@d^0,c
  3562   001182  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  3563   001186                     
  3564                           ;ds1307.c: 49:     I2C_Master_Write(DEC2BCD(s));
  3565   001186  500F               	movf	RTC_SetDateTime@s^0,w,c
  3566   001188  EC35  F00B         	call	_DEC2BCD
  3567   00118C  6E13               	movwf	??_RTC_SetDateTime^0,c
  3568   00118E  5013               	movf	??_RTC_SetDateTime^0,w,c
  3569   001190  6E0C               	movwf	I2C_Master_Write@d^0,c
  3570   001192  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  3571   001194  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  3572   001198                     
  3573                           ;ds1307.c: 50:     I2C_Master_Write(DEC2BCD(m));
  3574   001198  500E               	movf	RTC_SetDateTime@m^0,w,c
  3575   00119A  EC35  F00B         	call	_DEC2BCD
  3576   00119E  6E13               	movwf	??_RTC_SetDateTime^0,c
  3577   0011A0  5013               	movf	??_RTC_SetDateTime^0,w,c
  3578   0011A2  6E0C               	movwf	I2C_Master_Write@d^0,c
  3579   0011A4  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  3580   0011A6  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  3581   0011AA                     
  3582                           ;ds1307.c: 51:     I2C_Master_Write(DEC2BCD(h));
  3583   0011AA  5014               	movf	RTC_SetDateTime@h^0,w,c
  3584   0011AC  EC35  F00B         	call	_DEC2BCD
  3585   0011B0  6E13               	movwf	??_RTC_SetDateTime^0,c
  3586   0011B2  5013               	movf	??_RTC_SetDateTime^0,w,c
  3587   0011B4  6E0C               	movwf	I2C_Master_Write@d^0,c
  3588   0011B6  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  3589   0011B8  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  3590   0011BC                     
  3591                           ;ds1307.c: 52:     I2C_Master_Write(DEC2BCD(1));
  3592   0011BC  0E01               	movlw	1
  3593   0011BE  EC35  F00B         	call	_DEC2BCD
  3594   0011C2  6E13               	movwf	??_RTC_SetDateTime^0,c
  3595   0011C4  5013               	movf	??_RTC_SetDateTime^0,w,c
  3596   0011C6  6E0C               	movwf	I2C_Master_Write@d^0,c
  3597   0011C8  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  3598   0011CA  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  3599   0011CE                     
  3600                           ;ds1307.c: 53:     I2C_Master_Write(DEC2BCD(d));
  3601   0011CE  5010               	movf	RTC_SetDateTime@d^0,w,c
  3602   0011D0  EC35  F00B         	call	_DEC2BCD
  3603   0011D4  6E13               	movwf	??_RTC_SetDateTime^0,c
  3604   0011D6  5013               	movf	??_RTC_SetDateTime^0,w,c
  3605   0011D8  6E0C               	movwf	I2C_Master_Write@d^0,c
  3606   0011DA  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  3607   0011DC  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  3608   0011E0                     
  3609                           ;ds1307.c: 54:     I2C_Master_Write(DEC2BCD(mo));
  3610   0011E0  5011               	movf	RTC_SetDateTime@mo^0,w,c
  3611   0011E2  EC35  F00B         	call	_DEC2BCD
  3612   0011E6  6E13               	movwf	??_RTC_SetDateTime^0,c
  3613   0011E8  5013               	movf	??_RTC_SetDateTime^0,w,c
  3614   0011EA  6E0C               	movwf	I2C_Master_Write@d^0,c
  3615   0011EC  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  3616   0011EE  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  3617   0011F2                     
  3618                           ;ds1307.c: 55:     I2C_Master_Write(DEC2BCD(y));
  3619   0011F2  5012               	movf	RTC_SetDateTime@y^0,w,c
  3620   0011F4  EC35  F00B         	call	_DEC2BCD
  3621   0011F8  6E13               	movwf	??_RTC_SetDateTime^0,c
  3622   0011FA  5013               	movf	??_RTC_SetDateTime^0,w,c
  3623   0011FC  6E0C               	movwf	I2C_Master_Write@d^0,c
  3624   0011FE  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  3625   001200  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  3626   001204                     
  3627                           ;ds1307.c: 56:     I2C_Master_Stop();
  3628   001204  ECF7  F00B         	call	_I2C_Master_Stop	;wreg free
  3629   001208  0012               	return		;funcret
  3630   00120A                     __end_of_RTC_SetDateTime:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _DEC2BCD *****************
  3634 ;; Defined at:
  3635 ;;		line 10 in file "ds1307.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  val             1    wreg     unsigned char 
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;  val             1   10[COMRAM] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      unsigned char 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0
  3650 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3651 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3652 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3653 ;;Total ram usage:        3 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 1
  3656 ;; This function calls:
  3657 ;;		___awdiv
  3658 ;;		___awmod
  3659 ;; This function is called by:
  3660 ;;		_RTC_SetDateTime
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text16
  3665   00166A                     __ptext16:
  3666                           	callstack 0
  3667   00166A                     _DEC2BCD:
  3668                           	callstack 27
  3669                           
  3670                           ;incstack = 0
  3671                           ;DEC2BCD@val stored from wreg
  3672   00166A  6E0B               	movwf	DEC2BCD@val^0,c
  3673   00166C                     
  3674                           ;ds1307.c: 11:     return ((val / 10) << 4) | (val % 10);
  3675   00166C  C00B  F001         	movff	DEC2BCD@val,___awmod@dividend
  3676   001670  6A02               	clrf	(___awmod@dividend+1)^0,c
  3677   001672  0E00               	movlw	0
  3678   001674  6E04               	movwf	(___awmod@divisor+1)^0,c
  3679   001676  0E0A               	movlw	10
  3680   001678  6E03               	movwf	___awmod@divisor^0,c
  3681   00167A  ECB5  F007         	call	___awmod	;wreg free
  3682   00167E  C001  F009         	movff	?___awmod,??_DEC2BCD
  3683   001682  C002  F00A         	movff	?___awmod+1,??_DEC2BCD+1
  3684   001686  C00B  F001         	movff	DEC2BCD@val,___awdiv@dividend
  3685   00168A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3686   00168C  0E00               	movlw	0
  3687   00168E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3688   001690  0E0A               	movlw	10
  3689   001692  6E03               	movwf	___awdiv@divisor^0,c
  3690   001694  EC54  F007         	call	___awdiv	;wreg free
  3691   001698  3801               	swapf	?___awdiv^0,w,c
  3692   00169A  0BF0               	andlw	240
  3693   00169C  1009               	iorwf	??_DEC2BCD^0,w,c
  3694   00169E  0012               	return		;funcret
  3695   0016A0                     __end_of_DEC2BCD:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function ___awmod *****************
  3699 ;; Defined at:
  3700 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  dividend        2    0[COMRAM] int 
  3703 ;;  divisor         2    2[COMRAM] int 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  sign            1    5[COMRAM] unsigned char 
  3706 ;;  counter         1    4[COMRAM] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  2    0[COMRAM] int 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3716 ;;      Params:         4       0       0       0       0       0       0       0       0
  3717 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3719 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3720 ;;Total ram usage:        6 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_DEC2BCD
  3726 ;;		_mostrar_temperatura
  3727 ;;		_dtoa
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text17
  3732   000F6A                     __ptext17:
  3733                           	callstack 0
  3734   000F6A                     ___awmod:
  3735                           	callstack 29
  3736   000F6A  6A06               	clrf	___awmod@sign^0,c
  3737   000F6C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3738   000F6E  EFBD  F007         	goto	u770
  3739   000F72  EFBB  F007         	goto	u771
  3740   000F76                     u771:
  3741   000F76  EFC3  F007         	goto	l1651
  3742   000F7A                     u770:
  3743   000F7A  6C01               	negf	___awmod@dividend^0,c
  3744   000F7C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3745   000F7E  B0D8               	btfsc	status,0,c
  3746   000F80  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3747   000F82  0E01               	movlw	1
  3748   000F84  6E06               	movwf	___awmod@sign^0,c
  3749   000F86                     l1651:
  3750   000F86  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3751   000F88  EFCA  F007         	goto	u780
  3752   000F8C  EFC8  F007         	goto	u781
  3753   000F90                     u781:
  3754   000F90  EFCE  F007         	goto	l1655
  3755   000F94                     u780:
  3756   000F94  6C03               	negf	___awmod@divisor^0,c
  3757   000F96  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3758   000F98  B0D8               	btfsc	status,0,c
  3759   000F9A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3760   000F9C                     l1655:
  3761   000F9C  5003               	movf	___awmod@divisor^0,w,c
  3762   000F9E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3763   000FA0  B4D8               	btfsc	status,2,c
  3764   000FA2  EFD5  F007         	goto	u791
  3765   000FA6  EFD7  F007         	goto	u790
  3766   000FAA                     u791:
  3767   000FAA  EFFB  F007         	goto	l1671
  3768   000FAE                     u790:
  3769   000FAE  0E01               	movlw	1
  3770   000FB0  6E05               	movwf	___awmod@counter^0,c
  3771   000FB2  EFDF  F007         	goto	l1661
  3772   000FB6                     l1659:
  3773   000FB6  90D8               	bcf	status,0,c
  3774   000FB8  3603               	rlcf	___awmod@divisor^0,f,c
  3775   000FBA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3776   000FBC  2A05               	incf	___awmod@counter^0,f,c
  3777   000FBE                     l1661:
  3778   000FBE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3779   000FC0  EFE4  F007         	goto	u801
  3780   000FC4  EFE6  F007         	goto	u800
  3781   000FC8                     u801:
  3782   000FC8  EFDB  F007         	goto	l1659
  3783   000FCC                     u800:
  3784   000FCC                     l1663:
  3785   000FCC  5003               	movf	___awmod@divisor^0,w,c
  3786   000FCE  5C01               	subwf	___awmod@dividend^0,w,c
  3787   000FD0  5004               	movf	(___awmod@divisor+1)^0,w,c
  3788   000FD2  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3789   000FD4  A0D8               	btfss	status,0,c
  3790   000FD6  EFEF  F007         	goto	u811
  3791   000FDA  EFF1  F007         	goto	u810
  3792   000FDE                     u811:
  3793   000FDE  EFF5  F007         	goto	l1667
  3794   000FE2                     u810:
  3795   000FE2  5003               	movf	___awmod@divisor^0,w,c
  3796   000FE4  5E01               	subwf	___awmod@dividend^0,f,c
  3797   000FE6  5004               	movf	(___awmod@divisor+1)^0,w,c
  3798   000FE8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3799   000FEA                     l1667:
  3800   000FEA  90D8               	bcf	status,0,c
  3801   000FEC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3802   000FEE  3203               	rrcf	___awmod@divisor^0,f,c
  3803   000FF0  2E05               	decfsz	___awmod@counter^0,f,c
  3804   000FF2  EFE6  F007         	goto	l1663
  3805   000FF6                     l1671:
  3806   000FF6  5006               	movf	___awmod@sign^0,w,c
  3807   000FF8  B4D8               	btfsc	status,2,c
  3808   000FFA  EF01  F008         	goto	u821
  3809   000FFE  EF03  F008         	goto	u820
  3810   001002                     u821:
  3811   001002  EF07  F008         	goto	l1675
  3812   001006                     u820:
  3813   001006  6C01               	negf	___awmod@dividend^0,c
  3814   001008  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3815   00100A  B0D8               	btfsc	status,0,c
  3816   00100C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3817   00100E                     l1675:
  3818   00100E  C001  F001         	movff	___awmod@dividend,?___awmod
  3819   001012  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3820   001016  0012               	return		;funcret
  3821   001018                     __end_of___awmod:
  3822                           	callstack 0
  3823                           
  3824 ;; *************** function ___awdiv *****************
  3825 ;; Defined at:
  3826 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  dividend        2    0[COMRAM] int 
  3829 ;;  divisor         2    2[COMRAM] int 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  quotient        2    6[COMRAM] int 
  3832 ;;  sign            1    5[COMRAM] unsigned char 
  3833 ;;  counter         1    4[COMRAM] unsigned char 
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  2    0[COMRAM] int 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3843 ;;      Params:         4       0       0       0       0       0       0       0       0
  3844 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3846 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3847 ;;Total ram usage:        8 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_DEC2BCD
  3853 ;;		_mostrar_temperatura
  3854 ;;		_dtoa
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text18
  3859   000EA8                     __ptext18:
  3860                           	callstack 0
  3861   000EA8                     ___awdiv:
  3862                           	callstack 29
  3863   000EA8  6A06               	clrf	___awdiv@sign^0,c
  3864   000EAA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3865   000EAC  EF5C  F007         	goto	u710
  3866   000EB0  EF5A  F007         	goto	u711
  3867   000EB4                     u711:
  3868   000EB4  EF62  F007         	goto	l1607
  3869   000EB8                     u710:
  3870   000EB8  6C03               	negf	___awdiv@divisor^0,c
  3871   000EBA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3872   000EBC  B0D8               	btfsc	status,0,c
  3873   000EBE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3874   000EC0  0E01               	movlw	1
  3875   000EC2  6E06               	movwf	___awdiv@sign^0,c
  3876   000EC4                     l1607:
  3877   000EC4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3878   000EC6  EF69  F007         	goto	u720
  3879   000ECA  EF67  F007         	goto	u721
  3880   000ECE                     u721:
  3881   000ECE  EF6F  F007         	goto	l1613
  3882   000ED2                     u720:
  3883   000ED2  6C01               	negf	___awdiv@dividend^0,c
  3884   000ED4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3885   000ED6  B0D8               	btfsc	status,0,c
  3886   000ED8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3887   000EDA  0E01               	movlw	1
  3888   000EDC  1A06               	xorwf	___awdiv@sign^0,f,c
  3889   000EDE                     l1613:
  3890   000EDE  0E00               	movlw	0
  3891   000EE0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3892   000EE2  0E00               	movlw	0
  3893   000EE4  6E07               	movwf	___awdiv@quotient^0,c
  3894   000EE6  5003               	movf	___awdiv@divisor^0,w,c
  3895   000EE8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3896   000EEA  B4D8               	btfsc	status,2,c
  3897   000EEC  EF7A  F007         	goto	u731
  3898   000EF0  EF7C  F007         	goto	u730
  3899   000EF4                     u731:
  3900   000EF4  EFA4  F007         	goto	l1635
  3901   000EF8                     u730:
  3902   000EF8  0E01               	movlw	1
  3903   000EFA  6E05               	movwf	___awdiv@counter^0,c
  3904   000EFC  EF84  F007         	goto	l1621
  3905   000F00                     l1619:
  3906   000F00  90D8               	bcf	status,0,c
  3907   000F02  3603               	rlcf	___awdiv@divisor^0,f,c
  3908   000F04  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3909   000F06  2A05               	incf	___awdiv@counter^0,f,c
  3910   000F08                     l1621:
  3911   000F08  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3912   000F0A  EF89  F007         	goto	u741
  3913   000F0E  EF8B  F007         	goto	u740
  3914   000F12                     u741:
  3915   000F12  EF80  F007         	goto	l1619
  3916   000F16                     u740:
  3917   000F16                     l1623:
  3918   000F16  90D8               	bcf	status,0,c
  3919   000F18  3607               	rlcf	___awdiv@quotient^0,f,c
  3920   000F1A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3921   000F1C  5003               	movf	___awdiv@divisor^0,w,c
  3922   000F1E  5C01               	subwf	___awdiv@dividend^0,w,c
  3923   000F20  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3924   000F22  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3925   000F24  A0D8               	btfss	status,0,c
  3926   000F26  EF97  F007         	goto	u751
  3927   000F2A  EF99  F007         	goto	u750
  3928   000F2E                     u751:
  3929   000F2E  EF9E  F007         	goto	l1631
  3930   000F32                     u750:
  3931   000F32  5003               	movf	___awdiv@divisor^0,w,c
  3932   000F34  5E01               	subwf	___awdiv@dividend^0,f,c
  3933   000F36  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3934   000F38  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3935   000F3A  8007               	bsf	___awdiv@quotient^0,0,c
  3936   000F3C                     l1631:
  3937   000F3C  90D8               	bcf	status,0,c
  3938   000F3E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3939   000F40  3203               	rrcf	___awdiv@divisor^0,f,c
  3940   000F42  2E05               	decfsz	___awdiv@counter^0,f,c
  3941   000F44  EF8B  F007         	goto	l1623
  3942   000F48                     l1635:
  3943   000F48  5006               	movf	___awdiv@sign^0,w,c
  3944   000F4A  B4D8               	btfsc	status,2,c
  3945   000F4C  EFAA  F007         	goto	u761
  3946   000F50  EFAC  F007         	goto	u760
  3947   000F54                     u761:
  3948   000F54  EFB0  F007         	goto	l1639
  3949   000F58                     u760:
  3950   000F58  6C07               	negf	___awdiv@quotient^0,c
  3951   000F5A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3952   000F5C  B0D8               	btfsc	status,0,c
  3953   000F5E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3954   000F60                     l1639:
  3955   000F60  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3956   000F64  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3957   000F68  0012               	return		;funcret
  3958   000F6A                     __end_of___awdiv:
  3959                           	callstack 0
  3960                           
  3961 ;; *************** function _RTC_Init *****************
  3962 ;; Defined at:
  3963 ;;		line 14 in file "ds1307.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  sec             1   14[COMRAM] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3977 ;;      Params:         0       0       0       0       0       0       0       0       0
  3978 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3979 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3980 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3981 ;;Total ram usage:        2 bytes
  3982 ;; Hardware stack levels used: 1
  3983 ;; Hardware stack levels required when called: 2
  3984 ;; This function calls:
  3985 ;;		_I2C_Master_Read
  3986 ;;		_I2C_Master_RepeatedStart
  3987 ;;		_I2C_Master_Start
  3988 ;;		_I2C_Master_Stop
  3989 ;;		_I2C_Master_Write
  3990 ;; This function is called by:
  3991 ;;		_mostrar_rtc
  3992 ;;		_main
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text19
  3997   001338                     __ptext19:
  3998                           	callstack 0
  3999   001338                     _RTC_Init:
  4000                           	callstack 27
  4001   001338                     
  4002                           ;ds1307.c: 15:     unsigned char sec;;ds1307.c: 17:     I2C_Master_Start();
  4003   001338  ECFB  F00B         	call	_I2C_Master_Start	;wreg free
  4004                           
  4005                           ;ds1307.c: 18:     I2C_Master_Write(0b11010000);
  4006   00133C  0E00               	movlw	0
  4007   00133E  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  4008   001340  0ED0               	movlw	208
  4009   001342  6E0C               	movwf	I2C_Master_Write@d^0,c
  4010   001344  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  4011                           
  4012                           ;ds1307.c: 19:     I2C_Master_Write(0x00);
  4013   001348  0E00               	movlw	0
  4014   00134A  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  4015   00134C  0E00               	movlw	0
  4016   00134E  6E0C               	movwf	I2C_Master_Write@d^0,c
  4017   001350  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  4018                           
  4019                           ;ds1307.c: 20:     I2C_Master_RepeatedStart();
  4020   001354  ECFF  F00B         	call	_I2C_Master_RepeatedStart	;wreg free
  4021                           
  4022                           ;ds1307.c: 21:     I2C_Master_Write(0b11010000 | 1);
  4023   001358  0E00               	movlw	0
  4024   00135A  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  4025   00135C  0ED1               	movlw	209
  4026   00135E  6E0C               	movwf	I2C_Master_Write@d^0,c
  4027   001360  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  4028                           
  4029                           ;ds1307.c: 22:     sec = I2C_Master_Read(0);
  4030   001364  0E00               	movlw	0
  4031   001366  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  4032   001368  0E00               	movlw	0
  4033   00136A  6E02               	movwf	I2C_Master_Read@a^0,c
  4034   00136C  EC50  F00B         	call	_I2C_Master_Read	;wreg free
  4035   001370  5002               	movf	?_I2C_Master_Read^0,w,c
  4036   001372  6E0F               	movwf	RTC_Init@sec^0,c
  4037                           
  4038                           ;ds1307.c: 23:     I2C_Master_Stop();
  4039   001374  ECF7  F00B         	call	_I2C_Master_Stop	;wreg free
  4040   001378                     
  4041                           ;ds1307.c: 25:     if (sec & 0x80) {
  4042   001378  AE0F               	btfss	RTC_Init@sec^0,7,c
  4043   00137A  EFC1  F009         	goto	u1161
  4044   00137E  EFC3  F009         	goto	u1160
  4045   001382                     u1161:
  4046   001382  EFDC  F009         	goto	l144
  4047   001386                     u1160:
  4048   001386                     
  4049                           ;ds1307.c: 28:         I2C_Master_Start();
  4050   001386  ECFB  F00B         	call	_I2C_Master_Start	;wreg free
  4051                           
  4052                           ;ds1307.c: 29:         I2C_Master_Write(0b11010000);
  4053   00138A  0E00               	movlw	0
  4054   00138C  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  4055   00138E  0ED0               	movlw	208
  4056   001390  6E0C               	movwf	I2C_Master_Write@d^0,c
  4057   001392  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  4058                           
  4059                           ;ds1307.c: 30:         I2C_Master_Write(0x00);
  4060   001396  0E00               	movlw	0
  4061   001398  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  4062   00139A  0E00               	movlw	0
  4063   00139C  6E0C               	movwf	I2C_Master_Write@d^0,c
  4064   00139E  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  4065                           
  4066                           ;ds1307.c: 31:         I2C_Master_Write(sec & 0x7F);
  4067   0013A2  C00F  F00E         	movff	RTC_Init@sec,??_RTC_Init
  4068   0013A6  0E7F               	movlw	127
  4069   0013A8  160E               	andwf	??_RTC_Init^0,f,c
  4070   0013AA  500E               	movf	??_RTC_Init^0,w,c
  4071   0013AC  6E0C               	movwf	I2C_Master_Write@d^0,c
  4072   0013AE  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  4073   0013B0  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  4074                           
  4075                           ;ds1307.c: 32:         I2C_Master_Stop();
  4076   0013B4  ECF7  F00B         	call	_I2C_Master_Stop	;wreg free
  4077   0013B8                     l144:
  4078   0013B8  0012               	return		;funcret
  4079   0013BA                     __end_of_RTC_Init:
  4080                           	callstack 0
  4081                           
  4082 ;; *************** function _RTC_GetDateTime *****************
  4083 ;; Defined at:
  4084 ;;		line 60 in file "ds1307.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  hour            1   13[COMRAM] PTR unsigned char 
  4087 ;;		 -> mostrar_rtc@h(1), 
  4088 ;;  min             1   14[COMRAM] PTR unsigned char 
  4089 ;;		 -> mostrar_rtc@m(1), 
  4090 ;;  sec             1   15[COMRAM] PTR unsigned char 
  4091 ;;		 -> mostrar_rtc@s(1), 
  4092 ;;  day             1   16[COMRAM] PTR unsigned char 
  4093 ;;		 -> mostrar_rtc@d(1), 
  4094 ;;  month           1   17[COMRAM] PTR unsigned char 
  4095 ;;		 -> mostrar_rtc@mo(1), 
  4096 ;;  year            1   18[COMRAM] PTR unsigned char 
  4097 ;;		 -> mostrar_rtc@y(1), 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4109 ;;      Params:         6       0       0       0       0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4112 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4113 ;;Total ram usage:        6 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; Hardware stack levels required when called: 2
  4116 ;; This function calls:
  4117 ;;		_BCD2DEC
  4118 ;;		_I2C_Master_Read
  4119 ;;		_I2C_Master_RepeatedStart
  4120 ;;		_I2C_Master_Start
  4121 ;;		_I2C_Master_Stop
  4122 ;;		_I2C_Master_Write
  4123 ;; This function is called by:
  4124 ;;		_mostrar_rtc
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text20
  4129   000D0A                     __ptext20:
  4130                           	callstack 0
  4131   000D0A                     _RTC_GetDateTime:
  4132                           	callstack 27
  4133   000D0A                     
  4134                           ;ds1307.c: 60: void RTC_GetDateTime(unsigned char *hour, unsigned char *min, unsigned ch
      +                          ar *sec,;ds1307.c: 61:                      unsigned char *day, unsigned char *month, un
      +                          signed char *year) {;ds1307.c: 62:     I2C_Master_Start();
  4135   000D0A  ECFB  F00B         	call	_I2C_Master_Start	;wreg free
  4136                           
  4137                           ;ds1307.c: 63:     I2C_Master_Write(0b11010000);
  4138   000D0E  0E00               	movlw	0
  4139   000D10  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  4140   000D12  0ED0               	movlw	208
  4141   000D14  6E0C               	movwf	I2C_Master_Write@d^0,c
  4142   000D16  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  4143                           
  4144                           ;ds1307.c: 64:     I2C_Master_Write(0b00000000);
  4145   000D1A  0E00               	movlw	0
  4146   000D1C  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  4147   000D1E  0E00               	movlw	0
  4148   000D20  6E0C               	movwf	I2C_Master_Write@d^0,c
  4149   000D22  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  4150                           
  4151                           ;ds1307.c: 65:     I2C_Master_RepeatedStart();
  4152   000D26  ECFF  F00B         	call	_I2C_Master_RepeatedStart	;wreg free
  4153                           
  4154                           ;ds1307.c: 66:     I2C_Master_Write(0b11010000 | 1);
  4155   000D2A  0E00               	movlw	0
  4156   000D2C  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  4157   000D2E  0ED1               	movlw	209
  4158   000D30  6E0C               	movwf	I2C_Master_Write@d^0,c
  4159   000D32  ECF0  F00B         	call	_I2C_Master_Write	;wreg free
  4160   000D36                     
  4161                           ;ds1307.c: 68:     *sec = BCD2DEC(I2C_Master_Read(1));
  4162   000D36  5010               	movf	RTC_GetDateTime@sec^0,w,c
  4163   000D38  6ED9               	movwf	fsr2l,c
  4164   000D3A  6ADA               	clrf	fsr2h,c
  4165   000D3C  0E00               	movlw	0
  4166   000D3E  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  4167   000D40  0E01               	movlw	1
  4168   000D42  6E02               	movwf	I2C_Master_Read@a^0,c
  4169   000D44  EC50  F00B         	call	_I2C_Master_Read	;wreg free
  4170   000D48  5002               	movf	?_I2C_Master_Read^0,w,c
  4171   000D4A  ECE5  F00B         	call	_BCD2DEC
  4172   000D4E  6EDF               	movwf	indf2,c
  4173   000D50                     
  4174                           ;ds1307.c: 69:     *min = BCD2DEC(I2C_Master_Read(1));
  4175   000D50  500F               	movf	RTC_GetDateTime@min^0,w,c
  4176   000D52  6ED9               	movwf	fsr2l,c
  4177   000D54  6ADA               	clrf	fsr2h,c
  4178   000D56  0E00               	movlw	0
  4179   000D58  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  4180   000D5A  0E01               	movlw	1
  4181   000D5C  6E02               	movwf	I2C_Master_Read@a^0,c
  4182   000D5E  EC50  F00B         	call	_I2C_Master_Read	;wreg free
  4183   000D62  5002               	movf	?_I2C_Master_Read^0,w,c
  4184   000D64  ECE5  F00B         	call	_BCD2DEC
  4185   000D68  6EDF               	movwf	indf2,c
  4186   000D6A                     
  4187                           ;ds1307.c: 70:     *hour = BCD2DEC(I2C_Master_Read(1));
  4188   000D6A  500E               	movf	RTC_GetDateTime@hour^0,w,c
  4189   000D6C  6ED9               	movwf	fsr2l,c
  4190   000D6E  6ADA               	clrf	fsr2h,c
  4191   000D70  0E00               	movlw	0
  4192   000D72  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  4193   000D74  0E01               	movlw	1
  4194   000D76  6E02               	movwf	I2C_Master_Read@a^0,c
  4195   000D78  EC50  F00B         	call	_I2C_Master_Read	;wreg free
  4196   000D7C  5002               	movf	?_I2C_Master_Read^0,w,c
  4197   000D7E  ECE5  F00B         	call	_BCD2DEC
  4198   000D82  6EDF               	movwf	indf2,c
  4199   000D84                     
  4200                           ;ds1307.c: 71:     I2C_Master_Read(1);
  4201   000D84  0E00               	movlw	0
  4202   000D86  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  4203   000D88  0E01               	movlw	1
  4204   000D8A  6E02               	movwf	I2C_Master_Read@a^0,c
  4205   000D8C  EC50  F00B         	call	_I2C_Master_Read	;wreg free
  4206                           
  4207                           ;ds1307.c: 72:     *day = BCD2DEC(I2C_Master_Read(1));
  4208   000D90  5011               	movf	RTC_GetDateTime@day^0,w,c
  4209   000D92  6ED9               	movwf	fsr2l,c
  4210   000D94  6ADA               	clrf	fsr2h,c
  4211   000D96  0E00               	movlw	0
  4212   000D98  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  4213   000D9A  0E01               	movlw	1
  4214   000D9C  6E02               	movwf	I2C_Master_Read@a^0,c
  4215   000D9E  EC50  F00B         	call	_I2C_Master_Read	;wreg free
  4216   000DA2  5002               	movf	?_I2C_Master_Read^0,w,c
  4217   000DA4  ECE5  F00B         	call	_BCD2DEC
  4218   000DA8  6EDF               	movwf	indf2,c
  4219                           
  4220                           ;ds1307.c: 73:     *month = BCD2DEC(I2C_Master_Read(1));
  4221   000DAA  5012               	movf	RTC_GetDateTime@month^0,w,c
  4222   000DAC  6ED9               	movwf	fsr2l,c
  4223   000DAE  6ADA               	clrf	fsr2h,c
  4224   000DB0  0E00               	movlw	0
  4225   000DB2  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  4226   000DB4  0E01               	movlw	1
  4227   000DB6  6E02               	movwf	I2C_Master_Read@a^0,c
  4228   000DB8  EC50  F00B         	call	_I2C_Master_Read	;wreg free
  4229   000DBC  5002               	movf	?_I2C_Master_Read^0,w,c
  4230   000DBE  ECE5  F00B         	call	_BCD2DEC
  4231   000DC2  6EDF               	movwf	indf2,c
  4232                           
  4233                           ;ds1307.c: 74:     *year = BCD2DEC(I2C_Master_Read(0));
  4234   000DC4  5013               	movf	RTC_GetDateTime@year^0,w,c
  4235   000DC6  6ED9               	movwf	fsr2l,c
  4236   000DC8  6ADA               	clrf	fsr2h,c
  4237   000DCA  0E00               	movlw	0
  4238   000DCC  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  4239   000DCE  0E00               	movlw	0
  4240   000DD0  6E02               	movwf	I2C_Master_Read@a^0,c
  4241   000DD2  EC50  F00B         	call	_I2C_Master_Read	;wreg free
  4242   000DD6  5002               	movf	?_I2C_Master_Read^0,w,c
  4243   000DD8  ECE5  F00B         	call	_BCD2DEC
  4244   000DDC  6EDF               	movwf	indf2,c
  4245   000DDE                     
  4246                           ;ds1307.c: 75:     I2C_Master_Stop();
  4247   000DDE  ECF7  F00B         	call	_I2C_Master_Stop	;wreg free
  4248   000DE2  0012               	return		;funcret
  4249   000DE4                     __end_of_RTC_GetDateTime:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function _I2C_Master_Write *****************
  4253 ;; Defined at:
  4254 ;;		line 32 in file "i2c.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  d               2   11[COMRAM] unsigned int 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      unsigned char 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4268 ;;      Params:         2       0       0       0       0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4271 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4272 ;;Total ram usage:        2 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 1
  4275 ;; This function calls:
  4276 ;;		_I2C_Master_Wait
  4277 ;; This function is called by:
  4278 ;;		_RTC_Init
  4279 ;;		_RTC_SetDateTime
  4280 ;;		_RTC_GetDateTime
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text21
  4285   0017E0                     __ptext21:
  4286                           	callstack 0
  4287   0017E0                     _I2C_Master_Write:
  4288                           	callstack 27
  4289   0017E0                     
  4290                           ;i2c.c: 33:     I2C_Master_Wait();
  4291   0017E0  ECB8  F00B         	call	_I2C_Master_Wait	;wreg free
  4292   0017E4                     
  4293                           ;i2c.c: 34:     SSPBUF = d;
  4294   0017E4  C00C  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  4295                           
  4296                           ;i2c.c: 35:     I2C_Master_Wait();
  4297   0017E8  ECB8  F00B         	call	_I2C_Master_Wait	;wreg free
  4298   0017EC  0012               	return		;funcret
  4299   0017EE                     __end_of_I2C_Master_Write:
  4300                           	callstack 0
  4301                           
  4302 ;; *************** function _I2C_Master_Stop *****************
  4303 ;; Defined at:
  4304 ;;		line 27 in file "i2c.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; Hardware stack levels required when called: 1
  4325 ;; This function calls:
  4326 ;;		_I2C_Master_Wait
  4327 ;; This function is called by:
  4328 ;;		_RTC_Init
  4329 ;;		_RTC_SetDateTime
  4330 ;;		_RTC_GetDateTime
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text22
  4335   0017EE                     __ptext22:
  4336                           	callstack 0
  4337   0017EE                     _I2C_Master_Stop:
  4338                           	callstack 27
  4339   0017EE                     
  4340                           ;i2c.c: 28:     I2C_Master_Wait();
  4341   0017EE  ECB8  F00B         	call	_I2C_Master_Wait	;wreg free
  4342   0017F2                     
  4343                           ;i2c.c: 29:     PEN = 1;
  4344   0017F2  84C5               	bsf	4037,2,c	;volatile
  4345   0017F4  0012               	return		;funcret
  4346   0017F6                     __end_of_I2C_Master_Stop:
  4347                           	callstack 0
  4348                           
  4349 ;; *************** function _I2C_Master_Start *****************
  4350 ;; Defined at:
  4351 ;;		line 17 in file "i2c.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4368 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4369 ;;Total ram usage:        0 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; Hardware stack levels required when called: 1
  4372 ;; This function calls:
  4373 ;;		_I2C_Master_Wait
  4374 ;; This function is called by:
  4375 ;;		_RTC_Init
  4376 ;;		_RTC_SetDateTime
  4377 ;;		_RTC_GetDateTime
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text23
  4382   0017F6                     __ptext23:
  4383                           	callstack 0
  4384   0017F6                     _I2C_Master_Start:
  4385                           	callstack 27
  4386   0017F6                     
  4387                           ;i2c.c: 18:     I2C_Master_Wait();
  4388   0017F6  ECB8  F00B         	call	_I2C_Master_Wait	;wreg free
  4389   0017FA                     
  4390                           ;i2c.c: 19:     SEN = 1;
  4391   0017FA  80C5               	bsf	4037,0,c	;volatile
  4392   0017FC  0012               	return		;funcret
  4393   0017FE                     __end_of_I2C_Master_Start:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _I2C_Master_RepeatedStart *****************
  4397 ;; Defined at:
  4398 ;;		line 22 in file "i2c.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4412 ;;      Params:         0       0       0       0       0       0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4415 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4416 ;;Total ram usage:        0 bytes
  4417 ;; Hardware stack levels used: 1
  4418 ;; Hardware stack levels required when called: 1
  4419 ;; This function calls:
  4420 ;;		_I2C_Master_Wait
  4421 ;; This function is called by:
  4422 ;;		_RTC_Init
  4423 ;;		_RTC_GetDateTime
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text24
  4428   0017FE                     __ptext24:
  4429                           	callstack 0
  4430   0017FE                     _I2C_Master_RepeatedStart:
  4431                           	callstack 27
  4432   0017FE                     
  4433                           ;i2c.c: 23:     I2C_Master_Wait();
  4434   0017FE  ECB8  F00B         	call	_I2C_Master_Wait	;wreg free
  4435   001802                     
  4436                           ;i2c.c: 24:     RSEN = 1;
  4437   001802  82C5               	bsf	4037,1,c	;volatile
  4438   001804  0012               	return		;funcret
  4439   001806                     __end_of_I2C_Master_RepeatedStart:
  4440                           	callstack 0
  4441                           
  4442 ;; *************** function _I2C_Master_Read *****************
  4443 ;; Defined at:
  4444 ;;		line 39 in file "i2c.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  a               2    1[COMRAM] unsigned short 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  temp            2    3[COMRAM] unsigned short 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  2    1[COMRAM] unsigned short 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4458 ;;      Params:         2       0       0       0       0       0       0       0       0
  4459 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4461 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4462 ;;Total ram usage:        4 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 1
  4465 ;; This function calls:
  4466 ;;		_I2C_Master_Wait
  4467 ;; This function is called by:
  4468 ;;		_RTC_Init
  4469 ;;		_RTC_GetDateTime
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text25
  4474   0016A0                     __ptext25:
  4475                           	callstack 0
  4476   0016A0                     _I2C_Master_Read:
  4477                           	callstack 27
  4478   0016A0                     
  4479                           ;i2c.c: 40:     unsigned short temp;;i2c.c: 41:     I2C_Master_Wait();
  4480   0016A0  ECB8  F00B         	call	_I2C_Master_Wait	;wreg free
  4481   0016A4                     
  4482                           ;i2c.c: 42:     RCEN = 1;
  4483   0016A4  86C5               	bsf	4037,3,c	;volatile
  4484                           
  4485                           ;i2c.c: 43:     I2C_Master_Wait();
  4486   0016A6  ECB8  F00B         	call	_I2C_Master_Wait	;wreg free
  4487   0016AA                     
  4488                           ;i2c.c: 44:     temp = SSPBUF;
  4489   0016AA  CFC9 F004          	movff	4041,I2C_Master_Read@temp	;volatile
  4490   0016AE  6A05               	clrf	(I2C_Master_Read@temp+1)^0,c
  4491                           
  4492                           ;i2c.c: 45:     I2C_Master_Wait();
  4493   0016B0  ECB8  F00B         	call	_I2C_Master_Wait	;wreg free
  4494   0016B4                     
  4495                           ;i2c.c: 46:     ACKDT = (a)?0:1;
  4496   0016B4  5002               	movf	I2C_Master_Read@a^0,w,c
  4497   0016B6  1003               	iorwf	(I2C_Master_Read@a+1)^0,w,c
  4498   0016B8  B4D8               	btfsc	status,2,c
  4499   0016BA  EF61  F00B         	goto	u1051
  4500   0016BE  EF64  F00B         	goto	u1050
  4501   0016C2                     u1051:
  4502   0016C2  8AC5               	bsf	4037,5,c	;volatile
  4503   0016C4  EF65  F00B         	goto	u1065
  4504   0016C8                     u1050:
  4505   0016C8  9AC5               	bcf	4037,5,c	;volatile
  4506   0016CA                     u1065:
  4507   0016CA                     
  4508                           ;i2c.c: 47:     ACKEN = 1;
  4509   0016CA  88C5               	bsf	4037,4,c	;volatile
  4510   0016CC                     
  4511                           ;i2c.c: 48:     return temp;
  4512   0016CC  C004  F002         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
  4513   0016D0  C005  F003         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
  4514   0016D4  0012               	return		;funcret
  4515   0016D6                     __end_of_I2C_Master_Read:
  4516                           	callstack 0
  4517                           
  4518 ;; *************** function _I2C_Master_Wait *****************
  4519 ;; Defined at:
  4520 ;;		line 13 in file "i2c.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      void 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4534 ;;      Params:         0       0       0       0       0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4536 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4537 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4538 ;;Total ram usage:        1 bytes
  4539 ;; Hardware stack levels used: 1
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_I2C_Master_Start
  4544 ;;		_I2C_Master_RepeatedStart
  4545 ;;		_I2C_Master_Stop
  4546 ;;		_I2C_Master_Write
  4547 ;;		_I2C_Master_Read
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text26
  4552   001770                     __ptext26:
  4553                           	callstack 0
  4554   001770                     _I2C_Master_Wait:
  4555                           	callstack 27
  4556   001770                     l1177:
  4557   001770  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  4558   001774  0E1F               	movlw	31
  4559   001776  1601               	andwf	??_I2C_Master_Wait^0,f,c
  4560   001778  A4D8               	btfss	status,2,c
  4561   00177A  EFC1  F00B         	goto	u351
  4562   00177E  EFC3  F00B         	goto	u350
  4563   001782                     u351:
  4564   001782  EFB8  F00B         	goto	l1177
  4565   001786                     u350:
  4566   001786  B4C7               	btfsc	199,2,c	;volatile
  4567   001788  EFC8  F00B         	goto	u361
  4568   00178C  EFCA  F00B         	goto	u360
  4569   001790                     u361:
  4570   001790  EFB8  F00B         	goto	l1177
  4571   001794                     u360:
  4572   001794  0012               	return		;funcret
  4573   001796                     __end_of_I2C_Master_Wait:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _BCD2DEC *****************
  4577 ;; Defined at:
  4578 ;;		line 6 in file "ds1307.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  val             1    wreg     unsigned char 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  val             1    1[COMRAM] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      unsigned char 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0, prodl, prodh
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4592 ;;      Params:         0       0       0       0       0       0       0       0       0
  4593 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4594 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4595 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4596 ;;Total ram usage:        2 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_RTC_GetDateTime
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text27
  4606   0017CA                     __ptext27:
  4607                           	callstack 0
  4608   0017CA                     _BCD2DEC:
  4609                           	callstack 28
  4610                           
  4611                           ;incstack = 0
  4612                           ;BCD2DEC@val stored from wreg
  4613   0017CA  6E02               	movwf	BCD2DEC@val^0,c
  4614   0017CC                     
  4615                           ;ds1307.c: 7:     return ((val >> 4) * 10) + (val & 0x0F);
  4616   0017CC  C002  F001         	movff	BCD2DEC@val,??_BCD2DEC
  4617   0017D0  0E0F               	movlw	15
  4618   0017D2  1601               	andwf	??_BCD2DEC^0,f,c
  4619   0017D4  3802               	swapf	BCD2DEC@val^0,w,c
  4620   0017D6  0B0F               	andlw	15
  4621   0017D8  0D0A               	mullw	10
  4622   0017DA  50F3               	movf	243,w,c
  4623   0017DC  2401               	addwf	??_BCD2DEC^0,w,c
  4624   0017DE  0012               	return		;funcret
  4625   0017E0                     __end_of_BCD2DEC:
  4626                           	callstack 0
  4627                           
  4628 ;; *************** function _LCD_String_xy *****************
  4629 ;; Defined at:
  4630 ;;		line 53 in file "LCD.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  row             1    wreg     unsigned char 
  4633 ;;  pos             1    4[COMRAM] unsigned char 
  4634 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  4635 ;;		 -> mostrar_rtc@buffer(17), STR_3(17), STR_2(7), mostrar_temperatura@buffer(6), 
  4636 ;;		 -> STR_1(13), 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  row             1    7[COMRAM] unsigned char 
  4639 ;;  location        1    8[COMRAM] unsigned char 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      void 
  4642 ;; Registers used:
  4643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4649 ;;      Params:         3       0       0       0       0       0       0       0       0
  4650 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4652 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4653 ;;Total ram usage:        5 bytes
  4654 ;; Hardware stack levels used: 1
  4655 ;; Hardware stack levels required when called: 2
  4656 ;; This function calls:
  4657 ;;		_LCD_Command
  4658 ;;		_LCD_String
  4659 ;; This function is called by:
  4660 ;;		_mostrar_temperatura
  4661 ;;		_mostrar_rtc
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text28
  4666   001630                     __ptext28:
  4667                           	callstack 0
  4668   001630                     _LCD_String_xy:
  4669                           	callstack 27
  4670                           
  4671                           ;incstack = 0
  4672                           ;LCD_String_xy@row stored from wreg
  4673   001630  6E08               	movwf	LCD_String_xy@row^0,c
  4674   001632                     
  4675                           ;LCD.c: 55:     if (row == 0) {
  4676   001632  5008               	movf	LCD_String_xy@row^0,w,c
  4677   001634  A4D8               	btfss	status,2,c
  4678   001636  EF1F  F00B         	goto	u1151
  4679   00163A  EF21  F00B         	goto	u1150
  4680   00163E                     u1151:
  4681   00163E  EF27  F00B         	goto	l1897
  4682   001642                     u1150:
  4683   001642                     
  4684                           ;LCD.c: 56:         location = 0x80 | (pos & 0x0F);
  4685   001642  5005               	movf	LCD_String_xy@pos^0,w,c
  4686   001644  0B0F               	andlw	15
  4687   001646  0980               	iorlw	128
  4688   001648  6E09               	movwf	LCD_String_xy@location^0,c
  4689                           
  4690                           ;LCD.c: 57:     } else {
  4691   00164A  EF2B  F00B         	goto	l1899
  4692   00164E                     l1897:
  4693                           
  4694                           ;LCD.c: 58:         location = 0xC0 | (pos & 0x0F);
  4695   00164E  5005               	movf	LCD_String_xy@pos^0,w,c
  4696   001650  0B0F               	andlw	15
  4697   001652  09C0               	iorlw	192
  4698   001654  6E09               	movwf	LCD_String_xy@location^0,c
  4699   001656                     l1899:
  4700                           
  4701                           ;LCD.c: 60:     LCD_Command(location);
  4702   001656  5009               	movf	LCD_String_xy@location^0,w,c
  4703   001658  EC62  F00A         	call	_LCD_Command
  4704   00165C                     
  4705                           ;LCD.c: 61:     LCD_String(msg);
  4706   00165C  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  4707   001660  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4708   001664  ECDD  F009         	call	_LCD_String	;wreg free
  4709   001668  0012               	return		;funcret
  4710   00166A                     __end_of_LCD_String_xy:
  4711                           	callstack 0
  4712                           
  4713 ;; *************** function _LCD_String *****************
  4714 ;; Defined at:
  4715 ;;		line 45 in file "LCD.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  4718 ;;		 -> mostrar_rtc@buffer(17), STR_3(17), STR_2(7), mostrar_temperatura@buffer(6), 
  4719 ;;		 -> STR_1(13), 
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;		None
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  1    wreg      void 
  4724 ;; Registers used:
  4725 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4731 ;;      Params:         2       0       0       0       0       0       0       0       0
  4732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4734 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4735 ;;Total ram usage:        2 bytes
  4736 ;; Hardware stack levels used: 1
  4737 ;; Hardware stack levels required when called: 1
  4738 ;; This function calls:
  4739 ;;		_LCD_Char
  4740 ;; This function is called by:
  4741 ;;		_LCD_String_xy
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text29
  4746   0013BA                     __ptext29:
  4747                           	callstack 0
  4748   0013BA                     _LCD_String:
  4749                           	callstack 27
  4750   0013BA                     
  4751                           ;LCD.c: 45: void LCD_String(const char *msg);LCD.c: 46: {;LCD.c: 47:     while((*msg) !=
      +                           0) {
  4752   0013BA  EFF3  F009         	goto	l1843
  4753   0013BE                     l1839:
  4754                           
  4755                           ;LCD.c: 48:         LCD_Char(*msg);
  4756   0013BE  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4757   0013C2  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4758   0013C6  6AF8               	clrf	tblptru,c
  4759   0013C8  0E07               	movlw	(high __ramtop+-1)
  4760   0013CA  64F7               	cpfsgt	tblptrh,c
  4761   0013CC  D003               	bra	u1077
  4762   0013CE  0008               	tblrd		*
  4763   0013D0  50F5               	movf	tablat,w,c
  4764   0013D2  D005               	bra	u1070
  4765   0013D4                     u1077:
  4766   0013D4  CFF6 FFE1          	movff	tblptrl,fsr1l
  4767   0013D8  CFF7 FFE2          	movff	tblptrh,fsr1h
  4768   0013DC  50E7               	movf	indf1,w,c
  4769   0013DE                     u1070:
  4770   0013DE  EC38  F00A         	call	_LCD_Char
  4771   0013E2                     
  4772                           ;LCD.c: 49:         msg++;
  4773   0013E2  4A03               	infsnz	LCD_String@msg^0,f,c
  4774   0013E4  2A04               	incf	(LCD_String@msg+1)^0,f,c
  4775   0013E6                     l1843:
  4776                           
  4777                           ;LCD.c: 47:     while((*msg) != 0) {
  4778   0013E6  C003  FFF6         	movff	LCD_String@msg,tblptrl
  4779   0013EA  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  4780   0013EE  6AF8               	clrf	tblptru,c
  4781   0013F0  0E07               	movlw	(high __ramtop+-1)
  4782   0013F2  64F7               	cpfsgt	tblptrh,c
  4783   0013F4  D003               	bra	u1087
  4784   0013F6  0008               	tblrd		*
  4785   0013F8  50F5               	movf	tablat,w,c
  4786   0013FA  D005               	bra	u1080
  4787   0013FC                     u1087:
  4788   0013FC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4789   001400  CFF7 FFE2          	movff	tblptrh,fsr1h
  4790   001404  50E7               	movf	indf1,w,c
  4791   001406                     u1080:
  4792   001406  0900               	iorlw	0
  4793   001408  A4D8               	btfss	status,2,c
  4794   00140A  EF09  F00A         	goto	u1091
  4795   00140E  EF0B  F00A         	goto	u1090
  4796   001412                     u1091:
  4797   001412  EFDF  F009         	goto	l1839
  4798   001416                     u1090:
  4799   001416  0012               	return		;funcret
  4800   001418                     __end_of_LCD_String:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function _LCD_Char *****************
  4804 ;; Defined at:
  4805 ;;		line 30 in file "LCD.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  dat             1    wreg     unsigned char 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  dat             1    1[COMRAM] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4819 ;;      Params:         0       0       0       0       0       0       0       0       0
  4820 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4821 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4822 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4823 ;;Total ram usage:        2 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_LCD_String
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text30
  4833   001470                     __ptext30:
  4834                           	callstack 0
  4835   001470                     _LCD_Char:
  4836                           	callstack 27
  4837                           
  4838                           ;incstack = 0
  4839                           ;LCD_Char@dat stored from wreg
  4840   001470  6E02               	movwf	LCD_Char@dat^0,c
  4841   001472                     
  4842                           ;LCD.c: 30: void LCD_Char(unsigned char dat);LCD.c: 31: {;LCD.c: 32:     LATD = (LATD & 
      +                          0x0f) | (0xF0 & dat);
  4843   001472  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  4844   001476  0EF0               	movlw	240
  4845   001478  1601               	andwf	??_LCD_Char^0,f,c
  4846   00147A  508C               	movf	140,w,c	;volatile
  4847   00147C  0B0F               	andlw	15
  4848   00147E  1001               	iorwf	??_LCD_Char^0,w,c
  4849   001480  6E8C               	movwf	140,c	;volatile
  4850   001482                     
  4851                           ;LCD.c: 33:     LATD0 = 1;
  4852   001482  808C               	bsf	3980,0,c	;volatile
  4853   001484                     
  4854                           ;LCD.c: 34:     LATD2 = 1;
  4855   001484  848C               	bsf	3980,2,c	;volatile
  4856   001486                     
  4857                           ;LCD.c: 35:     __nop();
  4858   001486  0000               	nop	
  4859   001488                     
  4860                           ;LCD.c: 36:     LATD2 = 0;
  4861   001488  948C               	bcf	3980,2,c	;volatile
  4862   00148A                     
  4863                           ;LCD.c: 37:     _delay((unsigned long)((1)*(8000000/4000.0)));
  4864   00148A  0E03               	movlw	3
  4865   00148C  6E01               	movwf	??_LCD_Char^0,c
  4866   00148E  0E98               	movlw	152
  4867   001490                     u1257:
  4868   001490  2EE8               	decfsz	wreg,f,c
  4869   001492  D7FE               	bra	u1257
  4870   001494  2E01               	decfsz	??_LCD_Char^0,f,c
  4871   001496  D7FC               	bra	u1257
  4872   001498                     
  4873                           ;LCD.c: 38:     LATD = (LATD & 0x0f) | ((dat << 4) & 0xF0);
  4874   001498  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  4875   00149C  3A01               	swapf	??_LCD_Char^0,f,c
  4876   00149E  0EF0               	movlw	240
  4877   0014A0  1601               	andwf	??_LCD_Char^0,f,c
  4878   0014A2  0EF0               	movlw	240
  4879   0014A4  1601               	andwf	??_LCD_Char^0,f,c
  4880   0014A6  508C               	movf	140,w,c	;volatile
  4881   0014A8  0B0F               	andlw	15
  4882   0014AA  1001               	iorwf	??_LCD_Char^0,w,c
  4883   0014AC  6E8C               	movwf	140,c	;volatile
  4884   0014AE                     
  4885                           ;LCD.c: 39:     LATD2 = 1;
  4886   0014AE  848C               	bsf	3980,2,c	;volatile
  4887   0014B0                     
  4888                           ;LCD.c: 40:     __nop();
  4889   0014B0  0000               	nop	
  4890   0014B2                     
  4891                           ;LCD.c: 41:     LATD2 = 0;
  4892   0014B2  948C               	bcf	3980,2,c	;volatile
  4893                           
  4894                           ;LCD.c: 42:     _delay((unsigned long)((3)*(8000000/4000.0)));
  4895   0014B4  0E08               	movlw	8
  4896   0014B6  6E01               	movwf	??_LCD_Char^0,c
  4897   0014B8  0ECA               	movlw	202
  4898   0014BA                     u1267:
  4899   0014BA  2EE8               	decfsz	wreg,f,c
  4900   0014BC  D7FE               	bra	u1267
  4901   0014BE  2E01               	decfsz	??_LCD_Char^0,f,c
  4902   0014C0  D7FC               	bra	u1267
  4903   0014C2  0012               	return		;funcret
  4904   0014C4                     __end_of_LCD_Char:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function _LCD_Init *****************
  4908 ;; Defined at:
  4909 ;;		line 4 in file "LCD.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4923 ;;      Params:         0       0       0       0       0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4925 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4926 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4927 ;;Total ram usage:        1 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; Hardware stack levels required when called: 1
  4930 ;; This function calls:
  4931 ;;		_LCD_Command
  4932 ;; This function is called by:
  4933 ;;		_mostrar_temperatura
  4934 ;;		_mostrar_rtc
  4935 ;;		_main
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text31
  4940   00173E                     __ptext31:
  4941                           	callstack 0
  4942   00173E                     _LCD_Init:
  4943                           	callstack 28
  4944   00173E                     
  4945                           ;LCD.c: 6:     TRISD = 0;
  4946   00173E  6A95               	clrf	149,c	;volatile
  4947   001740                     
  4948                           ;LCD.c: 7:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4949   001740  0E27               	movlw	39
  4950   001742  6E03               	movwf	??_LCD_Init^0,c
  4951   001744  0EF5               	movlw	245
  4952   001746                     u1277:
  4953   001746  2EE8               	decfsz	wreg,f,c
  4954   001748  D7FE               	bra	u1277
  4955   00174A  2E03               	decfsz	??_LCD_Init^0,f,c
  4956   00174C  D7FC               	bra	u1277
  4957   00174E  0000               	nop	
  4958   001750                     
  4959                           ;LCD.c: 8:     LCD_Command(0x02);
  4960   001750  0E02               	movlw	2
  4961   001752  EC62  F00A         	call	_LCD_Command
  4962   001756                     
  4963                           ;LCD.c: 9:     LCD_Command(0x28);
  4964   001756  0E28               	movlw	40
  4965   001758  EC62  F00A         	call	_LCD_Command
  4966   00175C                     
  4967                           ;LCD.c: 10:     LCD_Command(0x01);
  4968   00175C  0E01               	movlw	1
  4969   00175E  EC62  F00A         	call	_LCD_Command
  4970   001762                     
  4971                           ;LCD.c: 11:     LCD_Command(0x0c);
  4972   001762  0E0C               	movlw	12
  4973   001764  EC62  F00A         	call	_LCD_Command
  4974   001768                     
  4975                           ;LCD.c: 12:     LCD_Command(0x06);
  4976   001768  0E06               	movlw	6
  4977   00176A  EC62  F00A         	call	_LCD_Command
  4978   00176E  0012               	return		;funcret
  4979   001770                     __end_of_LCD_Init:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function _LCD_Clear *****************
  4983 ;; Defined at:
  4984 ;;		line 64 in file "LCD.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4998 ;;      Params:         0       0       0       0       0       0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5000 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5001 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5002 ;;Total ram usage:        1 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 1
  5005 ;; This function calls:
  5006 ;;		_LCD_Command
  5007 ;; This function is called by:
  5008 ;;		_mostrar_temperatura
  5009 ;;		_mostrar_rtc
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text32
  5014   0017B2                     __ptext32:
  5015                           	callstack 0
  5016   0017B2                     _LCD_Clear:
  5017                           	callstack 28
  5018   0017B2                     
  5019                           ;LCD.c: 66:     LCD_Command(0x01);
  5020   0017B2  0E01               	movlw	1
  5021   0017B4  EC62  F00A         	call	_LCD_Command
  5022   0017B8                     
  5023                           ;LCD.c: 67:     _delay((unsigned long)((2)*(8000000/4000.0)));
  5024   0017B8  0E06               	movlw	6
  5025   0017BA  6E03               	movwf	??_LCD_Clear^0,c
  5026   0017BC  0E30               	movlw	48
  5027   0017BE                     u1287:
  5028   0017BE  2EE8               	decfsz	wreg,f,c
  5029   0017C0  D7FE               	bra	u1287
  5030   0017C2  2E03               	decfsz	??_LCD_Clear^0,f,c
  5031   0017C4  D7FC               	bra	u1287
  5032   0017C6  D000               	nop2	
  5033   0017C8  0012               	return		;funcret
  5034   0017CA                     __end_of_LCD_Clear:
  5035                           	callstack 0
  5036                           
  5037 ;; *************** function _LCD_Command *****************
  5038 ;; Defined at:
  5039 ;;		line 15 in file "LCD.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  cmd             1    wreg     unsigned char 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  cmd             1    1[COMRAM] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5053 ;;      Params:         0       0       0       0       0       0       0       0       0
  5054 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5055 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5056 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5057 ;;Total ram usage:        2 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; This function calls:
  5060 ;;		Nothing
  5061 ;; This function is called by:
  5062 ;;		_LCD_Init
  5063 ;;		_LCD_String_xy
  5064 ;;		_LCD_Clear
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text33
  5069   0014C4                     __ptext33:
  5070                           	callstack 0
  5071   0014C4                     _LCD_Command:
  5072                           	callstack 28
  5073                           
  5074                           ;incstack = 0
  5075                           ;LCD_Command@cmd stored from wreg
  5076   0014C4  6E02               	movwf	LCD_Command@cmd^0,c
  5077   0014C6                     
  5078                           ;LCD.c: 15: void LCD_Command(unsigned char cmd);LCD.c: 16: {;LCD.c: 17:     LATD = (LATD
      +                           & 0x0f) | (0xF0 & cmd);
  5079   0014C6  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  5080   0014CA  0EF0               	movlw	240
  5081   0014CC  1601               	andwf	??_LCD_Command^0,f,c
  5082   0014CE  508C               	movf	140,w,c	;volatile
  5083   0014D0  0B0F               	andlw	15
  5084   0014D2  1001               	iorwf	??_LCD_Command^0,w,c
  5085   0014D4  6E8C               	movwf	140,c	;volatile
  5086   0014D6                     
  5087                           ;LCD.c: 18:     LATD0 = 0;
  5088   0014D6  908C               	bcf	3980,0,c	;volatile
  5089   0014D8                     
  5090                           ;LCD.c: 19:     LATD2 = 1;
  5091   0014D8  848C               	bsf	3980,2,c	;volatile
  5092   0014DA                     
  5093                           ;LCD.c: 20:     __nop();
  5094   0014DA  0000               	nop	
  5095   0014DC                     
  5096                           ;LCD.c: 21:     LATD2 = 0;
  5097   0014DC  948C               	bcf	3980,2,c	;volatile
  5098   0014DE                     
  5099                           ;LCD.c: 22:     _delay((unsigned long)((1)*(8000000/4000.0)));
  5100   0014DE  0E03               	movlw	3
  5101   0014E0  6E01               	movwf	??_LCD_Command^0,c
  5102   0014E2  0E98               	movlw	152
  5103   0014E4                     u1297:
  5104   0014E4  2EE8               	decfsz	wreg,f,c
  5105   0014E6  D7FE               	bra	u1297
  5106   0014E8  2E01               	decfsz	??_LCD_Command^0,f,c
  5107   0014EA  D7FC               	bra	u1297
  5108   0014EC                     
  5109                           ;LCD.c: 23:     LATD = (LATD & 0x0f) | ((cmd << 4) & 0xF0);
  5110   0014EC  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  5111   0014F0  3A01               	swapf	??_LCD_Command^0,f,c
  5112   0014F2  0EF0               	movlw	240
  5113   0014F4  1601               	andwf	??_LCD_Command^0,f,c
  5114   0014F6  0EF0               	movlw	240
  5115   0014F8  1601               	andwf	??_LCD_Command^0,f,c
  5116   0014FA  508C               	movf	140,w,c	;volatile
  5117   0014FC  0B0F               	andlw	15
  5118   0014FE  1001               	iorwf	??_LCD_Command^0,w,c
  5119   001500  6E8C               	movwf	140,c	;volatile
  5120   001502                     
  5121                           ;LCD.c: 24:     LATD2 = 1;
  5122   001502  848C               	bsf	3980,2,c	;volatile
  5123   001504                     
  5124                           ;LCD.c: 25:     __nop();
  5125   001504  0000               	nop	
  5126   001506                     
  5127                           ;LCD.c: 26:     LATD2 = 0;
  5128   001506  948C               	bcf	3980,2,c	;volatile
  5129                           
  5130                           ;LCD.c: 27:     _delay((unsigned long)((3)*(8000000/4000.0)));
  5131   001508  0E08               	movlw	8
  5132   00150A  6E01               	movwf	??_LCD_Command^0,c
  5133   00150C  0ECA               	movlw	202
  5134   00150E                     u1307:
  5135   00150E  2EE8               	decfsz	wreg,f,c
  5136   001510  D7FE               	bra	u1307
  5137   001512  2E01               	decfsz	??_LCD_Command^0,f,c
  5138   001514  D7FC               	bra	u1307
  5139   001516  0012               	return		;funcret
  5140   001518                     __end_of_LCD_Command:
  5141                           	callstack 0
  5142                           
  5143 ;; *************** function _I2C_Master_Init *****************
  5144 ;; Defined at:
  5145 ;;		line 4 in file "i2c.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  c               4   13[COMRAM] const unsigned long 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5159 ;;      Params:         4       0       0       0       0       0       0       0       0
  5160 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5161 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5162 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5163 ;;Total ram usage:        8 bytes
  5164 ;; Hardware stack levels used: 1
  5165 ;; Hardware stack levels required when called: 1
  5166 ;; This function calls:
  5167 ;;		___lldiv
  5168 ;; This function is called by:
  5169 ;;		_mostrar_rtc
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text34
  5174   001418                     __ptext34:
  5175                           	callstack 0
  5176   001418                     _I2C_Master_Init:
  5177                           	callstack 28
  5178   001418                     
  5179                           ;i2c.c: 5:     TRISB0 = 1;
  5180   001418  8093               	bsf	3987,0,c	;volatile
  5181                           
  5182                           ;i2c.c: 6:     TRISB1 = 1;
  5183   00141A  8293               	bsf	3987,1,c	;volatile
  5184   00141C                     
  5185                           ;i2c.c: 7:     SSPCON1 = 0b00101000;
  5186   00141C  0E28               	movlw	40
  5187   00141E  6EC6               	movwf	198,c	;volatile
  5188   001420                     
  5189                           ;i2c.c: 8:     SSPCON2 = 0;
  5190   001420  6AC5               	clrf	197,c	;volatile
  5191   001422                     
  5192                           ;i2c.c: 9:     SSPADD = (8000000 / (4 * c)) - 1;
  5193   001422  0E00               	movlw	0
  5194   001424  6E01               	movwf	___lldiv@dividend^0,c
  5195   001426  0E12               	movlw	18
  5196   001428  6E02               	movwf	(___lldiv@dividend+1)^0,c
  5197   00142A  0E7A               	movlw	122
  5198   00142C  6E03               	movwf	(___lldiv@dividend+2)^0,c
  5199   00142E  0E00               	movlw	0
  5200   001430  6E04               	movwf	(___lldiv@dividend+3)^0,c
  5201   001432  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  5202   001436  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  5203   00143A  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  5204   00143E  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  5205   001442  0E02               	movlw	2
  5206   001444                     u1145:
  5207   001444  90D8               	bcf	status,0,c
  5208   001446  3612               	rlcf	??_I2C_Master_Init^0,f,c
  5209   001448  3613               	rlcf	(??_I2C_Master_Init+1)^0,f,c
  5210   00144A  3614               	rlcf	(??_I2C_Master_Init+2)^0,f,c
  5211   00144C  3615               	rlcf	(??_I2C_Master_Init+3)^0,f,c
  5212   00144E  2EE8               	decfsz	wreg,f,c
  5213   001450  EF22  F00A         	goto	u1145
  5214   001454  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  5215   001458  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  5216   00145C  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  5217   001460  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  5218   001464  EC05  F009         	call	___lldiv	;wreg free
  5219   001468  0401               	decf	?___lldiv^0,w,c
  5220   00146A  6EC8               	movwf	200,c	;volatile
  5221   00146C                     
  5222                           ;i2c.c: 10:     SSPSTAT = 0;
  5223   00146C  6AC7               	clrf	199,c	;volatile
  5224   00146E  0012               	return		;funcret
  5225   001470                     __end_of_I2C_Master_Init:
  5226                           	callstack 0
  5227                           
  5228 ;; *************** function ___lldiv *****************
  5229 ;; Defined at:
  5230 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  dividend        4    0[COMRAM] unsigned long 
  5233 ;;  divisor         4    4[COMRAM] unsigned long 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  quotient        4    8[COMRAM] unsigned long 
  5236 ;;  counter         1   12[COMRAM] unsigned char 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  4    0[COMRAM] unsigned long 
  5239 ;; Registers used:
  5240 ;;		wreg, status,2, status,0
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5246 ;;      Params:         8       0       0       0       0       0       0       0       0
  5247 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5249 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5250 ;;Total ram usage:       13 bytes
  5251 ;; Hardware stack levels used: 1
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_I2C_Master_Init
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text35
  5260   00120A                     __ptext35:
  5261                           	callstack 0
  5262   00120A                     ___lldiv:
  5263                           	callstack 28
  5264   00120A  0E00               	movlw	0
  5265   00120C  6E09               	movwf	___lldiv@quotient^0,c
  5266   00120E  0E00               	movlw	0
  5267   001210  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5268   001212  0E00               	movlw	0
  5269   001214  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5270   001216  0E00               	movlw	0
  5271   001218  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5272   00121A  5005               	movf	___lldiv@divisor^0,w,c
  5273   00121C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5274   00121E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5275   001220  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5276   001222  B4D8               	btfsc	status,2,c
  5277   001224  EF16  F009         	goto	u1101
  5278   001228  EF18  F009         	goto	u1100
  5279   00122C                     u1101:
  5280   00122C  EF4E  F009         	goto	l236
  5281   001230                     u1100:
  5282   001230  0E01               	movlw	1
  5283   001232  6E0D               	movwf	___lldiv@counter^0,c
  5284   001234  EF22  F009         	goto	l1857
  5285   001238                     l1855:
  5286   001238  90D8               	bcf	status,0,c
  5287   00123A  3605               	rlcf	___lldiv@divisor^0,f,c
  5288   00123C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5289   00123E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5290   001240  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5291   001242  2A0D               	incf	___lldiv@counter^0,f,c
  5292   001244                     l1857:
  5293   001244  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5294   001246  EF27  F009         	goto	u1111
  5295   00124A  EF29  F009         	goto	u1110
  5296   00124E                     u1111:
  5297   00124E  EF1C  F009         	goto	l1855
  5298   001252                     u1110:
  5299   001252                     l1859:
  5300   001252  90D8               	bcf	status,0,c
  5301   001254  3609               	rlcf	___lldiv@quotient^0,f,c
  5302   001256  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5303   001258  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5304   00125A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5305   00125C  5005               	movf	___lldiv@divisor^0,w,c
  5306   00125E  5C01               	subwf	___lldiv@dividend^0,w,c
  5307   001260  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5308   001262  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5309   001264  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5310   001266  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5311   001268  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5312   00126A  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5313   00126C  A0D8               	btfss	status,0,c
  5314   00126E  EF3B  F009         	goto	u1121
  5315   001272  EF3D  F009         	goto	u1120
  5316   001276                     u1121:
  5317   001276  EF46  F009         	goto	l1867
  5318   00127A                     u1120:
  5319   00127A  5005               	movf	___lldiv@divisor^0,w,c
  5320   00127C  5E01               	subwf	___lldiv@dividend^0,f,c
  5321   00127E  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5322   001280  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5323   001282  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5324   001284  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5325   001286  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5326   001288  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5327   00128A  8009               	bsf	___lldiv@quotient^0,0,c
  5328   00128C                     l1867:
  5329   00128C  90D8               	bcf	status,0,c
  5330   00128E  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5331   001290  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5332   001292  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5333   001294  3205               	rrcf	___lldiv@divisor^0,f,c
  5334   001296  2E0D               	decfsz	___lldiv@counter^0,f,c
  5335   001298  EF29  F009         	goto	l1859
  5336   00129C                     l236:
  5337   00129C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5338   0012A0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5339   0012A4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5340   0012A8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5341   0012AC  0012               	return		;funcret
  5342   0012AE                     __end_of___lldiv:
  5343                           	callstack 0
  5344                           
  5345                           	psect	rparam
  5346   000001                     ___rparam_used  equ	1
  5347   000000                     ___param_bank   equ	0
  5348   000000                     __Lparam        equ	__Lrparam
  5349   000000                     __Hparam        equ	__Hrparam
  5350                           
  5351                           	psect	idloc
  5352                           
  5353                           ;Config register IDLOC0 @ 0x200000
  5354                           ;	unspecified, using default values
  5355   200000                     	org	2097152
  5356   200000  FF                 	db	255
  5357                           
  5358                           ;Config register IDLOC1 @ 0x200001
  5359                           ;	unspecified, using default values
  5360   200001                     	org	2097153
  5361   200001  FF                 	db	255
  5362                           
  5363                           ;Config register IDLOC2 @ 0x200002
  5364                           ;	unspecified, using default values
  5365   200002                     	org	2097154
  5366   200002  FF                 	db	255
  5367                           
  5368                           ;Config register IDLOC3 @ 0x200003
  5369                           ;	unspecified, using default values
  5370   200003                     	org	2097155
  5371   200003  FF                 	db	255
  5372                           
  5373                           ;Config register IDLOC4 @ 0x200004
  5374                           ;	unspecified, using default values
  5375   200004                     	org	2097156
  5376   200004  FF                 	db	255
  5377                           
  5378                           ;Config register IDLOC5 @ 0x200005
  5379                           ;	unspecified, using default values
  5380   200005                     	org	2097157
  5381   200005  FF                 	db	255
  5382                           
  5383                           ;Config register IDLOC6 @ 0x200006
  5384                           ;	unspecified, using default values
  5385   200006                     	org	2097158
  5386   200006  FF                 	db	255
  5387                           
  5388                           ;Config register IDLOC7 @ 0x200007
  5389                           ;	unspecified, using default values
  5390   200007                     	org	2097159
  5391   200007  FF                 	db	255
  5392                           
  5393                           	psect	config
  5394                           
  5395                           ;Config register CONFIG1L @ 0x300000
  5396                           ;	PLL Prescaler Selection bits
  5397                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  5398                           ;	System Clock Postscaler Selection bits
  5399                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5400                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5401                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5402   300000                     	org	3145728
  5403   300000  00                 	db	0
  5404                           
  5405                           ;Config register CONFIG1H @ 0x300001
  5406                           ;	Oscillator Selection bits
  5407                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5408                           ;	Fail-Safe Clock Monitor Enable bit
  5409                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5410                           ;	Internal/External Oscillator Switchover bit
  5411                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5412   300001                     	org	3145729
  5413   300001  09                 	db	9
  5414                           
  5415                           ;Config register CONFIG2L @ 0x300002
  5416                           ;	Power-up Timer Enable bit
  5417                           ;	PWRT = OFF, PWRT disabled
  5418                           ;	Brown-out Reset Enable bits
  5419                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5420                           ;	Brown-out Reset Voltage bits
  5421                           ;	BORV = 3, Minimum setting 2.05V
  5422                           ;	USB Voltage Regulator Enable bit
  5423                           ;	VREGEN = OFF, USB voltage regulator disabled
  5424   300002                     	org	3145730
  5425   300002  1F                 	db	31
  5426                           
  5427                           ;Config register CONFIG2H @ 0x300003
  5428                           ;	Watchdog Timer Enable bit
  5429                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5430                           ;	Watchdog Timer Postscale Select bits
  5431                           ;	WDTPS = 32768, 1:32768
  5432   300003                     	org	3145731
  5433   300003  1E                 	db	30
  5434                           
  5435                           ; Padding undefined space
  5436   300004                     	org	3145732
  5437   300004  FF                 	db	255
  5438                           
  5439                           ;Config register CONFIG3H @ 0x300005
  5440                           ;	CCP2 MUX bit
  5441                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5442                           ;	PORTB A/D Enable bit
  5443                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5444                           ;	Low-Power Timer 1 Oscillator Enable bit
  5445                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5446                           ;	MCLR Pin Enable bit
  5447                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  5448   300005                     	org	3145733
  5449   300005  01                 	db	1
  5450                           
  5451                           ;Config register CONFIG4L @ 0x300006
  5452                           ;	Stack Full/Underflow Reset Enable bit
  5453                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5454                           ;	Single-Supply ICSP Enable bit
  5455                           ;	LVP = OFF, Single-Supply ICSP disabled
  5456                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5457                           ;	ICPRT = OFF, ICPORT disabled
  5458                           ;	Extended Instruction Set Enable bit
  5459                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5460                           ;	Background Debugger Enable bit
  5461                           ;	DEBUG = 0x1, unprogrammed default
  5462   300006                     	org	3145734
  5463   300006  81                 	db	129
  5464                           
  5465                           ; Padding undefined space
  5466   300007                     	org	3145735
  5467   300007  FF                 	db	255
  5468                           
  5469                           ;Config register CONFIG5L @ 0x300008
  5470                           ;	Code Protection bit
  5471                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5472                           ;	Code Protection bit
  5473                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5474                           ;	Code Protection bit
  5475                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5476                           ;	Code Protection bit
  5477                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5478   300008                     	org	3145736
  5479   300008  0F                 	db	15
  5480                           
  5481                           ;Config register CONFIG5H @ 0x300009
  5482                           ;	Boot Block Code Protection bit
  5483                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5484                           ;	Data EEPROM Code Protection bit
  5485                           ;	CPD = OFF, Data EEPROM is not code-protected
  5486   300009                     	org	3145737
  5487   300009  C0                 	db	192
  5488                           
  5489                           ;Config register CONFIG6L @ 0x30000A
  5490                           ;	Write Protection bit
  5491                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5492                           ;	Write Protection bit
  5493                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5494                           ;	Write Protection bit
  5495                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5496                           ;	Write Protection bit
  5497                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5498   30000A                     	org	3145738
  5499   30000A  0F                 	db	15
  5500                           
  5501                           ;Config register CONFIG6H @ 0x30000B
  5502                           ;	Configuration Register Write Protection bit
  5503                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5504                           ;	Boot Block Write Protection bit
  5505                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5506                           ;	Data EEPROM Write Protection bit
  5507                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5508   30000B                     	org	3145739
  5509   30000B  E0                 	db	224
  5510                           
  5511                           ;Config register CONFIG7L @ 0x30000C
  5512                           ;	Table Read Protection bit
  5513                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5514                           ;	Table Read Protection bit
  5515                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5516                           ;	Table Read Protection bit
  5517                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5518                           ;	Table Read Protection bit
  5519                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5520   30000C                     	org	3145740
  5521   30000C  0F                 	db	15
  5522                           
  5523                           ;Config register CONFIG7H @ 0x30000D
  5524                           ;	Boot Block Table Read Protection bit
  5525                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5526   30000D                     	org	3145741
  5527   30000D  40                 	db	64
  5528                           tosu	equ	0xFFF
  5529                           tosh	equ	0xFFE
  5530                           tosl	equ	0xFFD
  5531                           stkptr	equ	0xFFC
  5532                           pclatu	equ	0xFFB
  5533                           pclath	equ	0xFFA
  5534                           pcl	equ	0xFF9
  5535                           tblptru	equ	0xFF8
  5536                           tblptrh	equ	0xFF7
  5537                           tblptrl	equ	0xFF6
  5538                           tablat	equ	0xFF5
  5539                           prodh	equ	0xFF4
  5540                           prodl	equ	0xFF3
  5541                           indf0	equ	0xFEF
  5542                           postinc0	equ	0xFEE
  5543                           postdec0	equ	0xFED
  5544                           preinc0	equ	0xFEC
  5545                           plusw0	equ	0xFEB
  5546                           fsr0h	equ	0xFEA
  5547                           fsr0l	equ	0xFE9
  5548                           wreg	equ	0xFE8
  5549                           indf1	equ	0xFE7
  5550                           postinc1	equ	0xFE6
  5551                           postdec1	equ	0xFE5
  5552                           preinc1	equ	0xFE4
  5553                           plusw1	equ	0xFE3
  5554                           fsr1h	equ	0xFE2
  5555                           fsr1l	equ	0xFE1
  5556                           bsr	equ	0xFE0
  5557                           indf2	equ	0xFDF
  5558                           postinc2	equ	0xFDE
  5559                           postdec2	equ	0xFDD
  5560                           preinc2	equ	0xFDC
  5561                           plusw2	equ	0xFDB
  5562                           fsr2h	equ	0xFDA
  5563                           fsr2l	equ	0xFD9
  5564                           status	equ	0xFD8

Data Sizes:
    Strings     81
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      94
    BANK0           160      0      34
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> mostrar_rtc@buffer(COMRAM[17]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> mostrar_rtc@buffer(COMRAM[17]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> mostrar_rtc@buffer(COMRAM[17]), mostrar_temperatura@buffer(COMRAM[6]), STR_1(CODE[13]), STR_2(CODE[7]), 
		 -> STR_3(CODE[17]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> mostrar_rtc@buffer(COMRAM[17]), mostrar_temperatura@buffer(COMRAM[6]), STR_1(CODE[13]), STR_2(CODE[7]), 
		 -> STR_3(CODE[17]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    RTC_GetDateTime@day	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@d(COMRAM[1]), 

    RTC_GetDateTime@hour	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@h(COMRAM[1]), 

    RTC_GetDateTime@min	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@m(COMRAM[1]), 

    RTC_GetDateTime@month	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@mo(COMRAM[1]), 

    RTC_GetDateTime@sec	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@s(COMRAM[1]), 

    RTC_GetDateTime@year	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@y(COMRAM[1]), 

    S784$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> mostrar_rtc@buffer(COMRAM[17]), 

    S784$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_4(CODE[23]), STR_5(CODE[21]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> mostrar_rtc@buffer(COMRAM[17]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 23
		 -> STR_4(CODE[23]), STR_5(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_4(CODE[23]), STR_5(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_4(CODE[23]), STR_5(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_mostrar_rtc
    _mostrar_temperatura->_DHT11_GetTemperature
    _DHT11_GetTemperature->_DHT11_Read
    _mostrar_rtc->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _RTC_SetDateTime->_I2C_Master_Write
    _DEC2BCD->___awdiv
    _RTC_Init->_I2C_Master_Write
    _RTC_GetDateTime->_I2C_Master_Write
    _I2C_Master_Write->_DEC2BCD
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6603
                                             89 COMRAM     2     2      0
                           _LCD_Init
                           _RTC_Init
                        _mostrar_rtc
                _mostrar_temperatura
 ---------------------------------------------------------------------------------
 (1) _mostrar_temperatura                                  9     9      0    1319
                                             14 COMRAM     9     9      0
               _DHT11_GetTemperature
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _DHT11_GetTemperature                                12    12      0     225
                                              2 COMRAM    12    12      0
                         _DHT11_Read
 ---------------------------------------------------------------------------------
 (3) _DHT11_Read                                           2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _mostrar_rtc                                         25    25      0    5116
                                             64 COMRAM    25    25      0
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                    _RTC_GetDateTime
                           _RTC_Init
                    _RTC_SetDateTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    14      8    3011
                                             44 COMRAM    20    12      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2806
                                             40 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           10     7      3    2672
                                             31 COMRAM     9     6      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    1833
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4     747
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2     333
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _RTC_SetDateTime                                      8     3      5     851
                                             13 COMRAM     7     2      5
                            _DEC2BCD
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _DEC2BCD                                              3     3      0     666
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     306
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _RTC_Init                                             2     2      0     138
                                             13 COMRAM     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_GetDateTime                                      6     0      6     261
                                             13 COMRAM     6     0      6
                            _BCD2DEC
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2      40
                                             11 COMRAM     2     0      2
                            _DEC2BCD (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2      53
                                              1 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BCD2DEC                                              2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     238
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2      76
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     187
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     164
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
   _RTC_Init
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC2BCD (ARG)
         ___awdiv
         ___awmod
       _I2C_Master_Wait (ARG)
   _mostrar_rtc
     _I2C_Master_Init
       ___lldiv
     _LCD_Clear
       _LCD_Command
     _LCD_Init
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _RTC_GetDateTime
       _BCD2DEC
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _RTC_Init
     _RTC_SetDateTime
       _DEC2BCD
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
   _mostrar_temperatura
     _DHT11_GetTemperature
       _DHT11_Read
     _LCD_Clear
     _LCD_Init
     _LCD_String_xy
     ___awdiv
     ___awmod

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      34     21.2%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     91      94     98.9%
BITBIGSFRh          58      0       0      0.0%
BITBIGSFRlh         49      0       0      0.0%
BITBIGSFRlll        32      0       0      0.0%
BITBIGSFRllh        18      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     128      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri May 09 16:51:04 2025

                    ?_LCD_Command 0001                                l11 151C                                l22 0B4C  
                              l15 1546                                l31 0BAA                                l23 0B4A  
                              l18 1568                                l35 0C10                                l27 0B82  
                              l28 0B80                                l72 1794                                l81 17F4  
                              l66 146E                                l75 17FC                                l84 17EC  
                              l78 1804                                l87 16D4                      ___awdiv@sign 0006  
                     ?_LCD_String 0003              _DHT11_GetTemperature 0B12                   __end_of_BCD2DEC 17E0  
                             l110 14C2                               l104 176E                               l121 1668  
                             l107 1516                               l124 17C8                               l116 1416  
                             l140 169E                               l150 0DE2                               l144 13B8  
                             l137 17DE                               l243 12AC                               l147 1208  
                             l236 129C                               l440 0F68                               l453 1016  
                             l910 131C                               l912 1336                               l907 12DE  
                             l915 08B2                               l932 115C                               l951 0B10  
                             l928 09B6                               l936 1164                               l961 1724  
                             l964 173C                               l957 15F2                               l887 1708  
                             l976 10C0                               l984 162E                               l987 1806  
                             u420 152A                               u421 1526                               u350 1786  
                             u430 1544                               u351 1782                               u431 1540  
                             u360 1794                               u440 1554                               u600 0BCC  
                             _PEN 7E2A                               u361 1790                               u441 1550  
                             u601 0BC8                               u450 1566                               u610 0C08  
                             u451 1562                               u611 0C04                               u700 162E  
                             u701 162A                               u710 0EB8                               u550 0B3E  
                             u711 0EB4                               u551 0B3A                               u720 0ED2  
                             u800 0FCC                               u560 0B5A                               u721 0ECE  
                             u801 0FC8                               u561 0B56                               u730 0EF8  
                             u810 0FE2                               u570 0B74                               u731 0EF4  
                             u811 0FDE                               u571 0B70                               u740 0F16  
                             u820 1006                               u660 1028                               u900 0884  
                             u580 0B90                               _SEN 7E28                               u741 0F12  
                             u821 1002                   __end_of_DEC2BCD 16A0                               u661 1024  
                             u901 0880                               u581 0B8C                               u750 0F32  
                             u670 1038                               u830 12BC                               u910 089A  
                             u590 0BAA                               u751 0F2E                               u671 1034  
                             u831 12B8                               u911 0896                               u591 0BA6  
                             u760 0F58                               u680 105E                               u840 12D6  
                             u920 0934                               u761 0F54                               u681 105A  
                             u841 12D2                               u921 0930                               u770 0F7A  
                             u690 1090                               u850 131C                               u930 0946  
                             u771 0F76                               u691 108C                               u851 1318  
                             u931 0942                               u780 0F94                               u860 132A  
                             u940 0956                               u781 0F90                               u861 1326  
                             u941 0952                               u790 0FAE                               u870 1718  
                             u950 0970                               u791 0FAA                               u871 1714  
                             u951 096C                               u960 097E                               u880 0868  
                             u961 097A                               u881 0862                               u970 098E  
                             u890 086A                               u971 098A                               u980 10EC  
                             u981 10E8                               u990 115C                               u991 1158  
         __end_of_RTC_SetDateTime 120A                               _abs 170A                               _pad 12AE  
                    ___awmod@sign 0006                               wreg 0FE8                       LCD_Char@dat 0002  
                            l2001 0C76                              l2011 0CEE                              l2003 0C92  
                            ?_abs 0007                              l2005 0CB0                              l2021 1592  
                            l2013 156A                              l1311 14D6                              l2007 0CC0  
                            l2023 1596                              l2015 156E                              l1321 14EC  
                            l1313 14D8                              l2009 0CDE                              l1401 0BBA  
                            l2017 1576                              l1323 1502                              l1315 14DA  
                            l1403 0BBC                              l1411 0C0E                              l2019 157A  
                            l1325 1504                              l1317 14DC                              l1309 14C6  
                            l1181 1472                              l1261 1532                              l1253 1518  
                            l1405 0BCC                              l1327 1506                              l1319 14DE  
                            l1431 1756                              l1191 148A                              l1183 1482  
                            l1175 1770                              l1271 1566                              l1263 1536  
                            l1407 0C08                              l1433 175C                              l1425 173E  
                            l1193 1498                              l1185 1484                              l1337 17CC  
                            l1177 1770                              l1281 1802                              l1601 0EAA  
                            l1265 1544                              l1451 17B2                              l1435 1762  
                            l1427 1740                              l1195 14AE                              l1187 1486  
                            l1179 1786                              l1275 17F6                              l1283 17EE  
                            l1611 0EDA                              l1603 0EB8                              l1267 1554  
                            l1259 152A                              l1453 17B8                              l1437 1768  
                            l1429 1750                              l1197 14B0                              l1189 1488  
                            l1277 17FA                              l1285 17F2                              l1621 0F08  
                            l1613 0EDE                              l1605 0EC0                              l1701 0858  
                            l1269 1556                              l1381 0B24                              l1199 14B2  
                            l1279 17FE                              l1631 0F3C                              l1623 0F16  
                            l1615 0EE6                              l1607 0EC4                              l1711 089A  
                            l1703 086C                              l1391 0B74                              l1383 0B2E  
                            l1633 0F42                              l1625 0F1C                              l1617 0EF8  
                            l1609 0ED2                              l1721 08C8                              l1713 08A6  
                            l1705 0874                              l1801 0ACE                              l1393 0B90  
                            l1385 0B30                              l1377 0B12                              l1627 0F32  
                            l1619 0F00                              l1635 0F48                              l1651 0F86  
                            l1643 0F6A                              l1731 0934                              l1723 08F6  
                            l1715 08AE                              l1707 0884                              l1387 0B3E  
                            l1379 0B16                              l1901 165C                              l1637 0F58  
                            l1629 0F3A                              l1661 0FBE                              l1653 0F94  
                            l1645 0F6C                              l1581 1038                              l1741 098E  
                            l1733 0946                              l1725 08F8                              l1717 08BA  
                            l1709 088A                              l1805 0AE2                              l1389 0B5A  
                            l1831 16CA                              l1823 16A0                              l1815 17E0  
                            l1903 1338                              l1639 0F60                              l1663 0FCC  
                            l1671 0FF6                              l1655 0F9C                              l1647 0F7A  
                            l1911 116A                              l1583 1042                              l1591 15F4  
                            l1743 0994                              l1735 0956                              l1727 08FE  
                            l1719 08C2                              l1751 10CA                              l1399 0BAC  
                            l1841 13E2                              l1833 16CC                              l1825 16A4  
                            l1817 17E4                              l1905 1378                              l1673 1006  
                            l1665 0FE2                              l1657 0FAE                              l1649 0F82  
                            l1921 11AA                              l1913 116E                              l1585 105E  
                            l1577 1018                              l1593 1600                              l1681 12BC  
                            l1745 09A0                              l1737 0970                              l1729 091A  
                            l1753 10EC                              l1761 1136                              l1809 0AEE  
                            l1851 121A                              l1843 13E6                              l1827 16AA  
                            l1819 17EC                              l1907 1386                              l1675 100E  
                            l1667 0FEA                              l1659 0FB6                              l1931 1204  
                            l1923 11BC                              l1915 117A                              l1587 1090  
                            l1579 1028                              l1595 160E                              l1691 12FE  
                            l1683 12C8                              l1739 097E                              l1755 10F4  
                            l1771 09F4                              l1763 09B8                              l1861 125C  
                            l1853 1230                              l1837 13BA                              l1829 16B4  
                            l1941 0D84                              l1933 0D0A                              l1669 0FF0  
                            l1845 166C                              l1925 11CE                              l1917 1186  
                            l1909 1168                              l1597 1612                              l1693 132A  
                            l1685 12D6                              l1757 1110                              l1749 10C2  
                            l1781 0A10                              l1773 09FA                              l1765 09DA  
                            l1863 127A                              l1855 1238                              l1839 13BE  
                            l1943 0DDE                              l1935 0D36                              l1599 0EA8  
                            l1927 11E0                              l1919 1198                              l1695 170A  
                            l1687 12EA                              l1679 12AE                              l1759 112E  
                            l1791 0A6A                              l1775 09FC                              l1783 0A2E  
                            l1767 09E2                              l1871 15B6                              l1951 16EE  
                            l1865 128A                              l1857 1244                              l1849 120A  
                            l1881 1418                              l1937 0D50                              l1929 11F2  
                            l1697 1718                              l1689 12FA                              l1793 0A74  
                            l1785 0A3E                              l1777 0A08                              l1769 09EE  
                            l1873 15BE                              l1953 16FE                              l1945 16D6  
                            l1961 0DF2                              l1867 128C                              l1859 1252  
                            l1883 141C                              l1891 1632                              l1939 0D6A  
                            l1699 0854                              l1795 0A90                              l1787 0A52  
                            l1875 15CE                              l1947 16DE                              l1971 0E26  
                            l1963 0DF6                              l1869 1296                              l1885 1420  
                            l1893 1632                              l1797 0AAC                              l1789 0A60  
                            l1877 15EA                              l1949 16E6                              l1973 0E56  
                            l1981 0E74                              l1965 0DFA                              l1957 0DE4  
                            ?_pad 000E                              l1887 1422                              l1895 1642  
                            l1799 0AC4                              l1991 0C2A                              l1983 0E8A  
                            l1975 0E5A                              l1967 0E10                              l1959 0DE8  
                            l1889 146C                              l1897 164E                              l1993 0C3E  
                            l1985 0C12                              l1977 0E5E                              l1969 0E16  
                            l1899 1656                              l1995 0C54                              l1987 0C22  
                            l1979 0E60                              l1997 0C58                              l1989 0C26  
                            l1999 0C72                              STR_1 083E                              STR_2 084B  
                            STR_3 082D                              STR_4 0801                              STR_5 0818  
                            u1000 09DA                              u1001 09D6                              u1010 0A3E  
                            u1011 0A3A                              u1100 1230                              u1020 0A60  
                            u1101 122C                              u1021 0A5C                              u1110 1252  
                            u1030 0A90                              u1111 124E                              u1031 0A8C  
                            u1120 127A                              u1040 0AAC                              u1121 1276  
                            u1041 0AA8                              u1050 16C8                              u1130 15EA  
                            u1051 16C2                              u1131 15E6                              u1070 13DE  
                            u1150 1642                              u1151 163E                              u1207 0E94  
                            u1080 1406                              u1160 1386                              u1145 1444  
                            u1065 16CA                              u1161 1382                              u1217 0B1C  
                            u1090 1416                              u1170 0E26                              u1307 150E  
                            u1091 1412                              u1227 0B28                              u1171 0E22  
                            u1077 13D4                              u1237 152C                              u1087 13FC  
                            u1247 0CF8                              _LATD 0F8C                              u1257 1490  
                            u1267 14BA                              u1187 1584                              u1277 1746  
                            u1197 15A0                              u1287 17BE                              u1297 14E4  
                            _RCEN 7E2B                              _RSEN 7E29                              abs@a 0007  
                            _dbuf 0062  __end_of_I2C_Master_RepeatedStart 1806                              _main 156A  
                            _dtoa 0854                              _prec 0060                              pad@i 0013  
                            pad@p 0010                              fsr1h 0FE2                              fsr2h 0FDA  
                            indf1 0FE7                              indf2 0FDF                              fsr1l 0FE1  
                            fsr2l 0FD9                              prodh 0FF4                              prodl 0FF3  
                            start 7FFC                     _LCD_String_xy 1630                      ___param_bank 0000  
                           ??_abs 0009                             ??_pad 0012                  __end_of_LCD_Char 14C4  
                __end_of_LCD_Init 1770             ?_DHT11_GetTemperature 0001                  ?_I2C_Master_Init 000E  
                ?_I2C_Master_Read 0002                  ?_I2C_Master_Wait 0001                  ?_I2C_Master_Stop 0001  
                           ?_main 0001                             ?_dtoa 0015                             _ACKEN 7E2C  
                           _ACKDT 7E2D                   __end_of___awdiv 0F6A                   __end_of___awmod 1018  
                           _CMCON 0FB4                   __end_of___lldiv 12AE                   ___awdiv@divisor 0003  
                           _LATD0 7C60                             _LATD2 7C62                   ___awdiv@counter 0005  
                    vfpfcnvrt@fmt 0021                             _TRISD 0F95                             _flags 005E  
             read_prec_or_width@c 0005               read_prec_or_width@n 0006                             _fputc 1018  
                           _fputs 15F4                  __end_of_RTC_Init 13BA                             pad@fp 000E  
                           _width 005C                             _putch 1806                             dtoa@d 0016  
                           dtoa@i 001E                             dtoa@p 001A                             dtoa@s 001D  
                           dtoa@w 001B                             tablat 0FF5                             status 0FD8  
                 __end_of_sprintf 170A                    ?_LCD_String_xy 0005                   __initialization 1796  
                    __end_of_main 15B6                      __end_of_dtoa 09B8                         ??_BCD2DEC 0001  
                       ??_DEC2BCD 0009                            ??_main 005A                            ??_dtoa 0018  
               __end_of_LCD_Clear 17CA                     __activetblptr 0002                  ?_RTC_SetDateTime 000E  
      __end_of_read_prec_or_width 1166                 ?_I2C_Master_Start 0001                 ?_I2C_Master_Write 000C  
              ??_I2C_Master_Start 0002                            _ADCON1 0FC1                ??_I2C_Master_Write 000E  
                          ?_fputc 0001                            ?_fputs 0009                  ___awdiv@dividend 0001  
                          ?_putch 0001                  LCD_String_xy@msg 0006                  LCD_String_xy@pos 0005  
                LCD_String_xy@row 0008                            _OSCCON 0FD3                     vfpfcnvrt@done 0027  
                          _SSPADD 0FC8                            _TRISB0 7C98                            _TRISB1 7C99  
                          _SSPBUF 0FC9                      ??_DHT11_Read 0001          _I2C_Master_RepeatedStart 17FE  
                    vfprintf@cfmt 002C             DHT11_GetTemperature@i 000E                         ??___awdiv 0005  
                       ??___awmod 0005            ??_DHT11_GetTemperature 0003                         ??___lldiv 0009  
            read_prec_or_width@ap 0002                            clear_0 179C                  ___awdiv@quotient 0007  
                 ___awmod@divisor 0003                            isa$std 0001                   ___awmod@counter 0005  
                          pad@buf 000F                            dtoa@fp 0015                            fputc@c 0001  
                          fputs@c 000B                            fputs@i 000C                            fputs@s 0009  
                      BCD2DEC@val 0002                      ?_mostrar_rtc 0001                      __mediumconst 0800  
                          tblptrh 0FF7                            tblptrl 0FF6                            tblptru 0FF8  
              __end_of_DHT11_Read 156A                            putch@c 0001                  __end_of_vfprintf 15F4  
                       ??_sprintf 0035                         ?_LCD_Char 0001                        __accesstop 0060  
         __end_of__initialization 17A8                         ?_LCD_Init 0001                   ??_LCD_String_xy 0008  
                   ___rparam_used 0001                    __pcstackCOMRAM 0001                        DEC2BCD@val 000B  
                   __end_of_fputc 10C2                     __end_of_fputs 1630                     __end_of_putch 1808  
                    ??_LCD_String 0005                         ?_RTC_Init 0001                           ??_fputc 0004  
                         ??_fputs 000B                           ??_putch 0001                        __pbssBANK0 0060  
                      ??_LCD_Char 0001                        ??_LCD_Init 0003               _mostrar_temperatura 0DE4  
              __end_of_LCD_String 1418                           _BCD2DEC 17CA                           _DEC2BCD 166A  
                         _ACKSTAT 7E2E                        ??_RTC_Init 000E              ?_mostrar_temperatura 0001  
                         _SSPCON1 0FC6                           _SSPCON2 0FC5                           _SSPSTAT 0FC7  
     DHT11_GetTemperature@timeout 000C                     LCD_String@msg 0003                           __Hparam 0000  
                         __Lparam 0000                           ___awdiv 0EA8                           ___awmod 0F6A  
                         ___lldiv 120A                         ?_vfprintf 0029                      __psmallconst 0800  
                         __pcinit 1796             ??_mostrar_temperatura 000F                           __ramtop 0800  
                         __ptext0 156A                           __ptext1 0DE4                           __ptext2 0B12  
                         __ptext3 1518                           __ptext4 0C12                           __ptext5 16D6  
                         __ptext6 15B6                           __ptext7 09B8                           __ptext8 10C2  
                         __ptext9 0854             read_prec_or_width@fmt 0001                  ___awmod@dividend 0001  
                       _LCD_Clear 17B2                           _sprintf 16D6              end_of_initialization 17A8  
      ??_I2C_Master_RepeatedStart 0002                           fputc@fp 0003                    LCD_Command@cmd 0002  
                   __Lmediumconst 0000                           fputs@fp 000A                 mostrar_rtc@buffer 0043  
              _read_prec_or_width 10C2                 ??_RTC_GetDateTime 0014                   ___lldiv@divisor 0005  
                 ___lldiv@counter 000D                 __end_of_vfpfcnvrt 0B12                  I2C_Master_Init@c 000E  
                I2C_Master_Read@a 0002                           postdec2 0FDD               ?_read_prec_or_width 0001  
                         postinc0 0FEE                           postinc1 0FE6                           postinc2 0FDE  
                vfpfcnvrt@convarg 0023                        ??_vfprintf 002C                         _PORTAbits 0F80  
                       _TRISAbits 0F92                        ?_LCD_Clear 0001              ??_read_prec_or_width 0003  
                   ??_LCD_Command 0001                       vfpfcnvrt@ap 0022                       vfpfcnvrt@cp 0028  
                     vfpfcnvrt@fp 0020                       RTC_Init@sec 000F               start_initialization 1796  
                     __end_of_abs 173E                       __end_of_pad 1338                 RTC_SetDateTime@mo 0011  
               ??_I2C_Master_Init 0012                 ??_I2C_Master_Read 0004                 ??_I2C_Master_Wait 0001  
               ??_I2C_Master_Stop 0002             __end_of_LCD_String_xy 166A                       vfprintf@fmt 002A  
                        ?_BCD2DEC 0001                          ?_DEC2BCD 0001              RTC_GetDateTime@month 0012  
        DHT11_GetTemperature@data 0007               __end_of_LCD_Command 1518                       __pbssCOMRAM 005C  
                     ??_LCD_Clear 0003                  _I2C_Master_Start 17F6                  _I2C_Master_Write 17E0  
               ??_RTC_SetDateTime 0013                          ?___awdiv 0001                          ?___awmod 0001  
                        ?___lldiv 0001                       __smallconst 0800                   _RTC_GetDateTime 0D0A  
           LCD_String_xy@location 0009                          ?_sprintf 002D                          _LCD_Char 1470  
                        _LCD_Init 173E       __end_of_mostrar_temperatura 0EA8                       DHT11_Read@i 0002  
                     _LCD_Command 14C4                         _vfpfcnvrt 09B8                          _RTC_Init 1338  
                   ??_mostrar_rtc 0041               I2C_Master_Read@temp 0004                  RTC_SetDateTime@d 0010  
                RTC_SetDateTime@h 0014                  RTC_SetDateTime@m 000E                  RTC_SetDateTime@s 000F  
                RTC_SetDateTime@y 0012                        _DHT11_Read 1518                          __Hrparam 0000  
                      vfprintf@ap 002B                          __Lrparam 0000                        vfprintf@fp 0029  
       mostrar_temperatura@buffer 0011           mostrar_temperatura@temp 0017               RTC_GetDateTime@hour 000E  
             RTC_GetDateTime@year 0013         ?_I2C_Master_RepeatedStart 0001                        ?_vfpfcnvrt 0020  
         __end_of_RTC_GetDateTime 0DE4                        sprintf@fmt 002E                   _I2C_Master_Init 1418  
                 _I2C_Master_Read 16A0                   _I2C_Master_Wait 1770                   _I2C_Master_Stop 17EE  
                        _dtoa$863 0018                          __ptext10 12AE                          __ptext11 15F4  
                        __ptext20 0D0A                          __ptext12 1018                          __ptext21 17E0  
                        __ptext13 1806                          __ptext30 1470                          __ptext22 17EE  
                        __ptext14 170A                          __ptext31 173E                          __ptext23 17F6  
                        __ptext15 1166                          __ptext32 17B2                          __ptext24 17FE  
                        __ptext16 166A                          __ptext33 14C4                          __ptext25 16A0  
                        __ptext17 0F6A                          __ptext34 1418                          __ptext26 1770  
                        __ptext18 0EA8                          __ptext35 120A                          __ptext27 17CA  
                        __ptext19 1338                          __ptext28 1630                          __ptext29 13BA  
             __end_of_mostrar_rtc 0D0A      __end_of_DHT11_GetTemperature 0C12                          isa$xinst 0000  
                        _vfprintf 15B6                        _LCD_String 13BA          __end_of_I2C_Master_Start 17FE  
        __end_of_I2C_Master_Write 17EE                RTC_GetDateTime@day 0011                RTC_GetDateTime@min 000F  
              RTC_GetDateTime@sec 0010                   _RTC_SetDateTime 1166                    DHT11_Read@data 0001  
                       sprintf@ap 0035                  ___lldiv@dividend 0001                       ?_DHT11_Read 0001  
                      _OSCCONbits 0FD3           __end_of_I2C_Master_Init 1470           __end_of_I2C_Master_Read 16D6  
         __end_of_I2C_Master_Wait 1796           __end_of_I2C_Master_Stop 17F6                       ??_vfpfcnvrt 0023  
                ?_RTC_GetDateTime 000E                          sprintf@f 0036                          sprintf@s 002D  
                ___lldiv@quotient 0009                 I2C_Master_Write@d 000C                       _mostrar_rtc 0C12  
                   mostrar_rtc@mo 0058                      mostrar_rtc@d 0057                      mostrar_rtc@h 0054  
                    mostrar_rtc@m 0055                      mostrar_rtc@s 0056                      mostrar_rtc@y 0059  
