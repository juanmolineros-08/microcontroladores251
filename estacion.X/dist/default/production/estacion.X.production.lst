

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri May 09 18:11:40 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Generated 05/12/2024 GMT
    61                           ; 
    62                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000FE0                     bsr             equ	4064
    95   000FE9                     fsr0            equ	4073
    96   000FEA                     fsr0h           equ	4074
    97   000FE9                     fsr0l           equ	4073
    98   000FE1                     fsr1            equ	4065
    99   000FE2                     fsr1h           equ	4066
   100   000FE1                     fsr1l           equ	4065
   101   000FD9                     fsr2            equ	4057
   102   000FDA                     fsr2h           equ	4058
   103   000FD9                     fsr2l           equ	4057
   104   000FEF                     indf0           equ	4079
   105   000FE7                     indf1           equ	4071
   106   000FDF                     indf2           equ	4063
   107   000FF2                     intcon          equ	4082
   108   000000                     nvmcon          equ	0
   109   000FF9                     pcl             equ	4089
   110   000FFA                     pclath          equ	4090
   111   000FFB                     pclatu          equ	4091
   112   000FEB                     plusw0          equ	4075
   113   000FE3                     plusw1          equ	4067
   114   000FDB                     plusw2          equ	4059
   115   000FED                     postdec0        equ	4077
   116   000FE5                     postdec1        equ	4069
   117   000FDD                     postdec2        equ	4061
   118   000FEE                     postinc0        equ	4078
   119   000FE6                     postinc1        equ	4070
   120   000FDE                     postinc2        equ	4062
   121   000FEC                     preinc0         equ	4076
   122   000FE4                     preinc1         equ	4068
   123   000FDC                     preinc2         equ	4060
   124   000FF3                     prod            equ	4083
   125   000FF4                     prodh           equ	4084
   126   000FF3                     prodl           equ	4083
   127   000FD8                     status          equ	4056
   128   000FF5                     tablat          equ	4085
   129   000FF6                     tblptr          equ	4086
   130   000FF7                     tblptrh         equ	4087
   131   000FF6                     tblptrl         equ	4086
   132   000FF8                     tblptru         equ	4088
   133   000FFD                     tosl            equ	4093
   134   000FE8                     wreg            equ	4072
   135   000F62                     SPPDATA         equ	3938	;# 
   136   000F63                     SPPCFG          equ	3939	;# 
   137   000F64                     SPPEPS          equ	3940	;# 
   138   000F65                     SPPCON          equ	3941	;# 
   139   000F66                     UFRM            equ	3942	;# 
   140   000F66                     UFRML           equ	3942	;# 
   141   000F67                     UFRMH           equ	3943	;# 
   142   000F68                     UIR             equ	3944	;# 
   143   000F69                     UIE             equ	3945	;# 
   144   000F6A                     UEIR            equ	3946	;# 
   145   000F6B                     UEIE            equ	3947	;# 
   146   000F6C                     USTAT           equ	3948	;# 
   147   000F6D                     UCON            equ	3949	;# 
   148   000F6E                     UADDR           equ	3950	;# 
   149   000F6F                     UCFG            equ	3951	;# 
   150   000F70                     UEP0            equ	3952	;# 
   151   000F71                     UEP1            equ	3953	;# 
   152   000F72                     UEP2            equ	3954	;# 
   153   000F73                     UEP3            equ	3955	;# 
   154   000F74                     UEP4            equ	3956	;# 
   155   000F75                     UEP5            equ	3957	;# 
   156   000F76                     UEP6            equ	3958	;# 
   157   000F77                     UEP7            equ	3959	;# 
   158   000F78                     UEP8            equ	3960	;# 
   159   000F79                     UEP9            equ	3961	;# 
   160   000F7A                     UEP10           equ	3962	;# 
   161   000F7B                     UEP11           equ	3963	;# 
   162   000F7C                     UEP12           equ	3964	;# 
   163   000F7D                     UEP13           equ	3965	;# 
   164   000F7E                     UEP14           equ	3966	;# 
   165   000F7F                     UEP15           equ	3967	;# 
   166   000F80                     PORTA           equ	3968	;# 
   167   000F81                     PORTB           equ	3969	;# 
   168   000F82                     PORTC           equ	3970	;# 
   169   000F83                     PORTD           equ	3971	;# 
   170   000F84                     PORTE           equ	3972	;# 
   171   000F89                     LATA            equ	3977	;# 
   172   000F8A                     LATB            equ	3978	;# 
   173   000F8B                     LATC            equ	3979	;# 
   174   000F8C                     LATD            equ	3980	;# 
   175   000F8D                     LATE            equ	3981	;# 
   176   000F92                     TRISA           equ	3986	;# 
   177   000F92                     DDRA            equ	3986	;# 
   178   000F93                     TRISB           equ	3987	;# 
   179   000F93                     DDRB            equ	3987	;# 
   180   000F94                     TRISC           equ	3988	;# 
   181   000F94                     DDRC            equ	3988	;# 
   182   000F95                     TRISD           equ	3989	;# 
   183   000F95                     DDRD            equ	3989	;# 
   184   000F96                     TRISE           equ	3990	;# 
   185   000F96                     DDRE            equ	3990	;# 
   186   000F9B                     OSCTUNE         equ	3995	;# 
   187   000F9D                     PIE1            equ	3997	;# 
   188   000F9E                     PIR1            equ	3998	;# 
   189   000F9F                     IPR1            equ	3999	;# 
   190   000FA0                     PIE2            equ	4000	;# 
   191   000FA1                     PIR2            equ	4001	;# 
   192   000FA2                     IPR2            equ	4002	;# 
   193   000FA6                     EECON1          equ	4006	;# 
   194   000FA7                     EECON2          equ	4007	;# 
   195   000FA8                     EEDATA          equ	4008	;# 
   196   000FA9                     EEADR           equ	4009	;# 
   197   000FAB                     RCSTA           equ	4011	;# 
   198   000FAB                     RCSTA1          equ	4011	;# 
   199   000FAC                     TXSTA           equ	4012	;# 
   200   000FAC                     TXSTA1          equ	4012	;# 
   201   000FAD                     TXREG           equ	4013	;# 
   202   000FAD                     TXREG1          equ	4013	;# 
   203   000FAE                     RCREG           equ	4014	;# 
   204   000FAE                     RCREG1          equ	4014	;# 
   205   000FAF                     SPBRG           equ	4015	;# 
   206   000FAF                     SPBRG1          equ	4015	;# 
   207   000FB0                     SPBRGH          equ	4016	;# 
   208   000FB1                     T3CON           equ	4017	;# 
   209   000FB2                     TMR3            equ	4018	;# 
   210   000FB2                     TMR3L           equ	4018	;# 
   211   000FB3                     TMR3H           equ	4019	;# 
   212   000FB4                     CMCON           equ	4020	;# 
   213   000FB5                     CVRCON          equ	4021	;# 
   214   000FB6                     ECCP1AS         equ	4022	;# 
   215   000FB6                     CCP1AS          equ	4022	;# 
   216   000FB7                     ECCP1DEL        equ	4023	;# 
   217   000FB7                     CCP1DEL         equ	4023	;# 
   218   000FB8                     BAUDCON         equ	4024	;# 
   219   000FB8                     BAUDCTL         equ	4024	;# 
   220   000FBA                     CCP2CON         equ	4026	;# 
   221   000FBB                     CCPR2           equ	4027	;# 
   222   000FBB                     CCPR2L          equ	4027	;# 
   223   000FBC                     CCPR2H          equ	4028	;# 
   224   000FBD                     CCP1CON         equ	4029	;# 
   225   000FBD                     ECCP1CON        equ	4029	;# 
   226   000FBE                     CCPR1           equ	4030	;# 
   227   000FBE                     CCPR1L          equ	4030	;# 
   228   000FBF                     CCPR1H          equ	4031	;# 
   229   000FC0                     ADCON2          equ	4032	;# 
   230   000FC1                     ADCON1          equ	4033	;# 
   231   000FC2                     ADCON0          equ	4034	;# 
   232   000FC3                     ADRES           equ	4035	;# 
   233   000FC3                     ADRESL          equ	4035	;# 
   234   000FC4                     ADRESH          equ	4036	;# 
   235   000FC5                     SSPCON2         equ	4037	;# 
   236   000FC6                     SSPCON1         equ	4038	;# 
   237   000FC7                     SSPSTAT         equ	4039	;# 
   238   000FC8                     SSPADD          equ	4040	;# 
   239   000FC9                     SSPBUF          equ	4041	;# 
   240   000FCA                     T2CON           equ	4042	;# 
   241   000FCB                     PR2             equ	4043	;# 
   242   000FCB                     MEMCON          equ	4043	;# 
   243   000FCC                     TMR2            equ	4044	;# 
   244   000FCD                     T1CON           equ	4045	;# 
   245   000FCE                     TMR1            equ	4046	;# 
   246   000FCE                     TMR1L           equ	4046	;# 
   247   000FCF                     TMR1H           equ	4047	;# 
   248   000FD0                     RCON            equ	4048	;# 
   249   000FD1                     WDTCON          equ	4049	;# 
   250   000FD2                     HLVDCON         equ	4050	;# 
   251   000FD2                     LVDCON          equ	4050	;# 
   252   000FD3                     OSCCON          equ	4051	;# 
   253   000FD5                     T0CON           equ	4053	;# 
   254   000FD6                     TMR0            equ	4054	;# 
   255   000FD6                     TMR0L           equ	4054	;# 
   256   000FD7                     TMR0H           equ	4055	;# 
   257   000FD8                     STATUS          equ	4056	;# 
   258   000FD9                     FSR2            equ	4057	;# 
   259   000FD9                     FSR2L           equ	4057	;# 
   260   000FDA                     FSR2H           equ	4058	;# 
   261   000FDB                     PLUSW2          equ	4059	;# 
   262   000FDC                     PREINC2         equ	4060	;# 
   263   000FDD                     POSTDEC2        equ	4061	;# 
   264   000FDE                     POSTINC2        equ	4062	;# 
   265   000FDF                     INDF2           equ	4063	;# 
   266   000FE0                     BSR             equ	4064	;# 
   267   000FE1                     FSR1            equ	4065	;# 
   268   000FE1                     FSR1L           equ	4065	;# 
   269   000FE2                     FSR1H           equ	4066	;# 
   270   000FE3                     PLUSW1          equ	4067	;# 
   271   000FE4                     PREINC1         equ	4068	;# 
   272   000FE5                     POSTDEC1        equ	4069	;# 
   273   000FE6                     POSTINC1        equ	4070	;# 
   274   000FE7                     INDF1           equ	4071	;# 
   275   000FE8                     WREG            equ	4072	;# 
   276   000FE9                     FSR0            equ	4073	;# 
   277   000FE9                     FSR0L           equ	4073	;# 
   278   000FEA                     FSR0H           equ	4074	;# 
   279   000FEB                     PLUSW0          equ	4075	;# 
   280   000FEC                     PREINC0         equ	4076	;# 
   281   000FED                     POSTDEC0        equ	4077	;# 
   282   000FEE                     POSTINC0        equ	4078	;# 
   283   000FEF                     INDF0           equ	4079	;# 
   284   000FF0                     INTCON3         equ	4080	;# 
   285   000FF1                     INTCON2         equ	4081	;# 
   286   000FF2                     INTCON          equ	4082	;# 
   287   000FF3                     PROD            equ	4083	;# 
   288   000FF3                     PRODL           equ	4083	;# 
   289   000FF4                     PRODH           equ	4084	;# 
   290   000FF5                     TABLAT          equ	4085	;# 
   291   000FF6                     TBLPTR          equ	4086	;# 
   292   000FF6                     TBLPTRL         equ	4086	;# 
   293   000FF7                     TBLPTRH         equ	4087	;# 
   294   000FF8                     TBLPTRU         equ	4088	;# 
   295   000FF9                     PCLAT           equ	4089	;# 
   296   000FF9                     PC              equ	4089	;# 
   297   000FF9                     PCL             equ	4089	;# 
   298   000FFA                     PCLATH          equ	4090	;# 
   299   000FFB                     PCLATU          equ	4091	;# 
   300   000FFC                     STKPTR          equ	4092	;# 
   301   000FFD                     TOS             equ	4093	;# 
   302   000FFD                     TOSL            equ	4093	;# 
   303   000FFE                     TOSH            equ	4094	;# 
   304   000FFF                     TOSU            equ	4095	;# 
   305   000F62                     SPPDATA         equ	3938	;# 
   306   000F63                     SPPCFG          equ	3939	;# 
   307   000F64                     SPPEPS          equ	3940	;# 
   308   000F65                     SPPCON          equ	3941	;# 
   309   000F66                     UFRM            equ	3942	;# 
   310   000F66                     UFRML           equ	3942	;# 
   311   000F67                     UFRMH           equ	3943	;# 
   312   000F68                     UIR             equ	3944	;# 
   313   000F69                     UIE             equ	3945	;# 
   314   000F6A                     UEIR            equ	3946	;# 
   315   000F6B                     UEIE            equ	3947	;# 
   316   000F6C                     USTAT           equ	3948	;# 
   317   000F6D                     UCON            equ	3949	;# 
   318   000F6E                     UADDR           equ	3950	;# 
   319   000F6F                     UCFG            equ	3951	;# 
   320   000F70                     UEP0            equ	3952	;# 
   321   000F71                     UEP1            equ	3953	;# 
   322   000F72                     UEP2            equ	3954	;# 
   323   000F73                     UEP3            equ	3955	;# 
   324   000F74                     UEP4            equ	3956	;# 
   325   000F75                     UEP5            equ	3957	;# 
   326   000F76                     UEP6            equ	3958	;# 
   327   000F77                     UEP7            equ	3959	;# 
   328   000F78                     UEP8            equ	3960	;# 
   329   000F79                     UEP9            equ	3961	;# 
   330   000F7A                     UEP10           equ	3962	;# 
   331   000F7B                     UEP11           equ	3963	;# 
   332   000F7C                     UEP12           equ	3964	;# 
   333   000F7D                     UEP13           equ	3965	;# 
   334   000F7E                     UEP14           equ	3966	;# 
   335   000F7F                     UEP15           equ	3967	;# 
   336   000F80                     PORTA           equ	3968	;# 
   337   000F81                     PORTB           equ	3969	;# 
   338   000F82                     PORTC           equ	3970	;# 
   339   000F83                     PORTD           equ	3971	;# 
   340   000F84                     PORTE           equ	3972	;# 
   341   000F89                     LATA            equ	3977	;# 
   342   000F8A                     LATB            equ	3978	;# 
   343   000F8B                     LATC            equ	3979	;# 
   344   000F8C                     LATD            equ	3980	;# 
   345   000F8D                     LATE            equ	3981	;# 
   346   000F92                     TRISA           equ	3986	;# 
   347   000F92                     DDRA            equ	3986	;# 
   348   000F93                     TRISB           equ	3987	;# 
   349   000F93                     DDRB            equ	3987	;# 
   350   000F94                     TRISC           equ	3988	;# 
   351   000F94                     DDRC            equ	3988	;# 
   352   000F95                     TRISD           equ	3989	;# 
   353   000F95                     DDRD            equ	3989	;# 
   354   000F96                     TRISE           equ	3990	;# 
   355   000F96                     DDRE            equ	3990	;# 
   356   000F9B                     OSCTUNE         equ	3995	;# 
   357   000F9D                     PIE1            equ	3997	;# 
   358   000F9E                     PIR1            equ	3998	;# 
   359   000F9F                     IPR1            equ	3999	;# 
   360   000FA0                     PIE2            equ	4000	;# 
   361   000FA1                     PIR2            equ	4001	;# 
   362   000FA2                     IPR2            equ	4002	;# 
   363   000FA6                     EECON1          equ	4006	;# 
   364   000FA7                     EECON2          equ	4007	;# 
   365   000FA8                     EEDATA          equ	4008	;# 
   366   000FA9                     EEADR           equ	4009	;# 
   367   000FAB                     RCSTA           equ	4011	;# 
   368   000FAB                     RCSTA1          equ	4011	;# 
   369   000FAC                     TXSTA           equ	4012	;# 
   370   000FAC                     TXSTA1          equ	4012	;# 
   371   000FAD                     TXREG           equ	4013	;# 
   372   000FAD                     TXREG1          equ	4013	;# 
   373   000FAE                     RCREG           equ	4014	;# 
   374   000FAE                     RCREG1          equ	4014	;# 
   375   000FAF                     SPBRG           equ	4015	;# 
   376   000FAF                     SPBRG1          equ	4015	;# 
   377   000FB0                     SPBRGH          equ	4016	;# 
   378   000FB1                     T3CON           equ	4017	;# 
   379   000FB2                     TMR3            equ	4018	;# 
   380   000FB2                     TMR3L           equ	4018	;# 
   381   000FB3                     TMR3H           equ	4019	;# 
   382   000FB4                     CMCON           equ	4020	;# 
   383   000FB5                     CVRCON          equ	4021	;# 
   384   000FB6                     ECCP1AS         equ	4022	;# 
   385   000FB6                     CCP1AS          equ	4022	;# 
   386   000FB7                     ECCP1DEL        equ	4023	;# 
   387   000FB7                     CCP1DEL         equ	4023	;# 
   388   000FB8                     BAUDCON         equ	4024	;# 
   389   000FB8                     BAUDCTL         equ	4024	;# 
   390   000FBA                     CCP2CON         equ	4026	;# 
   391   000FBB                     CCPR2           equ	4027	;# 
   392   000FBB                     CCPR2L          equ	4027	;# 
   393   000FBC                     CCPR2H          equ	4028	;# 
   394   000FBD                     CCP1CON         equ	4029	;# 
   395   000FBD                     ECCP1CON        equ	4029	;# 
   396   000FBE                     CCPR1           equ	4030	;# 
   397   000FBE                     CCPR1L          equ	4030	;# 
   398   000FBF                     CCPR1H          equ	4031	;# 
   399   000FC0                     ADCON2          equ	4032	;# 
   400   000FC1                     ADCON1          equ	4033	;# 
   401   000FC2                     ADCON0          equ	4034	;# 
   402   000FC3                     ADRES           equ	4035	;# 
   403   000FC3                     ADRESL          equ	4035	;# 
   404   000FC4                     ADRESH          equ	4036	;# 
   405   000FC5                     SSPCON2         equ	4037	;# 
   406   000FC6                     SSPCON1         equ	4038	;# 
   407   000FC7                     SSPSTAT         equ	4039	;# 
   408   000FC8                     SSPADD          equ	4040	;# 
   409   000FC9                     SSPBUF          equ	4041	;# 
   410   000FCA                     T2CON           equ	4042	;# 
   411   000FCB                     PR2             equ	4043	;# 
   412   000FCB                     MEMCON          equ	4043	;# 
   413   000FCC                     TMR2            equ	4044	;# 
   414   000FCD                     T1CON           equ	4045	;# 
   415   000FCE                     TMR1            equ	4046	;# 
   416   000FCE                     TMR1L           equ	4046	;# 
   417   000FCF                     TMR1H           equ	4047	;# 
   418   000FD0                     RCON            equ	4048	;# 
   419   000FD1                     WDTCON          equ	4049	;# 
   420   000FD2                     HLVDCON         equ	4050	;# 
   421   000FD2                     LVDCON          equ	4050	;# 
   422   000FD3                     OSCCON          equ	4051	;# 
   423   000FD5                     T0CON           equ	4053	;# 
   424   000FD6                     TMR0            equ	4054	;# 
   425   000FD6                     TMR0L           equ	4054	;# 
   426   000FD7                     TMR0H           equ	4055	;# 
   427   000FD8                     STATUS          equ	4056	;# 
   428   000FD9                     FSR2            equ	4057	;# 
   429   000FD9                     FSR2L           equ	4057	;# 
   430   000FDA                     FSR2H           equ	4058	;# 
   431   000FDB                     PLUSW2          equ	4059	;# 
   432   000FDC                     PREINC2         equ	4060	;# 
   433   000FDD                     POSTDEC2        equ	4061	;# 
   434   000FDE                     POSTINC2        equ	4062	;# 
   435   000FDF                     INDF2           equ	4063	;# 
   436   000FE0                     BSR             equ	4064	;# 
   437   000FE1                     FSR1            equ	4065	;# 
   438   000FE1                     FSR1L           equ	4065	;# 
   439   000FE2                     FSR1H           equ	4066	;# 
   440   000FE3                     PLUSW1          equ	4067	;# 
   441   000FE4                     PREINC1         equ	4068	;# 
   442   000FE5                     POSTDEC1        equ	4069	;# 
   443   000FE6                     POSTINC1        equ	4070	;# 
   444   000FE7                     INDF1           equ	4071	;# 
   445   000FE8                     WREG            equ	4072	;# 
   446   000FE9                     FSR0            equ	4073	;# 
   447   000FE9                     FSR0L           equ	4073	;# 
   448   000FEA                     FSR0H           equ	4074	;# 
   449   000FEB                     PLUSW0          equ	4075	;# 
   450   000FEC                     PREINC0         equ	4076	;# 
   451   000FED                     POSTDEC0        equ	4077	;# 
   452   000FEE                     POSTINC0        equ	4078	;# 
   453   000FEF                     INDF0           equ	4079	;# 
   454   000FF0                     INTCON3         equ	4080	;# 
   455   000FF1                     INTCON2         equ	4081	;# 
   456   000FF2                     INTCON          equ	4082	;# 
   457   000FF3                     PROD            equ	4083	;# 
   458   000FF3                     PRODL           equ	4083	;# 
   459   000FF4                     PRODH           equ	4084	;# 
   460   000FF5                     TABLAT          equ	4085	;# 
   461   000FF6                     TBLPTR          equ	4086	;# 
   462   000FF6                     TBLPTRL         equ	4086	;# 
   463   000FF7                     TBLPTRH         equ	4087	;# 
   464   000FF8                     TBLPTRU         equ	4088	;# 
   465   000FF9                     PCLAT           equ	4089	;# 
   466   000FF9                     PC              equ	4089	;# 
   467   000FF9                     PCL             equ	4089	;# 
   468   000FFA                     PCLATH          equ	4090	;# 
   469   000FFB                     PCLATU          equ	4091	;# 
   470   000FFC                     STKPTR          equ	4092	;# 
   471   000FFD                     TOS             equ	4093	;# 
   472   000FFD                     TOSL            equ	4093	;# 
   473   000FFE                     TOSH            equ	4094	;# 
   474   000FFF                     TOSU            equ	4095	;# 
   475   000F62                     SPPDATA         equ	3938	;# 
   476   000F63                     SPPCFG          equ	3939	;# 
   477   000F64                     SPPEPS          equ	3940	;# 
   478   000F65                     SPPCON          equ	3941	;# 
   479   000F66                     UFRM            equ	3942	;# 
   480   000F66                     UFRML           equ	3942	;# 
   481   000F67                     UFRMH           equ	3943	;# 
   482   000F68                     UIR             equ	3944	;# 
   483   000F69                     UIE             equ	3945	;# 
   484   000F6A                     UEIR            equ	3946	;# 
   485   000F6B                     UEIE            equ	3947	;# 
   486   000F6C                     USTAT           equ	3948	;# 
   487   000F6D                     UCON            equ	3949	;# 
   488   000F6E                     UADDR           equ	3950	;# 
   489   000F6F                     UCFG            equ	3951	;# 
   490   000F70                     UEP0            equ	3952	;# 
   491   000F71                     UEP1            equ	3953	;# 
   492   000F72                     UEP2            equ	3954	;# 
   493   000F73                     UEP3            equ	3955	;# 
   494   000F74                     UEP4            equ	3956	;# 
   495   000F75                     UEP5            equ	3957	;# 
   496   000F76                     UEP6            equ	3958	;# 
   497   000F77                     UEP7            equ	3959	;# 
   498   000F78                     UEP8            equ	3960	;# 
   499   000F79                     UEP9            equ	3961	;# 
   500   000F7A                     UEP10           equ	3962	;# 
   501   000F7B                     UEP11           equ	3963	;# 
   502   000F7C                     UEP12           equ	3964	;# 
   503   000F7D                     UEP13           equ	3965	;# 
   504   000F7E                     UEP14           equ	3966	;# 
   505   000F7F                     UEP15           equ	3967	;# 
   506   000F80                     PORTA           equ	3968	;# 
   507   000F81                     PORTB           equ	3969	;# 
   508   000F82                     PORTC           equ	3970	;# 
   509   000F83                     PORTD           equ	3971	;# 
   510   000F84                     PORTE           equ	3972	;# 
   511   000F89                     LATA            equ	3977	;# 
   512   000F8A                     LATB            equ	3978	;# 
   513   000F8B                     LATC            equ	3979	;# 
   514   000F8C                     LATD            equ	3980	;# 
   515   000F8D                     LATE            equ	3981	;# 
   516   000F92                     TRISA           equ	3986	;# 
   517   000F92                     DDRA            equ	3986	;# 
   518   000F93                     TRISB           equ	3987	;# 
   519   000F93                     DDRB            equ	3987	;# 
   520   000F94                     TRISC           equ	3988	;# 
   521   000F94                     DDRC            equ	3988	;# 
   522   000F95                     TRISD           equ	3989	;# 
   523   000F95                     DDRD            equ	3989	;# 
   524   000F96                     TRISE           equ	3990	;# 
   525   000F96                     DDRE            equ	3990	;# 
   526   000F9B                     OSCTUNE         equ	3995	;# 
   527   000F9D                     PIE1            equ	3997	;# 
   528   000F9E                     PIR1            equ	3998	;# 
   529   000F9F                     IPR1            equ	3999	;# 
   530   000FA0                     PIE2            equ	4000	;# 
   531   000FA1                     PIR2            equ	4001	;# 
   532   000FA2                     IPR2            equ	4002	;# 
   533   000FA6                     EECON1          equ	4006	;# 
   534   000FA7                     EECON2          equ	4007	;# 
   535   000FA8                     EEDATA          equ	4008	;# 
   536   000FA9                     EEADR           equ	4009	;# 
   537   000FAB                     RCSTA           equ	4011	;# 
   538   000FAB                     RCSTA1          equ	4011	;# 
   539   000FAC                     TXSTA           equ	4012	;# 
   540   000FAC                     TXSTA1          equ	4012	;# 
   541   000FAD                     TXREG           equ	4013	;# 
   542   000FAD                     TXREG1          equ	4013	;# 
   543   000FAE                     RCREG           equ	4014	;# 
   544   000FAE                     RCREG1          equ	4014	;# 
   545   000FAF                     SPBRG           equ	4015	;# 
   546   000FAF                     SPBRG1          equ	4015	;# 
   547   000FB0                     SPBRGH          equ	4016	;# 
   548   000FB1                     T3CON           equ	4017	;# 
   549   000FB2                     TMR3            equ	4018	;# 
   550   000FB2                     TMR3L           equ	4018	;# 
   551   000FB3                     TMR3H           equ	4019	;# 
   552   000FB4                     CMCON           equ	4020	;# 
   553   000FB5                     CVRCON          equ	4021	;# 
   554   000FB6                     ECCP1AS         equ	4022	;# 
   555   000FB6                     CCP1AS          equ	4022	;# 
   556   000FB7                     ECCP1DEL        equ	4023	;# 
   557   000FB7                     CCP1DEL         equ	4023	;# 
   558   000FB8                     BAUDCON         equ	4024	;# 
   559   000FB8                     BAUDCTL         equ	4024	;# 
   560   000FBA                     CCP2CON         equ	4026	;# 
   561   000FBB                     CCPR2           equ	4027	;# 
   562   000FBB                     CCPR2L          equ	4027	;# 
   563   000FBC                     CCPR2H          equ	4028	;# 
   564   000FBD                     CCP1CON         equ	4029	;# 
   565   000FBD                     ECCP1CON        equ	4029	;# 
   566   000FBE                     CCPR1           equ	4030	;# 
   567   000FBE                     CCPR1L          equ	4030	;# 
   568   000FBF                     CCPR1H          equ	4031	;# 
   569   000FC0                     ADCON2          equ	4032	;# 
   570   000FC1                     ADCON1          equ	4033	;# 
   571   000FC2                     ADCON0          equ	4034	;# 
   572   000FC3                     ADRES           equ	4035	;# 
   573   000FC3                     ADRESL          equ	4035	;# 
   574   000FC4                     ADRESH          equ	4036	;# 
   575   000FC5                     SSPCON2         equ	4037	;# 
   576   000FC6                     SSPCON1         equ	4038	;# 
   577   000FC7                     SSPSTAT         equ	4039	;# 
   578   000FC8                     SSPADD          equ	4040	;# 
   579   000FC9                     SSPBUF          equ	4041	;# 
   580   000FCA                     T2CON           equ	4042	;# 
   581   000FCB                     PR2             equ	4043	;# 
   582   000FCB                     MEMCON          equ	4043	;# 
   583   000FCC                     TMR2            equ	4044	;# 
   584   000FCD                     T1CON           equ	4045	;# 
   585   000FCE                     TMR1            equ	4046	;# 
   586   000FCE                     TMR1L           equ	4046	;# 
   587   000FCF                     TMR1H           equ	4047	;# 
   588   000FD0                     RCON            equ	4048	;# 
   589   000FD1                     WDTCON          equ	4049	;# 
   590   000FD2                     HLVDCON         equ	4050	;# 
   591   000FD2                     LVDCON          equ	4050	;# 
   592   000FD3                     OSCCON          equ	4051	;# 
   593   000FD5                     T0CON           equ	4053	;# 
   594   000FD6                     TMR0            equ	4054	;# 
   595   000FD6                     TMR0L           equ	4054	;# 
   596   000FD7                     TMR0H           equ	4055	;# 
   597   000FD8                     STATUS          equ	4056	;# 
   598   000FD9                     FSR2            equ	4057	;# 
   599   000FD9                     FSR2L           equ	4057	;# 
   600   000FDA                     FSR2H           equ	4058	;# 
   601   000FDB                     PLUSW2          equ	4059	;# 
   602   000FDC                     PREINC2         equ	4060	;# 
   603   000FDD                     POSTDEC2        equ	4061	;# 
   604   000FDE                     POSTINC2        equ	4062	;# 
   605   000FDF                     INDF2           equ	4063	;# 
   606   000FE0                     BSR             equ	4064	;# 
   607   000FE1                     FSR1            equ	4065	;# 
   608   000FE1                     FSR1L           equ	4065	;# 
   609   000FE2                     FSR1H           equ	4066	;# 
   610   000FE3                     PLUSW1          equ	4067	;# 
   611   000FE4                     PREINC1         equ	4068	;# 
   612   000FE5                     POSTDEC1        equ	4069	;# 
   613   000FE6                     POSTINC1        equ	4070	;# 
   614   000FE7                     INDF1           equ	4071	;# 
   615   000FE8                     WREG            equ	4072	;# 
   616   000FE9                     FSR0            equ	4073	;# 
   617   000FE9                     FSR0L           equ	4073	;# 
   618   000FEA                     FSR0H           equ	4074	;# 
   619   000FEB                     PLUSW0          equ	4075	;# 
   620   000FEC                     PREINC0         equ	4076	;# 
   621   000FED                     POSTDEC0        equ	4077	;# 
   622   000FEE                     POSTINC0        equ	4078	;# 
   623   000FEF                     INDF0           equ	4079	;# 
   624   000FF0                     INTCON3         equ	4080	;# 
   625   000FF1                     INTCON2         equ	4081	;# 
   626   000FF2                     INTCON          equ	4082	;# 
   627   000FF3                     PROD            equ	4083	;# 
   628   000FF3                     PRODL           equ	4083	;# 
   629   000FF4                     PRODH           equ	4084	;# 
   630   000FF5                     TABLAT          equ	4085	;# 
   631   000FF6                     TBLPTR          equ	4086	;# 
   632   000FF6                     TBLPTRL         equ	4086	;# 
   633   000FF7                     TBLPTRH         equ	4087	;# 
   634   000FF8                     TBLPTRU         equ	4088	;# 
   635   000FF9                     PCLAT           equ	4089	;# 
   636   000FF9                     PC              equ	4089	;# 
   637   000FF9                     PCL             equ	4089	;# 
   638   000FFA                     PCLATH          equ	4090	;# 
   639   000FFB                     PCLATU          equ	4091	;# 
   640   000FFC                     STKPTR          equ	4092	;# 
   641   000FFD                     TOS             equ	4093	;# 
   642   000FFD                     TOSL            equ	4093	;# 
   643   000FFE                     TOSH            equ	4094	;# 
   644   000FFF                     TOSU            equ	4095	;# 
   645   000F62                     SPPDATA         equ	3938	;# 
   646   000F63                     SPPCFG          equ	3939	;# 
   647   000F64                     SPPEPS          equ	3940	;# 
   648   000F65                     SPPCON          equ	3941	;# 
   649   000F66                     UFRM            equ	3942	;# 
   650   000F66                     UFRML           equ	3942	;# 
   651   000F67                     UFRMH           equ	3943	;# 
   652   000F68                     UIR             equ	3944	;# 
   653   000F69                     UIE             equ	3945	;# 
   654   000F6A                     UEIR            equ	3946	;# 
   655   000F6B                     UEIE            equ	3947	;# 
   656   000F6C                     USTAT           equ	3948	;# 
   657   000F6D                     UCON            equ	3949	;# 
   658   000F6E                     UADDR           equ	3950	;# 
   659   000F6F                     UCFG            equ	3951	;# 
   660   000F70                     UEP0            equ	3952	;# 
   661   000F71                     UEP1            equ	3953	;# 
   662   000F72                     UEP2            equ	3954	;# 
   663   000F73                     UEP3            equ	3955	;# 
   664   000F74                     UEP4            equ	3956	;# 
   665   000F75                     UEP5            equ	3957	;# 
   666   000F76                     UEP6            equ	3958	;# 
   667   000F77                     UEP7            equ	3959	;# 
   668   000F78                     UEP8            equ	3960	;# 
   669   000F79                     UEP9            equ	3961	;# 
   670   000F7A                     UEP10           equ	3962	;# 
   671   000F7B                     UEP11           equ	3963	;# 
   672   000F7C                     UEP12           equ	3964	;# 
   673   000F7D                     UEP13           equ	3965	;# 
   674   000F7E                     UEP14           equ	3966	;# 
   675   000F7F                     UEP15           equ	3967	;# 
   676   000F80                     PORTA           equ	3968	;# 
   677   000F81                     PORTB           equ	3969	;# 
   678   000F82                     PORTC           equ	3970	;# 
   679   000F83                     PORTD           equ	3971	;# 
   680   000F84                     PORTE           equ	3972	;# 
   681   000F89                     LATA            equ	3977	;# 
   682   000F8A                     LATB            equ	3978	;# 
   683   000F8B                     LATC            equ	3979	;# 
   684   000F8C                     LATD            equ	3980	;# 
   685   000F8D                     LATE            equ	3981	;# 
   686   000F92                     TRISA           equ	3986	;# 
   687   000F92                     DDRA            equ	3986	;# 
   688   000F93                     TRISB           equ	3987	;# 
   689   000F93                     DDRB            equ	3987	;# 
   690   000F94                     TRISC           equ	3988	;# 
   691   000F94                     DDRC            equ	3988	;# 
   692   000F95                     TRISD           equ	3989	;# 
   693   000F95                     DDRD            equ	3989	;# 
   694   000F96                     TRISE           equ	3990	;# 
   695   000F96                     DDRE            equ	3990	;# 
   696   000F9B                     OSCTUNE         equ	3995	;# 
   697   000F9D                     PIE1            equ	3997	;# 
   698   000F9E                     PIR1            equ	3998	;# 
   699   000F9F                     IPR1            equ	3999	;# 
   700   000FA0                     PIE2            equ	4000	;# 
   701   000FA1                     PIR2            equ	4001	;# 
   702   000FA2                     IPR2            equ	4002	;# 
   703   000FA6                     EECON1          equ	4006	;# 
   704   000FA7                     EECON2          equ	4007	;# 
   705   000FA8                     EEDATA          equ	4008	;# 
   706   000FA9                     EEADR           equ	4009	;# 
   707   000FAB                     RCSTA           equ	4011	;# 
   708   000FAB                     RCSTA1          equ	4011	;# 
   709   000FAC                     TXSTA           equ	4012	;# 
   710   000FAC                     TXSTA1          equ	4012	;# 
   711   000FAD                     TXREG           equ	4013	;# 
   712   000FAD                     TXREG1          equ	4013	;# 
   713   000FAE                     RCREG           equ	4014	;# 
   714   000FAE                     RCREG1          equ	4014	;# 
   715   000FAF                     SPBRG           equ	4015	;# 
   716   000FAF                     SPBRG1          equ	4015	;# 
   717   000FB0                     SPBRGH          equ	4016	;# 
   718   000FB1                     T3CON           equ	4017	;# 
   719   000FB2                     TMR3            equ	4018	;# 
   720   000FB2                     TMR3L           equ	4018	;# 
   721   000FB3                     TMR3H           equ	4019	;# 
   722   000FB4                     CMCON           equ	4020	;# 
   723   000FB5                     CVRCON          equ	4021	;# 
   724   000FB6                     ECCP1AS         equ	4022	;# 
   725   000FB6                     CCP1AS          equ	4022	;# 
   726   000FB7                     ECCP1DEL        equ	4023	;# 
   727   000FB7                     CCP1DEL         equ	4023	;# 
   728   000FB8                     BAUDCON         equ	4024	;# 
   729   000FB8                     BAUDCTL         equ	4024	;# 
   730   000FBA                     CCP2CON         equ	4026	;# 
   731   000FBB                     CCPR2           equ	4027	;# 
   732   000FBB                     CCPR2L          equ	4027	;# 
   733   000FBC                     CCPR2H          equ	4028	;# 
   734   000FBD                     CCP1CON         equ	4029	;# 
   735   000FBD                     ECCP1CON        equ	4029	;# 
   736   000FBE                     CCPR1           equ	4030	;# 
   737   000FBE                     CCPR1L          equ	4030	;# 
   738   000FBF                     CCPR1H          equ	4031	;# 
   739   000FC0                     ADCON2          equ	4032	;# 
   740   000FC1                     ADCON1          equ	4033	;# 
   741   000FC2                     ADCON0          equ	4034	;# 
   742   000FC3                     ADRES           equ	4035	;# 
   743   000FC3                     ADRESL          equ	4035	;# 
   744   000FC4                     ADRESH          equ	4036	;# 
   745   000FC5                     SSPCON2         equ	4037	;# 
   746   000FC6                     SSPCON1         equ	4038	;# 
   747   000FC7                     SSPSTAT         equ	4039	;# 
   748   000FC8                     SSPADD          equ	4040	;# 
   749   000FC9                     SSPBUF          equ	4041	;# 
   750   000FCA                     T2CON           equ	4042	;# 
   751   000FCB                     PR2             equ	4043	;# 
   752   000FCB                     MEMCON          equ	4043	;# 
   753   000FCC                     TMR2            equ	4044	;# 
   754   000FCD                     T1CON           equ	4045	;# 
   755   000FCE                     TMR1            equ	4046	;# 
   756   000FCE                     TMR1L           equ	4046	;# 
   757   000FCF                     TMR1H           equ	4047	;# 
   758   000FD0                     RCON            equ	4048	;# 
   759   000FD1                     WDTCON          equ	4049	;# 
   760   000FD2                     HLVDCON         equ	4050	;# 
   761   000FD2                     LVDCON          equ	4050	;# 
   762   000FD3                     OSCCON          equ	4051	;# 
   763   000FD5                     T0CON           equ	4053	;# 
   764   000FD6                     TMR0            equ	4054	;# 
   765   000FD6                     TMR0L           equ	4054	;# 
   766   000FD7                     TMR0H           equ	4055	;# 
   767   000FD8                     STATUS          equ	4056	;# 
   768   000FD9                     FSR2            equ	4057	;# 
   769   000FD9                     FSR2L           equ	4057	;# 
   770   000FDA                     FSR2H           equ	4058	;# 
   771   000FDB                     PLUSW2          equ	4059	;# 
   772   000FDC                     PREINC2         equ	4060	;# 
   773   000FDD                     POSTDEC2        equ	4061	;# 
   774   000FDE                     POSTINC2        equ	4062	;# 
   775   000FDF                     INDF2           equ	4063	;# 
   776   000FE0                     BSR             equ	4064	;# 
   777   000FE1                     FSR1            equ	4065	;# 
   778   000FE1                     FSR1L           equ	4065	;# 
   779   000FE2                     FSR1H           equ	4066	;# 
   780   000FE3                     PLUSW1          equ	4067	;# 
   781   000FE4                     PREINC1         equ	4068	;# 
   782   000FE5                     POSTDEC1        equ	4069	;# 
   783   000FE6                     POSTINC1        equ	4070	;# 
   784   000FE7                     INDF1           equ	4071	;# 
   785   000FE8                     WREG            equ	4072	;# 
   786   000FE9                     FSR0            equ	4073	;# 
   787   000FE9                     FSR0L           equ	4073	;# 
   788   000FEA                     FSR0H           equ	4074	;# 
   789   000FEB                     PLUSW0          equ	4075	;# 
   790   000FEC                     PREINC0         equ	4076	;# 
   791   000FED                     POSTDEC0        equ	4077	;# 
   792   000FEE                     POSTINC0        equ	4078	;# 
   793   000FEF                     INDF0           equ	4079	;# 
   794   000FF0                     INTCON3         equ	4080	;# 
   795   000FF1                     INTCON2         equ	4081	;# 
   796   000FF2                     INTCON          equ	4082	;# 
   797   000FF3                     PROD            equ	4083	;# 
   798   000FF3                     PRODL           equ	4083	;# 
   799   000FF4                     PRODH           equ	4084	;# 
   800   000FF5                     TABLAT          equ	4085	;# 
   801   000FF6                     TBLPTR          equ	4086	;# 
   802   000FF6                     TBLPTRL         equ	4086	;# 
   803   000FF7                     TBLPTRH         equ	4087	;# 
   804   000FF8                     TBLPTRU         equ	4088	;# 
   805   000FF9                     PCLAT           equ	4089	;# 
   806   000FF9                     PC              equ	4089	;# 
   807   000FF9                     PCL             equ	4089	;# 
   808   000FFA                     PCLATH          equ	4090	;# 
   809   000FFB                     PCLATU          equ	4091	;# 
   810   000FFC                     STKPTR          equ	4092	;# 
   811   000FFD                     TOS             equ	4093	;# 
   812   000FFD                     TOSL            equ	4093	;# 
   813   000FFE                     TOSH            equ	4094	;# 
   814   000FFF                     TOSU            equ	4095	;# 
   815   000F62                     SPPDATA         equ	3938	;# 
   816   000F63                     SPPCFG          equ	3939	;# 
   817   000F64                     SPPEPS          equ	3940	;# 
   818   000F65                     SPPCON          equ	3941	;# 
   819   000F66                     UFRM            equ	3942	;# 
   820   000F66                     UFRML           equ	3942	;# 
   821   000F67                     UFRMH           equ	3943	;# 
   822   000F68                     UIR             equ	3944	;# 
   823   000F69                     UIE             equ	3945	;# 
   824   000F6A                     UEIR            equ	3946	;# 
   825   000F6B                     UEIE            equ	3947	;# 
   826   000F6C                     USTAT           equ	3948	;# 
   827   000F6D                     UCON            equ	3949	;# 
   828   000F6E                     UADDR           equ	3950	;# 
   829   000F6F                     UCFG            equ	3951	;# 
   830   000F70                     UEP0            equ	3952	;# 
   831   000F71                     UEP1            equ	3953	;# 
   832   000F72                     UEP2            equ	3954	;# 
   833   000F73                     UEP3            equ	3955	;# 
   834   000F74                     UEP4            equ	3956	;# 
   835   000F75                     UEP5            equ	3957	;# 
   836   000F76                     UEP6            equ	3958	;# 
   837   000F77                     UEP7            equ	3959	;# 
   838   000F78                     UEP8            equ	3960	;# 
   839   000F79                     UEP9            equ	3961	;# 
   840   000F7A                     UEP10           equ	3962	;# 
   841   000F7B                     UEP11           equ	3963	;# 
   842   000F7C                     UEP12           equ	3964	;# 
   843   000F7D                     UEP13           equ	3965	;# 
   844   000F7E                     UEP14           equ	3966	;# 
   845   000F7F                     UEP15           equ	3967	;# 
   846   000F80                     PORTA           equ	3968	;# 
   847   000F81                     PORTB           equ	3969	;# 
   848   000F82                     PORTC           equ	3970	;# 
   849   000F83                     PORTD           equ	3971	;# 
   850   000F84                     PORTE           equ	3972	;# 
   851   000F89                     LATA            equ	3977	;# 
   852   000F8A                     LATB            equ	3978	;# 
   853   000F8B                     LATC            equ	3979	;# 
   854   000F8C                     LATD            equ	3980	;# 
   855   000F8D                     LATE            equ	3981	;# 
   856   000F92                     TRISA           equ	3986	;# 
   857   000F92                     DDRA            equ	3986	;# 
   858   000F93                     TRISB           equ	3987	;# 
   859   000F93                     DDRB            equ	3987	;# 
   860   000F94                     TRISC           equ	3988	;# 
   861   000F94                     DDRC            equ	3988	;# 
   862   000F95                     TRISD           equ	3989	;# 
   863   000F95                     DDRD            equ	3989	;# 
   864   000F96                     TRISE           equ	3990	;# 
   865   000F96                     DDRE            equ	3990	;# 
   866   000F9B                     OSCTUNE         equ	3995	;# 
   867   000F9D                     PIE1            equ	3997	;# 
   868   000F9E                     PIR1            equ	3998	;# 
   869   000F9F                     IPR1            equ	3999	;# 
   870   000FA0                     PIE2            equ	4000	;# 
   871   000FA1                     PIR2            equ	4001	;# 
   872   000FA2                     IPR2            equ	4002	;# 
   873   000FA6                     EECON1          equ	4006	;# 
   874   000FA7                     EECON2          equ	4007	;# 
   875   000FA8                     EEDATA          equ	4008	;# 
   876   000FA9                     EEADR           equ	4009	;# 
   877   000FAB                     RCSTA           equ	4011	;# 
   878   000FAB                     RCSTA1          equ	4011	;# 
   879   000FAC                     TXSTA           equ	4012	;# 
   880   000FAC                     TXSTA1          equ	4012	;# 
   881   000FAD                     TXREG           equ	4013	;# 
   882   000FAD                     TXREG1          equ	4013	;# 
   883   000FAE                     RCREG           equ	4014	;# 
   884   000FAE                     RCREG1          equ	4014	;# 
   885   000FAF                     SPBRG           equ	4015	;# 
   886   000FAF                     SPBRG1          equ	4015	;# 
   887   000FB0                     SPBRGH          equ	4016	;# 
   888   000FB1                     T3CON           equ	4017	;# 
   889   000FB2                     TMR3            equ	4018	;# 
   890   000FB2                     TMR3L           equ	4018	;# 
   891   000FB3                     TMR3H           equ	4019	;# 
   892   000FB4                     CMCON           equ	4020	;# 
   893   000FB5                     CVRCON          equ	4021	;# 
   894   000FB6                     ECCP1AS         equ	4022	;# 
   895   000FB6                     CCP1AS          equ	4022	;# 
   896   000FB7                     ECCP1DEL        equ	4023	;# 
   897   000FB7                     CCP1DEL         equ	4023	;# 
   898   000FB8                     BAUDCON         equ	4024	;# 
   899   000FB8                     BAUDCTL         equ	4024	;# 
   900   000FBA                     CCP2CON         equ	4026	;# 
   901   000FBB                     CCPR2           equ	4027	;# 
   902   000FBB                     CCPR2L          equ	4027	;# 
   903   000FBC                     CCPR2H          equ	4028	;# 
   904   000FBD                     CCP1CON         equ	4029	;# 
   905   000FBD                     ECCP1CON        equ	4029	;# 
   906   000FBE                     CCPR1           equ	4030	;# 
   907   000FBE                     CCPR1L          equ	4030	;# 
   908   000FBF                     CCPR1H          equ	4031	;# 
   909   000FC0                     ADCON2          equ	4032	;# 
   910   000FC1                     ADCON1          equ	4033	;# 
   911   000FC2                     ADCON0          equ	4034	;# 
   912   000FC3                     ADRES           equ	4035	;# 
   913   000FC3                     ADRESL          equ	4035	;# 
   914   000FC4                     ADRESH          equ	4036	;# 
   915   000FC5                     SSPCON2         equ	4037	;# 
   916   000FC6                     SSPCON1         equ	4038	;# 
   917   000FC7                     SSPSTAT         equ	4039	;# 
   918   000FC8                     SSPADD          equ	4040	;# 
   919   000FC9                     SSPBUF          equ	4041	;# 
   920   000FCA                     T2CON           equ	4042	;# 
   921   000FCB                     PR2             equ	4043	;# 
   922   000FCB                     MEMCON          equ	4043	;# 
   923   000FCC                     TMR2            equ	4044	;# 
   924   000FCD                     T1CON           equ	4045	;# 
   925   000FCE                     TMR1            equ	4046	;# 
   926   000FCE                     TMR1L           equ	4046	;# 
   927   000FCF                     TMR1H           equ	4047	;# 
   928   000FD0                     RCON            equ	4048	;# 
   929   000FD1                     WDTCON          equ	4049	;# 
   930   000FD2                     HLVDCON         equ	4050	;# 
   931   000FD2                     LVDCON          equ	4050	;# 
   932   000FD3                     OSCCON          equ	4051	;# 
   933   000FD5                     T0CON           equ	4053	;# 
   934   000FD6                     TMR0            equ	4054	;# 
   935   000FD6                     TMR0L           equ	4054	;# 
   936   000FD7                     TMR0H           equ	4055	;# 
   937   000FD8                     STATUS          equ	4056	;# 
   938   000FD9                     FSR2            equ	4057	;# 
   939   000FD9                     FSR2L           equ	4057	;# 
   940   000FDA                     FSR2H           equ	4058	;# 
   941   000FDB                     PLUSW2          equ	4059	;# 
   942   000FDC                     PREINC2         equ	4060	;# 
   943   000FDD                     POSTDEC2        equ	4061	;# 
   944   000FDE                     POSTINC2        equ	4062	;# 
   945   000FDF                     INDF2           equ	4063	;# 
   946   000FE0                     BSR             equ	4064	;# 
   947   000FE1                     FSR1            equ	4065	;# 
   948   000FE1                     FSR1L           equ	4065	;# 
   949   000FE2                     FSR1H           equ	4066	;# 
   950   000FE3                     PLUSW1          equ	4067	;# 
   951   000FE4                     PREINC1         equ	4068	;# 
   952   000FE5                     POSTDEC1        equ	4069	;# 
   953   000FE6                     POSTINC1        equ	4070	;# 
   954   000FE7                     INDF1           equ	4071	;# 
   955   000FE8                     WREG            equ	4072	;# 
   956   000FE9                     FSR0            equ	4073	;# 
   957   000FE9                     FSR0L           equ	4073	;# 
   958   000FEA                     FSR0H           equ	4074	;# 
   959   000FEB                     PLUSW0          equ	4075	;# 
   960   000FEC                     PREINC0         equ	4076	;# 
   961   000FED                     POSTDEC0        equ	4077	;# 
   962   000FEE                     POSTINC0        equ	4078	;# 
   963   000FEF                     INDF0           equ	4079	;# 
   964   000FF0                     INTCON3         equ	4080	;# 
   965   000FF1                     INTCON2         equ	4081	;# 
   966   000FF2                     INTCON          equ	4082	;# 
   967   000FF3                     PROD            equ	4083	;# 
   968   000FF3                     PRODL           equ	4083	;# 
   969   000FF4                     PRODH           equ	4084	;# 
   970   000FF5                     TABLAT          equ	4085	;# 
   971   000FF6                     TBLPTR          equ	4086	;# 
   972   000FF6                     TBLPTRL         equ	4086	;# 
   973   000FF7                     TBLPTRH         equ	4087	;# 
   974   000FF8                     TBLPTRU         equ	4088	;# 
   975   000FF9                     PCLAT           equ	4089	;# 
   976   000FF9                     PC              equ	4089	;# 
   977   000FF9                     PCL             equ	4089	;# 
   978   000FFA                     PCLATH          equ	4090	;# 
   979   000FFB                     PCLATU          equ	4091	;# 
   980   000FFC                     STKPTR          equ	4092	;# 
   981   000FFD                     TOS             equ	4093	;# 
   982   000FFD                     TOSL            equ	4093	;# 
   983   000FFE                     TOSH            equ	4094	;# 
   984   000FFF                     TOSU            equ	4095	;# 
   985   000F62                     SPPDATA         equ	3938	;# 
   986   000F63                     SPPCFG          equ	3939	;# 
   987   000F64                     SPPEPS          equ	3940	;# 
   988   000F65                     SPPCON          equ	3941	;# 
   989   000F66                     UFRM            equ	3942	;# 
   990   000F66                     UFRML           equ	3942	;# 
   991   000F67                     UFRMH           equ	3943	;# 
   992   000F68                     UIR             equ	3944	;# 
   993   000F69                     UIE             equ	3945	;# 
   994   000F6A                     UEIR            equ	3946	;# 
   995   000F6B                     UEIE            equ	3947	;# 
   996   000F6C                     USTAT           equ	3948	;# 
   997   000F6D                     UCON            equ	3949	;# 
   998   000F6E                     UADDR           equ	3950	;# 
   999   000F6F                     UCFG            equ	3951	;# 
  1000   000F70                     UEP0            equ	3952	;# 
  1001   000F71                     UEP1            equ	3953	;# 
  1002   000F72                     UEP2            equ	3954	;# 
  1003   000F73                     UEP3            equ	3955	;# 
  1004   000F74                     UEP4            equ	3956	;# 
  1005   000F75                     UEP5            equ	3957	;# 
  1006   000F76                     UEP6            equ	3958	;# 
  1007   000F77                     UEP7            equ	3959	;# 
  1008   000F78                     UEP8            equ	3960	;# 
  1009   000F79                     UEP9            equ	3961	;# 
  1010   000F7A                     UEP10           equ	3962	;# 
  1011   000F7B                     UEP11           equ	3963	;# 
  1012   000F7C                     UEP12           equ	3964	;# 
  1013   000F7D                     UEP13           equ	3965	;# 
  1014   000F7E                     UEP14           equ	3966	;# 
  1015   000F7F                     UEP15           equ	3967	;# 
  1016   000F80                     PORTA           equ	3968	;# 
  1017   000F81                     PORTB           equ	3969	;# 
  1018   000F82                     PORTC           equ	3970	;# 
  1019   000F83                     PORTD           equ	3971	;# 
  1020   000F84                     PORTE           equ	3972	;# 
  1021   000F89                     LATA            equ	3977	;# 
  1022   000F8A                     LATB            equ	3978	;# 
  1023   000F8B                     LATC            equ	3979	;# 
  1024   000F8C                     LATD            equ	3980	;# 
  1025   000F8D                     LATE            equ	3981	;# 
  1026   000F92                     TRISA           equ	3986	;# 
  1027   000F92                     DDRA            equ	3986	;# 
  1028   000F93                     TRISB           equ	3987	;# 
  1029   000F93                     DDRB            equ	3987	;# 
  1030   000F94                     TRISC           equ	3988	;# 
  1031   000F94                     DDRC            equ	3988	;# 
  1032   000F95                     TRISD           equ	3989	;# 
  1033   000F95                     DDRD            equ	3989	;# 
  1034   000F96                     TRISE           equ	3990	;# 
  1035   000F96                     DDRE            equ	3990	;# 
  1036   000F9B                     OSCTUNE         equ	3995	;# 
  1037   000F9D                     PIE1            equ	3997	;# 
  1038   000F9E                     PIR1            equ	3998	;# 
  1039   000F9F                     IPR1            equ	3999	;# 
  1040   000FA0                     PIE2            equ	4000	;# 
  1041   000FA1                     PIR2            equ	4001	;# 
  1042   000FA2                     IPR2            equ	4002	;# 
  1043   000FA6                     EECON1          equ	4006	;# 
  1044   000FA7                     EECON2          equ	4007	;# 
  1045   000FA8                     EEDATA          equ	4008	;# 
  1046   000FA9                     EEADR           equ	4009	;# 
  1047   000FAB                     RCSTA           equ	4011	;# 
  1048   000FAB                     RCSTA1          equ	4011	;# 
  1049   000FAC                     TXSTA           equ	4012	;# 
  1050   000FAC                     TXSTA1          equ	4012	;# 
  1051   000FAD                     TXREG           equ	4013	;# 
  1052   000FAD                     TXREG1          equ	4013	;# 
  1053   000FAE                     RCREG           equ	4014	;# 
  1054   000FAE                     RCREG1          equ	4014	;# 
  1055   000FAF                     SPBRG           equ	4015	;# 
  1056   000FAF                     SPBRG1          equ	4015	;# 
  1057   000FB0                     SPBRGH          equ	4016	;# 
  1058   000FB1                     T3CON           equ	4017	;# 
  1059   000FB2                     TMR3            equ	4018	;# 
  1060   000FB2                     TMR3L           equ	4018	;# 
  1061   000FB3                     TMR3H           equ	4019	;# 
  1062   000FB4                     CMCON           equ	4020	;# 
  1063   000FB5                     CVRCON          equ	4021	;# 
  1064   000FB6                     ECCP1AS         equ	4022	;# 
  1065   000FB6                     CCP1AS          equ	4022	;# 
  1066   000FB7                     ECCP1DEL        equ	4023	;# 
  1067   000FB7                     CCP1DEL         equ	4023	;# 
  1068   000FB8                     BAUDCON         equ	4024	;# 
  1069   000FB8                     BAUDCTL         equ	4024	;# 
  1070   000FBA                     CCP2CON         equ	4026	;# 
  1071   000FBB                     CCPR2           equ	4027	;# 
  1072   000FBB                     CCPR2L          equ	4027	;# 
  1073   000FBC                     CCPR2H          equ	4028	;# 
  1074   000FBD                     CCP1CON         equ	4029	;# 
  1075   000FBD                     ECCP1CON        equ	4029	;# 
  1076   000FBE                     CCPR1           equ	4030	;# 
  1077   000FBE                     CCPR1L          equ	4030	;# 
  1078   000FBF                     CCPR1H          equ	4031	;# 
  1079   000FC0                     ADCON2          equ	4032	;# 
  1080   000FC1                     ADCON1          equ	4033	;# 
  1081   000FC2                     ADCON0          equ	4034	;# 
  1082   000FC3                     ADRES           equ	4035	;# 
  1083   000FC3                     ADRESL          equ	4035	;# 
  1084   000FC4                     ADRESH          equ	4036	;# 
  1085   000FC5                     SSPCON2         equ	4037	;# 
  1086   000FC6                     SSPCON1         equ	4038	;# 
  1087   000FC7                     SSPSTAT         equ	4039	;# 
  1088   000FC8                     SSPADD          equ	4040	;# 
  1089   000FC9                     SSPBUF          equ	4041	;# 
  1090   000FCA                     T2CON           equ	4042	;# 
  1091   000FCB                     PR2             equ	4043	;# 
  1092   000FCB                     MEMCON          equ	4043	;# 
  1093   000FCC                     TMR2            equ	4044	;# 
  1094   000FCD                     T1CON           equ	4045	;# 
  1095   000FCE                     TMR1            equ	4046	;# 
  1096   000FCE                     TMR1L           equ	4046	;# 
  1097   000FCF                     TMR1H           equ	4047	;# 
  1098   000FD0                     RCON            equ	4048	;# 
  1099   000FD1                     WDTCON          equ	4049	;# 
  1100   000FD2                     HLVDCON         equ	4050	;# 
  1101   000FD2                     LVDCON          equ	4050	;# 
  1102   000FD3                     OSCCON          equ	4051	;# 
  1103   000FD5                     T0CON           equ	4053	;# 
  1104   000FD6                     TMR0            equ	4054	;# 
  1105   000FD6                     TMR0L           equ	4054	;# 
  1106   000FD7                     TMR0H           equ	4055	;# 
  1107   000FD8                     STATUS          equ	4056	;# 
  1108   000FD9                     FSR2            equ	4057	;# 
  1109   000FD9                     FSR2L           equ	4057	;# 
  1110   000FDA                     FSR2H           equ	4058	;# 
  1111   000FDB                     PLUSW2          equ	4059	;# 
  1112   000FDC                     PREINC2         equ	4060	;# 
  1113   000FDD                     POSTDEC2        equ	4061	;# 
  1114   000FDE                     POSTINC2        equ	4062	;# 
  1115   000FDF                     INDF2           equ	4063	;# 
  1116   000FE0                     BSR             equ	4064	;# 
  1117   000FE1                     FSR1            equ	4065	;# 
  1118   000FE1                     FSR1L           equ	4065	;# 
  1119   000FE2                     FSR1H           equ	4066	;# 
  1120   000FE3                     PLUSW1          equ	4067	;# 
  1121   000FE4                     PREINC1         equ	4068	;# 
  1122   000FE5                     POSTDEC1        equ	4069	;# 
  1123   000FE6                     POSTINC1        equ	4070	;# 
  1124   000FE7                     INDF1           equ	4071	;# 
  1125   000FE8                     WREG            equ	4072	;# 
  1126   000FE9                     FSR0            equ	4073	;# 
  1127   000FE9                     FSR0L           equ	4073	;# 
  1128   000FEA                     FSR0H           equ	4074	;# 
  1129   000FEB                     PLUSW0          equ	4075	;# 
  1130   000FEC                     PREINC0         equ	4076	;# 
  1131   000FED                     POSTDEC0        equ	4077	;# 
  1132   000FEE                     POSTINC0        equ	4078	;# 
  1133   000FEF                     INDF0           equ	4079	;# 
  1134   000FF0                     INTCON3         equ	4080	;# 
  1135   000FF1                     INTCON2         equ	4081	;# 
  1136   000FF2                     INTCON          equ	4082	;# 
  1137   000FF3                     PROD            equ	4083	;# 
  1138   000FF3                     PRODL           equ	4083	;# 
  1139   000FF4                     PRODH           equ	4084	;# 
  1140   000FF5                     TABLAT          equ	4085	;# 
  1141   000FF6                     TBLPTR          equ	4086	;# 
  1142   000FF6                     TBLPTRL         equ	4086	;# 
  1143   000FF7                     TBLPTRH         equ	4087	;# 
  1144   000FF8                     TBLPTRU         equ	4088	;# 
  1145   000FF9                     PCLAT           equ	4089	;# 
  1146   000FF9                     PC              equ	4089	;# 
  1147   000FF9                     PCL             equ	4089	;# 
  1148   000FFA                     PCLATH          equ	4090	;# 
  1149   000FFB                     PCLATU          equ	4091	;# 
  1150   000FFC                     STKPTR          equ	4092	;# 
  1151   000FFD                     TOS             equ	4093	;# 
  1152   000FFD                     TOSL            equ	4093	;# 
  1153   000FFE                     TOSH            equ	4094	;# 
  1154   000FFF                     TOSU            equ	4095	;# 
  1155   007CF5                     _RCIF           set	31989
  1156   007CF4                     _TXIF           set	31988
  1157   007CA7                     _TRISC7         set	31911
  1158   007CA6                     _TRISC6         set	31910
  1159   007E2C                     _ACKEN          set	32300
  1160   007E2D                     _ACKDT          set	32301
  1161   007E2B                     _RCEN           set	32299
  1162   007E2E                     _ACKSTAT        set	32302
  1163   007E2A                     _PEN            set	32298
  1164   007E29                     _RSEN           set	32297
  1165   007E28                     _SEN            set	32296
  1166   007C99                     _TRISB1         set	31897
  1167   007C98                     _TRISB0         set	31896
  1168   007C62                     _LATD2          set	31842
  1169   007C60                     _LATD0          set	31840
  1170   007D5C                     _CREN           set	32092
  1171   000F80                     _PORTAbits      set	3968
  1172   000F81                     _PORTBbits      set	3969
  1173   000F89                     _LATAbits       set	3977
  1174   000F92                     _TRISAbits      set	3986
  1175   000FAD                     _TXREG          set	4013
  1176   000FAB                     _RCSTA          set	4011
  1177   000FAC                     _TXSTA          set	4012
  1178   000FAF                     _SPBRG          set	4015
  1179   000FC9                     _SSPBUF         set	4041
  1180   000FC7                     _SSPSTAT        set	4039
  1181   000FC8                     _SSPADD         set	4040
  1182   000FC5                     _SSPCON2        set	4037
  1183   000FC6                     _SSPCON1        set	4038
  1184   000F8C                     _LATD           set	3980
  1185   000F95                     _TRISD          set	3989
  1186   000F9D                     _PIE1bits       set	3997
  1187   000FF2                     _INTCONbits     set	4082
  1188   000FF1                     _INTCON2bits    set	4081
  1189   000F93                     _TRISBbits      set	3987
  1190   000FF0                     _INTCON3bits    set	4080
  1191   000FAB                     _RCSTAbits      set	4011
  1192   000FAE                     _RCREG          set	4014
  1193   000F9E                     _PIR1bits       set	3998
  1194                           
  1195                           	psect	smallconst
  1196   000800                     __psmallconst:
  1197                           	callstack 0
  1198   000800  00                 	db	0
  1199   000801                     STR_3:
  1200   000801  46                 	db	70	;'F'
  1201   000802  65                 	db	101	;'e'
  1202   000803  63                 	db	99	;'c'
  1203   000804  68                 	db	104	;'h'
  1204   000805  61                 	db	97	;'a'
  1205   000806  3A                 	db	58	;':'
  1206   000807  20                 	db	32
  1207   000808  25                 	db	37
  1208   000809  30                 	db	48	;'0'
  1209   00080A  32                 	db	50	;'2'
  1210   00080B  75                 	db	117	;'u'
  1211   00080C  2F                 	db	47
  1212   00080D  25                 	db	37
  1213   00080E  30                 	db	48	;'0'
  1214   00080F  32                 	db	50	;'2'
  1215   000810  75                 	db	117	;'u'
  1216   000811  2F                 	db	47
  1217   000812  25                 	db	37
  1218   000813  30                 	db	48	;'0'
  1219   000814  32                 	db	50	;'2'
  1220   000815  75                 	db	117	;'u'
  1221   000816  00                 	db	0
  1222   000817                     STR_2:
  1223   000817  48                 	db	72	;'H'
  1224   000818  6F                 	db	111	;'o'
  1225   000819  72                 	db	114	;'r'
  1226   00081A  61                 	db	97	;'a'
  1227   00081B  3A                 	db	58	;':'
  1228   00081C  20                 	db	32
  1229   00081D  25                 	db	37
  1230   00081E  30                 	db	48	;'0'
  1231   00081F  32                 	db	50	;'2'
  1232   000820  75                 	db	117	;'u'
  1233   000821  3A                 	db	58	;':'
  1234   000822  25                 	db	37
  1235   000823  30                 	db	48	;'0'
  1236   000824  32                 	db	50	;'2'
  1237   000825  75                 	db	117	;'u'
  1238   000826  3A                 	db	58	;':'
  1239   000827  25                 	db	37
  1240   000828  30                 	db	48	;'0'
  1241   000829  32                 	db	50	;'2'
  1242   00082A  75                 	db	117	;'u'
  1243   00082B  00                 	db	0
  1244   00082C                     STR_4:
  1245   00082C  53                 	db	83	;'S'
  1246   00082D  69                 	db	105	;'i'
  1247   00082E  73                 	db	115	;'s'
  1248   00082F  74                 	db	116	;'t'
  1249   000830  65                 	db	101	;'e'
  1250   000831  6D                 	db	109	;'m'
  1251   000832  61                 	db	97	;'a'
  1252   000833  20                 	db	32
  1253   000834  65                 	db	101	;'e'
  1254   000835  6E                 	db	110	;'n'
  1255   000836  20                 	db	32
  1256   000837  70                 	db	112	;'p'
  1257   000838  61                 	db	97	;'a'
  1258   000839  75                 	db	117	;'u'
  1259   00083A  73                 	db	115	;'s'
  1260   00083B  61                 	db	97	;'a'
  1261   00083C  00                 	db	0
  1262   00083D                     STR_5:
  1263   00083D  53                 	db	83	;'S'
  1264   00083E  69                 	db	105	;'i'
  1265   00083F  73                 	db	115	;'s'
  1266   000840  74                 	db	116	;'t'
  1267   000841  65                 	db	101	;'e'
  1268   000842  6D                 	db	109	;'m'
  1269   000843  61                 	db	97	;'a'
  1270   000844  20                 	db	32
  1271   000845  61                 	db	97	;'a'
  1272   000846  63                 	db	99	;'c'
  1273   000847  74                 	db	116	;'t'
  1274   000848  69                 	db	105	;'i'
  1275   000849  76                 	db	118	;'v'
  1276   00084A  6F                 	db	111	;'o'
  1277   00084B  00                 	db	0
  1278   00084C                     STR_7:
  1279   00084C  4D                 	db	77	;'M'
  1280   00084D  49                 	db	73	;'I'
  1281   00084E  43                 	db	67	;'C'
  1282   00084F  52                 	db	82	;'R'
  1283   000850  4F                 	db	79	;'O'
  1284   000851  43                 	db	67	;'C'
  1285   000852  4F                 	db	79	;'O'
  1286   000853  4E                 	db	78	;'N'
  1287   000854  54                 	db	84	;'T'
  1288   000855  52                 	db	82	;'R'
  1289   000856  4F                 	db	79	;'O'
  1290   000857  4C                 	db	76	;'L'
  1291   000858  00                 	db	0
  1292   000859                     STR_1:
  1293   000859  54                 	db	84	;'T'
  1294   00085A  65                 	db	101	;'e'
  1295   00085B  6D                 	db	109	;'m'
  1296   00085C  70                 	db	112	;'p'
  1297   00085D  3A                 	db	58	;':'
  1298   00085E  20                 	db	32
  1299   00085F  25                 	db	37
  1300   000860  75                 	db	117	;'u'
  1301   000861  20                 	db	32
  1302   000862  43                 	db	67	;'C'
  1303   000863  00                 	db	0
  1304   000864                     STR_8:
  1305   000864  61                 	db	97	;'a'
  1306   000865  70                 	db	112	;'p'
  1307   000866  61                 	db	97	;'a'
  1308   000867  67                 	db	103	;'g'
  1309   000868  61                 	db	97	;'a'
  1310   000869  64                 	db	100	;'d'
  1311   00086A  6F                 	db	111	;'o'
  1312   00086B  00                 	db	0
  1313   00082C                     STR_6           equ	STR_4
  1314   00086C  00                 	db	0	; dummy byte at the end
  1315   000800                     __smallconst    set	__psmallconst
  1316   000800                     __mediumconst   set	__psmallconst
  1317   000002                     __activetblptr  equ	2
  1318                           
  1319                           ; #config settings
  1320                           
  1321                           	psect	cinit
  1322   0021D0                     __pcinit:
  1323                           	callstack 0
  1324   0021D0                     start_initialization:
  1325                           	callstack 0
  1326   0021D0                     __initialization:
  1327                           	callstack 0
  1328                           
  1329                           ; Clear objects allocated to BANK0 (32 bytes)
  1330   0021D0  EE00  F096         	lfsr	0,__pbssBANK0
  1331   0021D4  0E20               	movlw	32
  1332   0021D6                     clear_0:
  1333   0021D6  6AEE               	clrf	postinc0,c
  1334   0021D8  06E8               	decf	wreg,f,c
  1335   0021DA  E1FD               	bnz	clear_0
  1336                           
  1337                           ; Clear objects allocated to COMRAM (7 bytes)
  1338   0021DC  EE00  F048         	lfsr	0,__pbssCOMRAM
  1339   0021E0  0E07               	movlw	7
  1340   0021E2                     clear_1:
  1341   0021E2  6AEE               	clrf	postinc0,c
  1342   0021E4  06E8               	decf	wreg,f,c
  1343   0021E6  E1FD               	bnz	clear_1
  1344   0021E8                     end_of_initialization:
  1345                           	callstack 0
  1346   0021E8                     __end_of__initialization:
  1347                           	callstack 0
  1348   0021E8  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1349   0021EA  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1350   0021EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1351   0021EE  6EF8               	movwf	tblptru,c
  1352   0021F0  0100               	movlb	0
  1353   0021F2  EF64  F00B         	goto	_main	;jump to C main() function
  1354                           
  1355                           	psect	bssCOMRAM
  1356   000048                     __pbssCOMRAM:
  1357                           	callstack 0
  1358   000048                     _width:
  1359                           	callstack 0
  1360   000048                     	ds	2
  1361   00004A                     _prec:
  1362                           	callstack 0
  1363   00004A                     	ds	2
  1364   00004C                     _flags:
  1365                           	callstack 0
  1366   00004C                     	ds	1
  1367   00004D                     _estado:
  1368                           	callstack 0
  1369   00004D                     	ds	1
  1370   00004E                     _sistema_activo:
  1371                           	callstack 0
  1372   00004E                     	ds	1
  1373                           
  1374                           	psect	bssBANK0
  1375   000096                     __pbssBANK0:
  1376                           	callstack 0
  1377   000096                     _dbuf:
  1378                           	callstack 0
  1379   000096                     	ds	32
  1380                           
  1381                           	psect	cstackBANK0
  1382   000060                     __pcstackBANK0:
  1383                           	callstack 0
  1384   000060                     sprintf@ap:
  1385                           	callstack 0
  1386   000060                     USART_Init@baud_rate:
  1387                           	callstack 0
  1388                           
  1389                           ; 4 bytes @ 0x0
  1390   000060                     	ds	1
  1391   000061                     sprintf@f:
  1392                           	callstack 0
  1393                           
  1394                           ; 11 bytes @ 0x1
  1395   000061                     	ds	3
  1396   000064                     USART_Init@temp:
  1397                           	callstack 0
  1398                           
  1399                           ; 4 bytes @ 0x4
  1400   000064                     	ds	8
  1401   00006C                     mostrar_temperatura@buffer:
  1402                           	callstack 0
  1403   00006C                     mostrar_rtc@fecha:
  1404                           	callstack 0
  1405                           
  1406                           ; 17 bytes @ 0xC
  1407   00006C                     	ds	16
  1408   00007C                     mostrar_temperatura@temp:
  1409                           	callstack 0
  1410                           
  1411                           ; 1 bytes @ 0x1C
  1412   00007C                     	ds	1
  1413   00007D                     mostrar_rtc@hora:
  1414                           	callstack 0
  1415                           
  1416                           ; 17 bytes @ 0x1D
  1417   00007D                     	ds	17
  1418   00008E                     mostrar_rtc@h:
  1419                           	callstack 0
  1420                           
  1421                           ; 1 bytes @ 0x2E
  1422   00008E                     	ds	1
  1423   00008F                     mostrar_rtc@m:
  1424                           	callstack 0
  1425                           
  1426                           ; 1 bytes @ 0x2F
  1427   00008F                     	ds	1
  1428   000090                     mostrar_rtc@s:
  1429                           	callstack 0
  1430                           
  1431                           ; 1 bytes @ 0x30
  1432   000090                     	ds	1
  1433   000091                     mostrar_rtc@d:
  1434                           	callstack 0
  1435                           
  1436                           ; 1 bytes @ 0x31
  1437   000091                     	ds	1
  1438   000092                     mostrar_rtc@mo:
  1439                           	callstack 0
  1440                           
  1441                           ; 1 bytes @ 0x32
  1442   000092                     	ds	1
  1443   000093                     mostrar_rtc@y:
  1444                           	callstack 0
  1445                           
  1446                           ; 1 bytes @ 0x33
  1447   000093                     	ds	1
  1448   000094                     ??_main:
  1449                           
  1450                           ; 1 bytes @ 0x34
  1451   000094                     	ds	2
  1452                           
  1453                           	psect	cstackCOMRAM
  1454   000001                     __pcstackCOMRAM:
  1455                           	callstack 0
  1456   000001                     ??i2_LCD_Command:
  1457   000001                     ??i2_LCD_Char:
  1458                           
  1459                           ; 1 bytes @ 0x0
  1460   000001                     	ds	1
  1461   000002                     i2LCD_Command@cmd:
  1462                           	callstack 0
  1463   000002                     i2LCD_Char@dat:
  1464                           	callstack 0
  1465                           
  1466                           ; 1 bytes @ 0x1
  1467   000002                     	ds	1
  1468   000003                     i2LCD_String@msg:
  1469                           	callstack 0
  1470   000003                     ??i2_LCD_Clear:
  1471                           
  1472                           ; 1 bytes @ 0x2
  1473   000003                     	ds	2
  1474   000005                     i2LCD_String_xy@pos:
  1475                           	callstack 0
  1476   000005                     
  1477                           ; 1 bytes @ 0x4
  1478   000005                     	ds	1
  1479   000006                     i2LCD_String_xy@msg:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x5
  1483   000006                     	ds	2
  1484   000008                     i2LCD_String_xy@row:
  1485                           	callstack 0
  1486   000008                     
  1487                           ; 1 bytes @ 0x7
  1488   000008                     	ds	1
  1489   000009                     i2LCD_String_xy@location:
  1490                           	callstack 0
  1491                           
  1492                           ; 1 bytes @ 0x8
  1493   000009                     	ds	1
  1494   00000A                     ??_ISR:
  1495                           
  1496                           ; 1 bytes @ 0x9
  1497   00000A                     	ds	6
  1498   000010                     ISR@comando:
  1499                           	callstack 0
  1500                           
  1501                           ; 1 bytes @ 0xF
  1502   000010                     	ds	1
  1503   000011                     ?___lwdiv:
  1504                           	callstack 0
  1505   000011                     ?___lwmod:
  1506                           	callstack 0
  1507   000011                     ?_read_prec_or_width:
  1508                           	callstack 0
  1509   000011                     ?___fltol:
  1510                           	callstack 0
  1511   000011                     ?___xxtofl:
  1512                           	callstack 0
  1513   000011                     DHT11_Read@data:
  1514                           	callstack 0
  1515   000011                     read_prec_or_width@fmt:
  1516                           	callstack 0
  1517   000011                     ___lwdiv@dividend:
  1518                           	callstack 0
  1519   000011                     ___lwmod@dividend:
  1520                           	callstack 0
  1521   000011                     fputc@c:
  1522                           	callstack 0
  1523   000011                     ___fltol@f1:
  1524                           	callstack 0
  1525   000011                     ___xxtofl@val:
  1526                           	callstack 0
  1527   000011                     ??_LCD_Command:
  1528   000011                     ??_LCD_Char:
  1529   000011                     ??_I2C_Master_Wait:
  1530   000011                     ??_BCD2DEC:
  1531                           
  1532                           ; 1 bytes @ 0x10
  1533   000011                     	ds	1
  1534   000012                     ?_I2C_Master_Read:
  1535                           	callstack 0
  1536   000012                     LCD_Command@cmd:
  1537                           	callstack 0
  1538   000012                     LCD_Char@dat:
  1539                           	callstack 0
  1540   000012                     BCD2DEC@val:
  1541                           	callstack 0
  1542   000012                     DHT11_Read@i:
  1543                           	callstack 0
  1544   000012                     read_prec_or_width@ap:
  1545                           	callstack 0
  1546   000012                     I2C_Master_Write@d:
  1547                           	callstack 0
  1548   000012                     I2C_Master_Read@a:
  1549                           	callstack 0
  1550   000012                     
  1551                           ; 1 bytes @ 0x11
  1552   000012                     	ds	1
  1553   000013                     fputc@fp:
  1554                           	callstack 0
  1555   000013                     LCD_String@msg:
  1556                           	callstack 0
  1557   000013                     ___lwdiv@divisor:
  1558                           	callstack 0
  1559   000013                     ___lwmod@divisor:
  1560                           	callstack 0
  1561   000013                     ??_DHT11_GetTemperature:
  1562   000013                     ??_LCD_Clear:
  1563   000013                     ??_LCD_Init:
  1564   000013                     ??_read_prec_or_width:
  1565                           
  1566                           ; 1 bytes @ 0x12
  1567   000013                     	ds	1
  1568   000014                     I2C_Master_Read@temp:
  1569                           	callstack 0
  1570   000014                     ??_fputc:
  1571   000014                     
  1572                           ; 1 bytes @ 0x13
  1573   000014                     	ds	1
  1574   000015                     LCD_String_xy@pos:
  1575                           	callstack 0
  1576   000015                     ___lwdiv@counter:
  1577                           	callstack 0
  1578   000015                     ___lwmod@counter:
  1579                           	callstack 0
  1580   000015                     read_prec_or_width@c:
  1581                           	callstack 0
  1582   000015                     ??___fltol:
  1583   000015                     ??___xxtofl:
  1584                           
  1585                           ; 1 bytes @ 0x14
  1586   000015                     	ds	1
  1587   000016                     RTC_GetDateTime@hour:
  1588                           	callstack 0
  1589   000016                     LCD_String_xy@msg:
  1590                           	callstack 0
  1591   000016                     ___lwdiv@quotient:
  1592                           	callstack 0
  1593   000016                     read_prec_or_width@n:
  1594                           	callstack 0
  1595   000016                     ??_RTC_Init:
  1596                           
  1597                           ; 1 bytes @ 0x15
  1598   000016                     	ds	1
  1599   000017                     RTC_Init@sec:
  1600                           	callstack 0
  1601   000017                     RTC_GetDateTime@min:
  1602                           	callstack 0
  1603   000017                     DHT11_GetTemperature@data:
  1604                           	callstack 0
  1605                           
  1606                           ; 5 bytes @ 0x16
  1607   000017                     	ds	1
  1608   000018                     LCD_String_xy@row:
  1609                           	callstack 0
  1610   000018                     RTC_GetDateTime@sec:
  1611                           	callstack 0
  1612   000018                     
  1613                           ; 1 bytes @ 0x17
  1614   000018                     	ds	1
  1615   000019                     LCD_String_xy@location:
  1616                           	callstack 0
  1617   000019                     RTC_GetDateTime@day:
  1618                           	callstack 0
  1619   000019                     ___fltol@sign1:
  1620                           	callstack 0
  1621   000019                     ___xxtofl@sign:
  1622                           	callstack 0
  1623   000019                     fputs@s:
  1624                           	callstack 0
  1625                           
  1626                           ; 1 bytes @ 0x18
  1627   000019                     	ds	1
  1628   00001A                     RTC_GetDateTime@month:
  1629                           	callstack 0
  1630   00001A                     ___fltol@exp1:
  1631                           	callstack 0
  1632   00001A                     ___xxtofl@exp:
  1633                           	callstack 0
  1634   00001A                     fputs@fp:
  1635                           	callstack 0
  1636                           
  1637                           ; 1 bytes @ 0x19
  1638   00001A                     	ds	1
  1639   00001B                     RTC_GetDateTime@year:
  1640                           	callstack 0
  1641   00001B                     fputs@c:
  1642                           	callstack 0
  1643   00001B                     ___xxtofl@arg:
  1644                           	callstack 0
  1645   00001B                     
  1646                           ; 1 bytes @ 0x1A
  1647   00001B                     	ds	1
  1648   00001C                     DHT11_GetTemperature@timeout:
  1649                           	callstack 0
  1650   00001C                     fputs@i:
  1651                           	callstack 0
  1652   00001C                     
  1653                           ; 1 bytes @ 0x1B
  1654   00001C                     	ds	2
  1655   00001E                     DHT11_GetTemperature@i:
  1656                           	callstack 0
  1657   00001E                     pad@fp:
  1658                           	callstack 0
  1659                           
  1660                           ; 1 bytes @ 0x1D
  1661   00001E                     	ds	1
  1662   00001F                     ?___fldiv:
  1663                           	callstack 0
  1664   00001F                     pad@buf:
  1665                           	callstack 0
  1666   00001F                     ___fldiv@b:
  1667                           	callstack 0
  1668                           
  1669                           ; 4 bytes @ 0x1E
  1670   00001F                     	ds	1
  1671   000020                     pad@p:
  1672                           	callstack 0
  1673                           
  1674                           ; 2 bytes @ 0x1F
  1675   000020                     	ds	2
  1676   000022                     ??_pad:
  1677                           
  1678                           ; 1 bytes @ 0x21
  1679   000022                     	ds	1
  1680   000023                     pad@i:
  1681                           	callstack 0
  1682   000023                     ___fldiv@a:
  1683                           	callstack 0
  1684                           
  1685                           ; 4 bytes @ 0x22
  1686   000023                     	ds	2
  1687   000025                     utoa@fp:
  1688                           	callstack 0
  1689                           
  1690                           ; 1 bytes @ 0x24
  1691   000025                     	ds	1
  1692   000026                     utoa@d:
  1693                           	callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x25
  1696   000026                     	ds	1
  1697   000027                     ??___fldiv:
  1698                           
  1699                           ; 1 bytes @ 0x26
  1700   000027                     	ds	1
  1701   000028                     utoa@p:
  1702                           	callstack 0
  1703   000028                     
  1704                           ; 1 bytes @ 0x27
  1705   000028                     	ds	1
  1706   000029                     utoa@w:
  1707                           	callstack 0
  1708                           
  1709                           ; 2 bytes @ 0x28
  1710   000029                     	ds	2
  1711   00002B                     utoa@i:
  1712                           	callstack 0
  1713   00002B                     ___fldiv@rem:
  1714                           	callstack 0
  1715                           
  1716                           ; 4 bytes @ 0x2A
  1717   00002B                     	ds	2
  1718   00002D                     vfpfcnvrt@fp:
  1719                           	callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x2C
  1722   00002D                     	ds	1
  1723   00002E                     vfpfcnvrt@fmt:
  1724                           	callstack 0
  1725                           
  1726                           ; 1 bytes @ 0x2D
  1727   00002E                     	ds	1
  1728   00002F                     ___fldiv@sign:
  1729                           	callstack 0
  1730   00002F                     vfpfcnvrt@ap:
  1731                           	callstack 0
  1732                           
  1733                           ; 1 bytes @ 0x2E
  1734   00002F                     	ds	1
  1735   000030                     ___fldiv@new_exp:
  1736                           	callstack 0
  1737   000030                     vfpfcnvrt@convarg:
  1738                           	callstack 0
  1739   000030                     
  1740                           ; 1 bytes @ 0x2F
  1741   000030                     	ds	2
  1742   000032                     ___fldiv@grs:
  1743                           	callstack 0
  1744                           
  1745                           ; 4 bytes @ 0x31
  1746   000032                     	ds	2
  1747   000034                     vfpfcnvrt@done:
  1748                           	callstack 0
  1749                           
  1750                           ; 1 bytes @ 0x33
  1751   000034                     	ds	1
  1752   000035                     vfpfcnvrt@cp:
  1753                           	callstack 0
  1754                           
  1755                           ; 1 bytes @ 0x34
  1756   000035                     	ds	1
  1757   000036                     ?_vfprintf:
  1758                           	callstack 0
  1759   000036                     ___fldiv@bexp:
  1760                           	callstack 0
  1761   000036                     vfprintf@fp:
  1762                           	callstack 0
  1763                           
  1764                           ; 1 bytes @ 0x35
  1765   000036                     	ds	1
  1766   000037                     ___fldiv@aexp:
  1767                           	callstack 0
  1768   000037                     vfprintf@fmt:
  1769                           	callstack 0
  1770                           
  1771                           ; 1 bytes @ 0x36
  1772   000037                     	ds	1
  1773   000038                     ?___fladd:
  1774                           	callstack 0
  1775   000038                     vfprintf@ap:
  1776                           	callstack 0
  1777   000038                     ___fladd@b:
  1778                           	callstack 0
  1779                           
  1780                           ; 4 bytes @ 0x37
  1781   000038                     	ds	1
  1782   000039                     vfprintf@cfmt:
  1783                           	callstack 0
  1784   000039                     
  1785                           ; 1 bytes @ 0x38
  1786   000039                     	ds	1
  1787   00003A                     ?_sprintf:
  1788                           	callstack 0
  1789   00003A                     sprintf@s:
  1790                           	callstack 0
  1791                           
  1792                           ; 1 bytes @ 0x39
  1793   00003A                     	ds	1
  1794   00003B                     sprintf@fmt:
  1795                           	callstack 0
  1796                           
  1797                           ; 1 bytes @ 0x3A
  1798   00003B                     	ds	1
  1799   00003C                     ___fladd@a:
  1800                           	callstack 0
  1801                           
  1802                           ; 4 bytes @ 0x3B
  1803   00003C                     	ds	4
  1804   000040                     ??___fladd:
  1805                           
  1806                           ; 1 bytes @ 0x3F
  1807   000040                     	ds	2
  1808   000042                     
  1809                           ; 1 bytes @ 0x41
  1810   000042                     	ds	2
  1811   000044                     ___fladd@signs:
  1812                           	callstack 0
  1813                           
  1814                           ; 1 bytes @ 0x43
  1815   000044                     	ds	1
  1816   000045                     ___fladd@aexp:
  1817                           	callstack 0
  1818                           
  1819                           ; 1 bytes @ 0x44
  1820   000045                     	ds	1
  1821   000046                     ___fladd@bexp:
  1822                           	callstack 0
  1823                           
  1824                           ; 1 bytes @ 0x45
  1825   000046                     	ds	1
  1826   000047                     ___fladd@grs:
  1827                           	callstack 0
  1828                           
  1829                           ; 1 bytes @ 0x46
  1830   000047                     	ds	1
  1831   000048                     
  1832                           ; 1 bytes @ 0x47
  1833 ;;
  1834 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1835 ;;
  1836 ;; *************** function _main *****************
  1837 ;; Defined at:
  1838 ;;		line 82 in file "conjunto.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1852 ;;      Params:         0       0       0       0       0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1854 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1855 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1856 ;;Total ram usage:        2 bytes
  1857 ;; Hardware stack levels required when called: 13
  1858 ;; This function calls:
  1859 ;;		_DHT11_Read
  1860 ;;		_LCD_Clear
  1861 ;;		_LCD_Init
  1862 ;;		_LCD_String_xy
  1863 ;;		_RTC_Init
  1864 ;;		_USART_Init
  1865 ;;		_mostrar_rtc
  1866 ;;		_mostrar_temperatura
  1867 ;; This function is called by:
  1868 ;;		Startup code after reset
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text0
  1873   0016C8                     __ptext0:
  1874                           	callstack 0
  1875   0016C8                     _main:
  1876                           	callstack 18
  1877   0016C8                     
  1878                           ;conjunto.c: 84:     LCD_Init();
  1879   0016C8  ECB7  F010         	call	_LCD_Init	;wreg free
  1880                           
  1881                           ;conjunto.c: 85:     DHT11_Read();
  1882   0016CC  ECE0  F00F         	call	_DHT11_Read	;wreg free
  1883                           
  1884                           ;conjunto.c: 86:     RTC_Init();
  1885   0016D0  ECEE  F00D         	call	_RTC_Init	;wreg free
  1886                           
  1887                           ;conjunto.c: 88:     USART_Init(9600);
  1888   0016D4  0E80               	movlw	128
  1889   0016D6  0100               	movlb	0	; () banked
  1890   0016D8  6F60               	movwf	USART_Init@baud_rate& (0+255),b
  1891   0016DA  0E25               	movlw	37
  1892   0016DC  6F61               	movwf	(USART_Init@baud_rate+1)& (0+255),b
  1893   0016DE  0E00               	movlw	0
  1894   0016E0  6F62               	movwf	(USART_Init@baud_rate+2)& (0+255),b
  1895   0016E2  0E00               	movlw	0
  1896   0016E4  6F63               	movwf	(USART_Init@baud_rate+3)& (0+255),b
  1897   0016E6  EC5F  F00D         	call	_USART_Init	;wreg free
  1898   0016EA                     
  1899                           ;conjunto.c: 91:     TRISBbits.TRISB2 = 1;
  1900   0016EA  8493               	bsf	147,2,c	;volatile
  1901   0016EC                     
  1902                           ;conjunto.c: 92:     INTCON2bits.INTEDG2 = 1;
  1903   0016EC  88F1               	bsf	241,4,c	;volatile
  1904   0016EE                     
  1905                           ;conjunto.c: 93:     INTCON3bits.INT2IF = 0;
  1906   0016EE  92F0               	bcf	240,1,c	;volatile
  1907   0016F0                     
  1908                           ;conjunto.c: 94:     INTCON3bits.INT2IE = 1;
  1909   0016F0  88F0               	bsf	240,4,c	;volatile
  1910   0016F2                     
  1911                           ;conjunto.c: 95:     INTCONbits.PEIE = 1;
  1912   0016F2  8CF2               	bsf	242,6,c	;volatile
  1913   0016F4                     
  1914                           ;conjunto.c: 96:     INTCONbits.GIE = 1;
  1915   0016F4  8EF2               	bsf	242,7,c	;volatile
  1916   0016F6                     
  1917                           ;conjunto.c: 97:     PIE1bits.RCIE = 1;
  1918   0016F6  8A9D               	bsf	157,5,c	;volatile
  1919   0016F8                     
  1920                           ;conjunto.c: 98:     INTCONbits.INT0IE = 1;
  1921   0016F8  88F2               	bsf	242,4,c	;volatile
  1922   0016FA                     
  1923                           ;conjunto.c: 99:     INTCONbits.INT0IF = 0;
  1924   0016FA  92F2               	bcf	242,1,c	;volatile
  1925   0016FC                     
  1926                           ;conjunto.c: 100:     INTCON2bits.INTEDG0 = 0;
  1927   0016FC  9CF1               	bcf	241,6,c	;volatile
  1928   0016FE                     
  1929                           ;conjunto.c: 101:     LCD_String_xy(0,0,"MICROCONTROL");
  1930   0016FE  0E00               	movlw	0
  1931   001700  6E15               	movwf	LCD_String_xy@pos^0,c
  1932   001702  0E4C               	movlw	low STR_7
  1933   001704  6E16               	movwf	LCD_String_xy@msg^0,c
  1934   001706  5016               	movf	LCD_String_xy@msg^0,w,c
  1935   001708  A4D8               	btfss	status,2,c
  1936   00170A  0E08               	movlw	high __smallconst
  1937   00170C  6E17               	movwf	(LCD_String_xy@msg+1)^0,c
  1938   00170E  0E00               	movlw	0
  1939   001710  EC46  F010         	call	_LCD_String_xy
  1940   001714                     
  1941                           ;conjunto.c: 102:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1942   001714  0E15               	movlw	21
  1943   001716  0100               	movlb	0	; () banked
  1944   001718  6F95               	movwf	(??_main+1)& (0+255),b
  1945   00171A  0E4B               	movlw	75
  1946   00171C  6F94               	movwf	??_main& (0+255),b
  1947   00171E  0EBE               	movlw	190
  1948   001720                     u3157:
  1949   001720  2EE8               	decfsz	wreg,f,c
  1950   001722  D7FE               	bra	u3157
  1951   001724  2F94               	decfsz	??_main& (0+255),f,b
  1952   001726  D7FC               	bra	u3157
  1953   001728  2F95               	decfsz	(??_main+1)& (0+255),f,b
  1954   00172A  D7FA               	bra	u3157
  1955   00172C  0000               	nop	
  1956   00172E                     
  1957                           ;conjunto.c: 103:     LCD_Clear();
  1958   00172E  EC0E  F011         	call	_LCD_Clear	;wreg free
  1959   001732                     
  1960                           ;conjunto.c: 104:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1961   001732  0E0B               	movlw	11
  1962   001734  0100               	movlb	0	; () banked
  1963   001736  6F95               	movwf	(??_main+1)& (0+255),b
  1964   001738  0E26               	movlw	38
  1965   00173A  6F94               	movwf	??_main& (0+255),b
  1966   00173C  0E5D               	movlw	93
  1967   00173E                     u3167:
  1968   00173E  2EE8               	decfsz	wreg,f,c
  1969   001740  D7FE               	bra	u3167
  1970   001742  2F94               	decfsz	??_main& (0+255),f,b
  1971   001744  D7FC               	bra	u3167
  1972   001746  2F95               	decfsz	(??_main+1)& (0+255),f,b
  1973   001748  D7FA               	bra	u3167
  1974   00174A  D000               	nop2	
  1975   00174C                     l3425:
  1976                           
  1977                           ;conjunto.c: 107:         if (sistema_activo) {
  1978   00174C  504E               	movf	_sistema_activo^0,w,c
  1979   00174E  B4D8               	btfsc	status,2,c
  1980   001750  EFAC  F00B         	goto	u3141
  1981   001754  EFAE  F00B         	goto	u3140
  1982   001758                     u3141:
  1983   001758  EFCE  F00B         	goto	l3433
  1984   00175C                     u3140:
  1985   00175C                     
  1986                           ;conjunto.c: 108:             mostrar_temperatura();
  1987   00175C  ECD0  F010         	call	_mostrar_temperatura	;wreg free
  1988   001760                     
  1989                           ;conjunto.c: 109:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1990   001760  0E0B               	movlw	11
  1991   001762  0100               	movlb	0	; () banked
  1992   001764  6F95               	movwf	(??_main+1)& (0+255),b
  1993   001766  0E26               	movlw	38
  1994   001768  6F94               	movwf	??_main& (0+255),b
  1995   00176A  0E5D               	movlw	93
  1996   00176C                     u3177:
  1997   00176C  2EE8               	decfsz	wreg,f,c
  1998   00176E  D7FE               	bra	u3177
  1999   001770  2F94               	decfsz	??_main& (0+255),f,b
  2000   001772  D7FC               	bra	u3177
  2001   001774  2F95               	decfsz	(??_main+1)& (0+255),f,b
  2002   001776  D7FA               	bra	u3177
  2003   001778  D000               	nop2	
  2004   00177A                     
  2005                           ;conjunto.c: 110:             mostrar_rtc();
  2006   00177A  EC2F  F00E         	call	_mostrar_rtc	;wreg free
  2007                           
  2008                           ;conjunto.c: 111:             _delay((unsigned long)((3000)*(8000000/4000.0)));
  2009   00177E  0E1F               	movlw	31
  2010   001780  0100               	movlb	0	; () banked
  2011   001782  6F95               	movwf	(??_main+1)& (0+255),b
  2012   001784  0E71               	movlw	113
  2013   001786  6F94               	movwf	??_main& (0+255),b
  2014   001788  0E1E               	movlw	30
  2015   00178A                     u3187:
  2016   00178A  2EE8               	decfsz	wreg,f,c
  2017   00178C  D7FE               	bra	u3187
  2018   00178E  2F94               	decfsz	??_main& (0+255),f,b
  2019   001790  D7FC               	bra	u3187
  2020   001792  2F95               	decfsz	(??_main+1)& (0+255),f,b
  2021   001794  D7FA               	bra	u3187
  2022   001796  0000               	nop	
  2023                           
  2024                           ;conjunto.c: 112:         } else {
  2025   001798  EFA6  F00B         	goto	l3425
  2026   00179C                     l3433:
  2027                           
  2028                           ;conjunto.c: 113:             LCD_String_xy(0,0,"apagado");
  2029   00179C  0E00               	movlw	0
  2030   00179E  6E15               	movwf	LCD_String_xy@pos^0,c
  2031   0017A0  0E64               	movlw	low STR_8
  2032   0017A2  6E16               	movwf	LCD_String_xy@msg^0,c
  2033   0017A4  5016               	movf	LCD_String_xy@msg^0,w,c
  2034   0017A6  A4D8               	btfss	status,2,c
  2035   0017A8  0E08               	movlw	high __smallconst
  2036   0017AA  6E17               	movwf	(LCD_String_xy@msg+1)^0,c
  2037   0017AC  0E00               	movlw	0
  2038   0017AE  EC46  F010         	call	_LCD_String_xy
  2039   0017B2  EFA6  F00B         	goto	l3425
  2040   0017B6  EF07  F000         	goto	start
  2041   0017BA                     __end_of_main:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _mostrar_temperatura *****************
  2045 ;; Defined at:
  2046 ;;		line 19 in file "conjunto.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  buffer         16   12[BANK0 ] unsigned char [16]
  2051 ;;  temp            1   28[BANK0 ] unsigned char 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2061 ;;      Params:         0       0       0       0       0       0       0       0       0
  2062 ;;      Locals:         0      17       0       0       0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2064 ;;      Totals:         0      17       0       0       0       0       0       0       0
  2065 ;;Total ram usage:       17 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; Hardware stack levels required when called: 12
  2068 ;; This function calls:
  2069 ;;		_DHT11_GetTemperature
  2070 ;;		_LCD_Clear
  2071 ;;		_LCD_String_xy
  2072 ;;		_sprintf
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text1
  2079   0021A0                     __ptext1:
  2080                           	callstack 0
  2081   0021A0                     _mostrar_temperatura:
  2082                           	callstack 18
  2083   0021A0                     
  2084                           ;conjunto.c: 20:     uint8_t temp = DHT11_GetTemperature();
  2085   0021A0  ECE4  F00A         	call	_DHT11_GetTemperature	;wreg free
  2086   0021A4  0100               	movlb	0	; () banked
  2087   0021A6  6F7C               	movwf	mostrar_temperatura@temp& (0+255),b
  2088   0021A8                     
  2089                           ; BSR set to: 0
  2090                           ;conjunto.c: 21:     char buffer[16];;conjunto.c: 22:     LCD_Clear();
  2091   0021A8  EC0E  F011         	call	_LCD_Clear	;wreg free
  2092   0021AC                     
  2093                           ;conjunto.c: 23:     sprintf(buffer, "Temp: %u C", temp);
  2094   0021AC  0E6C               	movlw	low mostrar_temperatura@buffer
  2095   0021AE  6E3A               	movwf	sprintf@s^0,c
  2096   0021B0  0E59               	movlw	low STR_1
  2097   0021B2  6E3B               	movwf	sprintf@fmt^0,c
  2098   0021B4  C07C  F03C         	movff	mostrar_temperatura@temp,?_sprintf+2
  2099   0021B8  6A3D               	clrf	(?_sprintf+3)^0,c
  2100   0021BA  EC80  F010         	call	_sprintf	;wreg free
  2101   0021BE                     
  2102                           ;conjunto.c: 24:     LCD_String_xy(0, 0, buffer);
  2103   0021BE  0E00               	movlw	0
  2104   0021C0  6E15               	movwf	LCD_String_xy@pos^0,c
  2105   0021C2  0E6C               	movlw	low mostrar_temperatura@buffer
  2106   0021C4  6E16               	movwf	LCD_String_xy@msg^0,c
  2107   0021C6  6A17               	clrf	(LCD_String_xy@msg+1)^0,c
  2108   0021C8  0E00               	movlw	0
  2109   0021CA  EC46  F010         	call	_LCD_String_xy
  2110   0021CE  0012               	return		;funcret
  2111   0021D0                     __end_of_mostrar_temperatura:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _DHT11_GetTemperature *****************
  2115 ;; Defined at:
  2116 ;;		line 16 in file "DTH11.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  i               1   29[COMRAM] unsigned char 
  2121 ;;  data            5   22[COMRAM] unsigned char [5]
  2122 ;;  timeout         2   27[COMRAM] unsigned short 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      unsigned char 
  2125 ;; Registers used:
  2126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2132 ;;      Params:         0       0       0       0       0       0       0       0       0
  2133 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2134 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2135 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2136 ;;Total ram usage:       12 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 5
  2139 ;; This function calls:
  2140 ;;		_DHT11_Read
  2141 ;; This function is called by:
  2142 ;;		_mostrar_temperatura
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text2
  2147   0015C8                     __ptext2:
  2148                           	callstack 0
  2149   0015C8                     _DHT11_GetTemperature:
  2150                           	callstack 24
  2151   0015C8                     
  2152                           ;DTH11.c: 17:     TRISAbits.TRISA0 = 0;
  2153   0015C8  9092               	bcf	146,0,c	;volatile
  2154                           
  2155                           ;DTH11.c: 18:     PORTAbits.RA0 = 0;
  2156   0015CA  9080               	bcf	128,0,c	;volatile
  2157   0015CC                     
  2158                           ;DTH11.c: 19:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2159   0015CC  0E34               	movlw	52
  2160   0015CE  6E13               	movwf	??_DHT11_GetTemperature^0,c
  2161   0015D0  0EF2               	movlw	242
  2162   0015D2                     u3197:
  2163   0015D2  2EE8               	decfsz	wreg,f,c
  2164   0015D4  D7FE               	bra	u3197
  2165   0015D6  2E13               	decfsz	??_DHT11_GetTemperature^0,f,c
  2166   0015D8  D7FC               	bra	u3197
  2167   0015DA                     
  2168                           ;DTH11.c: 20:     PORTAbits.RA0 = 1;
  2169   0015DA  8080               	bsf	128,0,c	;volatile
  2170                           
  2171                           ;DTH11.c: 21:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2172   0015DC  0E1A               	movlw	26
  2173   0015DE                     u3207:
  2174   0015DE  2EE8               	decfsz	wreg,f,c
  2175   0015E0  D7FE               	bra	u3207
  2176   0015E2  D000               	nop2	
  2177   0015E4                     
  2178                           ;DTH11.c: 22:     TRISAbits.TRISA0 = 1;
  2179   0015E4  8092               	bsf	146,0,c	;volatile
  2180   0015E6                     
  2181                           ;DTH11.c: 24:     if (PORTAbits.RA0 == 0) {
  2182   0015E6  B080               	btfsc	128,0,c	;volatile
  2183   0015E8  EFF8  F00A         	goto	u1881
  2184   0015EC  EFFA  F00A         	goto	u1880
  2185   0015F0                     u1881:
  2186   0015F0  EF62  F00B         	goto	l2515
  2187   0015F4                     u1880:
  2188   0015F4                     
  2189                           ;DTH11.c: 25:         uint16_t timeout = 1000;
  2190   0015F4  0E03               	movlw	3
  2191   0015F6  6E1D               	movwf	(DHT11_GetTemperature@timeout+1)^0,c
  2192   0015F8  0EE8               	movlw	232
  2193   0015FA  6E1C               	movwf	DHT11_GetTemperature@timeout^0,c
  2194                           
  2195                           ;DTH11.c: 26:         while (!PORTAbits.RA0 && timeout--) _delay((unsigned long)((1)*(80
      +                          00000/4000000.0)));
  2196   0015FC  EF01  F00B         	goto	l289
  2197   001600                     l290:
  2198   001600  D000               	nop2		;2 cycle nop
  2199   001602                     l289:
  2200   001602  B080               	btfsc	128,0,c	;volatile
  2201   001604  EF06  F00B         	goto	u1891
  2202   001608  EF08  F00B         	goto	u1890
  2203   00160C                     u1891:
  2204   00160C  EF15  F00B         	goto	l2495
  2205   001610                     u1890:
  2206   001610  061C               	decf	DHT11_GetTemperature@timeout^0,f,c
  2207   001612  A0D8               	btfss	status,0,c
  2208   001614  061D               	decf	(DHT11_GetTemperature@timeout+1)^0,f,c
  2209   001616  281C               	incf	DHT11_GetTemperature@timeout^0,w,c
  2210   001618  E106               	bnz	u1901
  2211   00161A  281D               	incf	(DHT11_GetTemperature@timeout+1)^0,w,c
  2212   00161C  A4D8               	btfss	status,2,c
  2213   00161E  EF13  F00B         	goto	u1901
  2214   001622  EF15  F00B         	goto	u1900
  2215   001626                     u1901:
  2216   001626  EF00  F00B         	goto	l290
  2217   00162A                     u1900:
  2218   00162A                     l2495:
  2219                           
  2220                           ;DTH11.c: 27:         timeout = 1000;
  2221   00162A  0E03               	movlw	3
  2222   00162C  6E1D               	movwf	(DHT11_GetTemperature@timeout+1)^0,c
  2223   00162E  0EE8               	movlw	232
  2224   001630  6E1C               	movwf	DHT11_GetTemperature@timeout^0,c
  2225                           
  2226                           ;DTH11.c: 28:         while (PORTAbits.RA0 && timeout--) _delay((unsigned long)((1)*(800
      +                          0000/4000000.0)));
  2227   001632  EF1C  F00B         	goto	l294
  2228   001636                     l295:
  2229   001636  D000               	nop2		;2 cycle nop
  2230   001638                     l294:
  2231   001638  A080               	btfss	128,0,c	;volatile
  2232   00163A  EF21  F00B         	goto	u1911
  2233   00163E  EF23  F00B         	goto	u1910
  2234   001642                     u1911:
  2235   001642  EF30  F00B         	goto	l298
  2236   001646                     u1910:
  2237   001646  061C               	decf	DHT11_GetTemperature@timeout^0,f,c
  2238   001648  A0D8               	btfss	status,0,c
  2239   00164A  061D               	decf	(DHT11_GetTemperature@timeout+1)^0,f,c
  2240   00164C  281C               	incf	DHT11_GetTemperature@timeout^0,w,c
  2241   00164E  E106               	bnz	u1921
  2242   001650  281D               	incf	(DHT11_GetTemperature@timeout+1)^0,w,c
  2243   001652  A4D8               	btfss	status,2,c
  2244   001654  EF2E  F00B         	goto	u1921
  2245   001658  EF30  F00B         	goto	u1920
  2246   00165C                     u1921:
  2247   00165C  EF1B  F00B         	goto	l295
  2248   001660                     u1920:
  2249   001660                     l298:
  2250                           
  2251                           ;DTH11.c: 30:         uint8_t data[5];;DTH11.c: 31:         for (uint8_t i = 0; i < 5; i
      +                          ++) {
  2252   001660  6A1E               	clrf	DHT11_GetTemperature@i^0,c
  2253   001662                     l2503:
  2254                           
  2255                           ;DTH11.c: 32:             data[i] = DHT11_Read();
  2256   001662  501E               	movf	DHT11_GetTemperature@i^0,w,c
  2257   001664  0F17               	addlw	low DHT11_GetTemperature@data
  2258   001666  6ED9               	movwf	fsr2l,c
  2259   001668  6ADA               	clrf	fsr2h,c
  2260   00166A  ECE0  F00F         	call	_DHT11_Read	;wreg free
  2261   00166E  6EDF               	movwf	indf2,c
  2262   001670                     
  2263                           ;DTH11.c: 33:         }
  2264   001670  2A1E               	incf	DHT11_GetTemperature@i^0,f,c
  2265   001672  0E04               	movlw	4
  2266   001674  641E               	cpfsgt	DHT11_GetTemperature@i^0,c
  2267   001676  EF3F  F00B         	goto	u1931
  2268   00167A  EF41  F00B         	goto	u1930
  2269   00167E                     u1931:
  2270   00167E  EF31  F00B         	goto	l2503
  2271   001682                     u1930:
  2272   001682                     
  2273                           ;DTH11.c: 35:         if (data[0] + data[1] + data[2] + data[3] == data[4]) {
  2274   001682  501B               	movf	(DHT11_GetTemperature@data+4)^0,w,c
  2275   001684  6E13               	movwf	??_DHT11_GetTemperature^0,c
  2276   001686  6A14               	clrf	(??_DHT11_GetTemperature+1)^0,c
  2277   001688  5018               	movf	(DHT11_GetTemperature@data+1)^0,w,c
  2278   00168A  C017  F015         	movff	DHT11_GetTemperature@data,??_DHT11_GetTemperature+2
  2279   00168E  6A16               	clrf	(??_DHT11_GetTemperature+3)^0,c
  2280   001690  2615               	addwf	(??_DHT11_GetTemperature+2)^0,f,c
  2281   001692  0E00               	movlw	0
  2282   001694  2216               	addwfc	(??_DHT11_GetTemperature+3)^0,f,c
  2283   001696  5019               	movf	(DHT11_GetTemperature@data+2)^0,w,c
  2284   001698  2615               	addwf	(??_DHT11_GetTemperature+2)^0,f,c
  2285   00169A  0E00               	movlw	0
  2286   00169C  2216               	addwfc	(??_DHT11_GetTemperature+3)^0,f,c
  2287   00169E  501A               	movf	(DHT11_GetTemperature@data+3)^0,w,c
  2288   0016A0  2615               	addwf	(??_DHT11_GetTemperature+2)^0,f,c
  2289   0016A2  0E00               	movlw	0
  2290   0016A4  2216               	addwfc	(??_DHT11_GetTemperature+3)^0,f,c
  2291   0016A6  5013               	movf	??_DHT11_GetTemperature^0,w,c
  2292   0016A8  1815               	xorwf	(??_DHT11_GetTemperature+2)^0,w,c
  2293   0016AA  E107               	bnz	u1941
  2294   0016AC  5014               	movf	(??_DHT11_GetTemperature+1)^0,w,c
  2295   0016AE  1816               	xorwf	(??_DHT11_GetTemperature+3)^0,w,c
  2296   0016B0  A4D8               	btfss	status,2,c
  2297   0016B2  EF5D  F00B         	goto	u1941
  2298   0016B6  EF5F  F00B         	goto	u1940
  2299   0016BA                     u1941:
  2300   0016BA  EF62  F00B         	goto	l2515
  2301   0016BE                     u1940:
  2302   0016BE                     
  2303                           ;DTH11.c: 36:             return data[2];
  2304   0016BE  5019               	movf	(DHT11_GetTemperature@data+2)^0,w,c
  2305   0016C0  EF63  F00B         	goto	l302
  2306   0016C4                     l2515:
  2307                           
  2308                           ;DTH11.c: 39:     return 255;
  2309   0016C4  0EFF               	movlw	255
  2310   0016C6                     l302:
  2311   0016C6  0012               	return		;funcret
  2312   0016C8                     __end_of_DHT11_GetTemperature:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function _DHT11_Read *****************
  2316 ;; Defined at:
  2317 ;;		line 4 in file "DTH11.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  i               1   17[COMRAM] unsigned char 
  2322 ;;  data            1   16[COMRAM] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      unsigned char 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2332 ;;      Params:         0       0       0       0       0       0       0       0       0
  2333 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2335 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2336 ;;Total ram usage:        2 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 4
  2339 ;; This function calls:
  2340 ;;		Nothing
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;;		_DHT11_GetTemperature
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text3
  2348   001FC0                     __ptext3:
  2349                           	callstack 0
  2350   001FC0                     _DHT11_Read:
  2351                           	callstack 24
  2352   001FC0                     
  2353                           ;DTH11.c: 5:     uint8_t data = 0;
  2354   001FC0  6A11               	clrf	DHT11_Read@data^0,c
  2355                           
  2356                           ;DTH11.c: 6:     for (uint8_t i = 0; i < 8; i++) {
  2357   001FC2  6A12               	clrf	DHT11_Read@i^0,c
  2358   001FC4                     l278:
  2359   001FC4  A080               	btfss	128,0,c	;volatile
  2360   001FC6  EFE7  F00F         	goto	u1781
  2361   001FCA  EFE9  F00F         	goto	u1780
  2362   001FCE                     u1781:
  2363   001FCE  EFE2  F00F         	goto	l278
  2364   001FD2                     u1780:
  2365   001FD2                     
  2366                           ;DTH11.c: 8:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2367   001FD2  0E21               	movlw	33
  2368   001FD4                     u3217:
  2369   001FD4  2EE8               	decfsz	wreg,f,c
  2370   001FD6  D7FE               	bra	u3217
  2371   001FD8  0000               	nop	
  2372   001FDA                     
  2373                           ;DTH11.c: 9:         data <<= 1;
  2374   001FDA  90D8               	bcf	status,0,c
  2375   001FDC  3611               	rlcf	DHT11_Read@data^0,f,c
  2376   001FDE                     
  2377                           ;DTH11.c: 10:         if (PORTAbits.RA0) data |= 1;
  2378   001FDE  A080               	btfss	128,0,c	;volatile
  2379   001FE0  EFF4  F00F         	goto	u1791
  2380   001FE4  EFF6  F00F         	goto	u1790
  2381   001FE8                     u1791:
  2382   001FE8  EFF7  F00F         	goto	l282
  2383   001FEC                     u1790:
  2384   001FEC  8011               	bsf	DHT11_Read@data^0,0,c
  2385   001FEE                     l282:
  2386   001FEE  B080               	btfsc	128,0,c	;volatile
  2387   001FF0  EFFC  F00F         	goto	u1801
  2388   001FF4  EFFE  F00F         	goto	u1800
  2389   001FF8                     u1801:
  2390   001FF8  EFF7  F00F         	goto	l282
  2391   001FFC                     u1800:
  2392   001FFC                     
  2393                           ;DTH11.c: 12:     }
  2394   001FFC  2A12               	incf	DHT11_Read@i^0,f,c
  2395   001FFE  0E07               	movlw	7
  2396   002000  6412               	cpfsgt	DHT11_Read@i^0,c
  2397   002002  EF05  F010         	goto	u1811
  2398   002006  EF07  F010         	goto	u1810
  2399   00200A                     u1811:
  2400   00200A  EFE2  F00F         	goto	l278
  2401   00200E                     u1810:
  2402   00200E                     
  2403                           ;DTH11.c: 13:     return data;
  2404   00200E  5011               	movf	DHT11_Read@data^0,w,c
  2405   002010  0012               	return		;funcret
  2406   002012                     __end_of_DHT11_Read:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function _mostrar_rtc *****************
  2410 ;; Defined at:
  2411 ;;		line 27 in file "conjunto.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;		None
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  hora           17   29[BANK0 ] unsigned char [17]
  2416 ;;  fecha          17   12[BANK0 ] unsigned char [17]
  2417 ;;  y               1   51[BANK0 ] unsigned char 
  2418 ;;  mo              1   50[BANK0 ] unsigned char 
  2419 ;;  d               1   49[BANK0 ] unsigned char 
  2420 ;;  s               1   48[BANK0 ] unsigned char 
  2421 ;;  m               1   47[BANK0 ] unsigned char 
  2422 ;;  h               1   46[BANK0 ] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2432 ;;      Params:         0       0       0       0       0       0       0       0       0
  2433 ;;      Locals:         0      40       0       0       0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2435 ;;      Totals:         0      40       0       0       0       0       0       0       0
  2436 ;;Total ram usage:       40 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 12
  2439 ;; This function calls:
  2440 ;;		_LCD_Clear
  2441 ;;		_LCD_String_xy
  2442 ;;		_RTC_GetDateTime
  2443 ;;		_sprintf
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           	psect	text4
  2450   001C5E                     __ptext4:
  2451                           	callstack 0
  2452   001C5E                     _mostrar_rtc:
  2453                           	callstack 18
  2454   001C5E                     
  2455                           ;conjunto.c: 28:     unsigned char h, m, s, d, mo, y;;conjunto.c: 29:     char fecha[17]
      +                          , hora[17];;conjunto.c: 30:     RTC_GetDateTime(&h, &m, &s, &d, &mo, &y);
  2456   001C5E  0E8E               	movlw	low mostrar_rtc@h
  2457   001C60  6E16               	movwf	RTC_GetDateTime@hour^0,c
  2458   001C62  0E8F               	movlw	low mostrar_rtc@m
  2459   001C64  6E17               	movwf	RTC_GetDateTime@min^0,c
  2460   001C66  0E90               	movlw	low mostrar_rtc@s
  2461   001C68  6E18               	movwf	RTC_GetDateTime@sec^0,c
  2462   001C6A  0E91               	movlw	low mostrar_rtc@d
  2463   001C6C  6E19               	movwf	RTC_GetDateTime@day^0,c
  2464   001C6E  0E92               	movlw	low mostrar_rtc@mo
  2465   001C70  6E1A               	movwf	RTC_GetDateTime@month^0,c
  2466   001C72  0E93               	movlw	low mostrar_rtc@y
  2467   001C74  6E1B               	movwf	RTC_GetDateTime@year^0,c
  2468   001C76  EC4B  F00C         	call	_RTC_GetDateTime	;wreg free
  2469   001C7A                     
  2470                           ;conjunto.c: 32:     sprintf(hora, "Hora: %02u:%02u:%02u", h, m, s);
  2471   001C7A  0E7D               	movlw	low mostrar_rtc@hora
  2472   001C7C  6E3A               	movwf	sprintf@s^0,c
  2473   001C7E  0E17               	movlw	low STR_2
  2474   001C80  6E3B               	movwf	sprintf@fmt^0,c
  2475   001C82  C08E  F03C         	movff	mostrar_rtc@h,?_sprintf+2
  2476   001C86  6A3D               	clrf	(?_sprintf+3)^0,c
  2477   001C88  C08F  F03E         	movff	mostrar_rtc@m,?_sprintf+4
  2478   001C8C  6A3F               	clrf	(?_sprintf+5)^0,c
  2479   001C8E  C090  F040         	movff	mostrar_rtc@s,?_sprintf+6
  2480   001C92  6A41               	clrf	(?_sprintf+7)^0,c
  2481   001C94  EC80  F010         	call	_sprintf	;wreg free
  2482   001C98                     
  2483                           ;conjunto.c: 33:     sprintf(fecha, "Fecha: %02u/%02u/%02u", d, mo, y);
  2484   001C98  0E6C               	movlw	low mostrar_rtc@fecha
  2485   001C9A  6E3A               	movwf	sprintf@s^0,c
  2486   001C9C  0E01               	movlw	low STR_3
  2487   001C9E  6E3B               	movwf	sprintf@fmt^0,c
  2488   001CA0  C091  F03C         	movff	mostrar_rtc@d,?_sprintf+2
  2489   001CA4  6A3D               	clrf	(?_sprintf+3)^0,c
  2490   001CA6  C092  F03E         	movff	mostrar_rtc@mo,?_sprintf+4
  2491   001CAA  6A3F               	clrf	(?_sprintf+5)^0,c
  2492   001CAC  C093  F040         	movff	mostrar_rtc@y,?_sprintf+6
  2493   001CB0  6A41               	clrf	(?_sprintf+7)^0,c
  2494   001CB2  EC80  F010         	call	_sprintf	;wreg free
  2495   001CB6                     
  2496                           ;conjunto.c: 34:     LCD_Clear();
  2497   001CB6  EC0E  F011         	call	_LCD_Clear	;wreg free
  2498   001CBA                     
  2499                           ;conjunto.c: 35:     LCD_String_xy(0, 0, hora);
  2500   001CBA  0E00               	movlw	0
  2501   001CBC  6E15               	movwf	LCD_String_xy@pos^0,c
  2502   001CBE  0E7D               	movlw	low mostrar_rtc@hora
  2503   001CC0  6E16               	movwf	LCD_String_xy@msg^0,c
  2504   001CC2  6A17               	clrf	(LCD_String_xy@msg+1)^0,c
  2505   001CC4  0E00               	movlw	0
  2506   001CC6  EC46  F010         	call	_LCD_String_xy
  2507   001CCA                     
  2508                           ;conjunto.c: 36:     LCD_String_xy(1, 0, fecha);
  2509   001CCA  0E00               	movlw	0
  2510   001CCC  6E15               	movwf	LCD_String_xy@pos^0,c
  2511   001CCE  0E6C               	movlw	low mostrar_rtc@fecha
  2512   001CD0  6E16               	movwf	LCD_String_xy@msg^0,c
  2513   001CD2  6A17               	clrf	(LCD_String_xy@msg+1)^0,c
  2514   001CD4  0E01               	movlw	1
  2515   001CD6  EC46  F010         	call	_LCD_String_xy
  2516   001CDA  0012               	return		;funcret
  2517   001CDC                     __end_of_mostrar_rtc:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _sprintf *****************
  2521 ;; Defined at:
  2522 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  s               1   57[COMRAM] PTR unsigned char 
  2525 ;;		 -> mostrar_rtc@fecha(17), mostrar_rtc@hora(17), mostrar_temperatura@buffer(16), 
  2526 ;;  fmt             1   58[COMRAM] PTR const unsigned char 
  2527 ;;		 -> STR_3(22), STR_2(21), STR_1(11), 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  f              11    1[BANK0 ] struct _IO_FILE
  2530 ;;  ret             2    0        int 
  2531 ;;  ap              1    0[BANK0 ] PTR void [1]
  2532 ;;		 -> ?_sprintf(2), 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  2   57[COMRAM] int 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2542 ;;      Params:         8       0       0       0       0       0       0       0       0
  2543 ;;      Locals:         0      12       0       0       0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2545 ;;      Totals:         8      12       0       0       0       0       0       0       0
  2546 ;;Total ram usage:       20 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 11
  2549 ;; This function calls:
  2550 ;;		_vfprintf
  2551 ;; This function is called by:
  2552 ;;		_mostrar_temperatura
  2553 ;;		_mostrar_rtc
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text5
  2558   002100                     __ptext5:
  2559                           	callstack 0
  2560   002100                     _sprintf:
  2561                           	callstack 18
  2562   002100  0E3C               	movlw	low (?_sprintf+2)
  2563   002102  0100               	movlb	0	; () banked
  2564   002104  6F60               	movwf	sprintf@ap& (0+255),b
  2565   002106  C03A  F061         	movff	sprintf@s,sprintf@f
  2566   00210A                     
  2567                           ; BSR set to: 0
  2568   00210A  0E00               	movlw	0
  2569   00210C  6F64               	movwf	(sprintf@f+3)& (0+255),b
  2570   00210E  0E00               	movlw	0
  2571   002110  6F63               	movwf	(sprintf@f+2)& (0+255),b
  2572   002112                     
  2573                           ; BSR set to: 0
  2574   002112  0E00               	movlw	0
  2575   002114  6F6B               	movwf	(sprintf@f+10)& (0+255),b
  2576   002116  0E00               	movlw	0
  2577   002118  6F6A               	movwf	(sprintf@f+9)& (0+255),b
  2578   00211A                     
  2579                           ; BSR set to: 0
  2580   00211A  0E61               	movlw	low sprintf@f
  2581   00211C  6E36               	movwf	vfprintf@fp^0,c
  2582   00211E  C03B  F037         	movff	sprintf@fmt,vfprintf@fmt
  2583   002122  0E60               	movlw	low sprintf@ap
  2584   002124  6E38               	movwf	vfprintf@ap^0,c
  2585   002126  EC09  F010         	call	_vfprintf	;wreg free
  2586   00212A  503A               	movf	sprintf@s^0,w,c
  2587   00212C  0100               	movlb	0	; () banked
  2588   00212E  2563               	addwf	(sprintf@f+2)& (0+255),w,b
  2589   002130  6ED9               	movwf	fsr2l,c
  2590   002132  6ADA               	clrf	fsr2h,c
  2591   002134  6ADF               	clrf	indf2,c
  2592   002136                     
  2593                           ; BSR set to: 0
  2594   002136  0012               	return		;funcret
  2595   002138                     __end_of_sprintf:
  2596                           	callstack 0
  2597                           
  2598 ;; *************** function _vfprintf *****************
  2599 ;; Defined at:
  2600 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  fp              1   53[COMRAM] PTR struct _IO_FILE
  2603 ;;		 -> sprintf@f(11), 
  2604 ;;  fmt             1   54[COMRAM] PTR const unsigned char 
  2605 ;;		 -> STR_3(22), STR_2(21), STR_1(11), 
  2606 ;;  ap              1   55[COMRAM] PTR PTR void 
  2607 ;;		 -> sprintf@ap(1), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  cfmt            1   56[COMRAM] PTR unsigned char 
  2610 ;;		 -> STR_3(22), STR_2(21), STR_1(11), 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  2   53[COMRAM] int 
  2613 ;; Registers used:
  2614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2620 ;;      Params:         3       0       0       0       0       0       0       0       0
  2621 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2623 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2624 ;;Total ram usage:        4 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 10
  2627 ;; This function calls:
  2628 ;;		_vfpfcnvrt
  2629 ;; This function is called by:
  2630 ;;		_sprintf
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text6
  2635   002012                     __ptext6:
  2636                           	callstack 0
  2637   002012                     _vfprintf:
  2638                           	callstack 18
  2639   002012                     
  2640                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2641   002012  C037  F039         	movff	vfprintf@fmt,vfprintf@cfmt
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2644   002016  EF15  F010         	goto	l3349
  2645   00201A                     l3347:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2648   00201A  C036  F02D         	movff	vfprintf@fp,vfpfcnvrt@fp
  2649   00201E  0E39               	movlw	low vfprintf@cfmt
  2650   002020  6E2E               	movwf	vfpfcnvrt@fmt^0,c
  2651   002022  C038  F02F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2652   002026  EC34  F009         	call	_vfpfcnvrt	;wreg free
  2653   00202A                     l3349:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2656   00202A  C039  FFF6         	movff	vfprintf@cfmt,tblptrl
  2657   00202E                     	if	1	;There is more than 1 active tblptr byte
  2658   00202E  0E08               	movlw	high __smallconst
  2659   002030  6EF7               	movwf	tblptrh,c
  2660   002032                     	endif
  2661   002032                     	if	0	;tblptru may be non-zero
  2662   002032                     	endif
  2663   002032                     	if	0	;tblptru may be non-zero
  2664   002032                     	endif
  2665   002032  0008               	tblrd		*
  2666   002034  50F5               	movf	tablat,w,c
  2667   002036  0900               	iorlw	0
  2668   002038  A4D8               	btfss	status,2,c
  2669   00203A  EF21  F010         	goto	u3131
  2670   00203E  EF23  F010         	goto	u3130
  2671   002042                     u3131:
  2672   002042  EF0D  F010         	goto	l3347
  2673   002046                     u3130:
  2674   002046                     
  2675                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2676   002046  0E00               	movlw	0
  2677   002048  6E37               	movwf	(?_vfprintf+1)^0,c
  2678   00204A  0E00               	movlw	0
  2679   00204C  6E36               	movwf	?_vfprintf^0,c
  2680   00204E  0012               	return		;funcret
  2681   002050                     __end_of_vfprintf:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _vfpfcnvrt *****************
  2685 ;; Defined at:
  2686 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  2689 ;;		 -> sprintf@f(11), 
  2690 ;;  fmt             1   45[COMRAM] PTR PTR unsigned char 
  2691 ;;		 -> vfprintf@cfmt(1), 
  2692 ;;  ap              1   46[COMRAM] PTR PTR void 
  2693 ;;		 -> sprintf@ap(1), 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  convarg         4   47[COMRAM] struct .
  2696 ;;  cp              1   52[COMRAM] PTR unsigned char 
  2697 ;;		 -> STR_3(22), STR_2(21), STR_1(11), 
  2698 ;;  done            1   51[COMRAM] _Bool 
  2699 ;;  c               1    0        unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2709 ;;      Params:         3       0       0       0       0       0       0       0       0
  2710 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2712 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2713 ;;Total ram usage:        9 bytes
  2714 ;; Hardware stack levels used: 1
  2715 ;; Hardware stack levels required when called: 9
  2716 ;; This function calls:
  2717 ;;		_fputc
  2718 ;;		_read_prec_or_width
  2719 ;;		_utoa
  2720 ;; This function is called by:
  2721 ;;		_vfprintf
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text7
  2726   001268                     __ptext7:
  2727                           	callstack 0
  2728   001268                     _vfpfcnvrt:
  2729                           	callstack 18
  2730   001268                     
  2731                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2732   001268  502E               	movf	vfpfcnvrt@fmt^0,w,c
  2733   00126A  6ED9               	movwf	fsr2l,c
  2734   00126C  6ADA               	clrf	fsr2h,c
  2735   00126E  CFDF FFF6          	movff	indf2,tblptrl
  2736   001272                     	if	1	;There is more than 1 active tblptr byte
  2737   001272  0E08               	movlw	high __smallconst
  2738   001274  6EF7               	movwf	tblptrh,c
  2739   001276                     	endif
  2740   001276                     	if	0	;tblptru may be non-zero
  2741   001276                     	endif
  2742   001276                     	if	0	;tblptru may be non-zero
  2743   001276                     	endif
  2744   001276  0008               	tblrd		*
  2745   001278  50F5               	movf	tablat,w,c
  2746   00127A  0A25               	xorlw	37
  2747   00127C  A4D8               	btfss	status,2,c
  2748   00127E  EF43  F009         	goto	u3091
  2749   001282  EF45  F009         	goto	u3090
  2750   001286                     u3091:
  2751   001286  EFCE  F009         	goto	l3339
  2752   00128A                     u3090:
  2753   00128A                     
  2754                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2755   00128A  502E               	movf	vfpfcnvrt@fmt^0,w,c
  2756   00128C  6ED9               	movwf	fsr2l,c
  2757   00128E  6ADA               	clrf	fsr2h,c
  2758   001290  2ADF               	incf	indf2,f,c
  2759   001292                     
  2760                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2761   001292  0E00               	movlw	0
  2762   001294  6E49               	movwf	(_width+1)^0,c
  2763   001296  0E00               	movlw	0
  2764   001298  6E48               	movwf	_width^0,c
  2765   00129A  C048  F04C         	movff	_width,_flags
  2766   00129E                     
  2767                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2768   00129E  684A               	setf	_prec^0,c
  2769   0012A0  684B               	setf	(_prec+1)^0,c
  2770   0012A2                     
  2771                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2772   0012A2  6A34               	clrf	vfpfcnvrt@done^0,c
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2775   0012A4  EF6E  F009         	goto	l3311
  2776   0012A8                     l3301:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2779   0012A8  824C               	bsf	_flags^0,1,c
  2780   0012AA                     
  2781                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2782   0012AA  502E               	movf	vfpfcnvrt@fmt^0,w,c
  2783   0012AC  6ED9               	movwf	fsr2l,c
  2784   0012AE  6ADA               	clrf	fsr2h,c
  2785   0012B0  2ADF               	incf	indf2,f,c
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2788   0012B2  EF6E  F009         	goto	l3311
  2789   0012B6                     l3305:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2792   0012B6  0E01               	movlw	1
  2793   0012B8  6E34               	movwf	vfpfcnvrt@done^0,c
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2796   0012BA  EF6E  F009         	goto	l3311
  2797   0012BE                     l3309:
  2798   0012BE  502E               	movf	vfpfcnvrt@fmt^0,w,c
  2799   0012C0  6ED9               	movwf	fsr2l,c
  2800   0012C2  6ADA               	clrf	fsr2h,c
  2801   0012C4  CFDF FFF6          	movff	indf2,tblptrl
  2802   0012C8                     	if	1	;There is more than 1 active tblptr byte
  2803   0012C8  0E08               	movlw	high __smallconst
  2804   0012CA  6EF7               	movwf	tblptrh,c
  2805   0012CC                     	endif
  2806   0012CC                     	if	0	;tblptru may be non-zero
  2807   0012CC                     	endif
  2808   0012CC                     	if	0	;tblptru may be non-zero
  2809   0012CC                     	endif
  2810   0012CC  0008               	tblrd		*
  2811   0012CE  50F5               	movf	tablat,w,c
  2812                           
  2813                           ; Switch size 1, requested type "simple"
  2814                           ; Number of cases is 1, Range of values is 48 to 48
  2815                           ; switch strategies available:
  2816                           ; Name         Instructions Cycles
  2817                           ; simple_byte            4     3 (average)
  2818                           ;	Chosen strategy is simple_byte
  2819   0012D0  0A30               	xorlw	48	; case 48
  2820   0012D2  B4D8               	btfsc	status,2,c
  2821   0012D4  EF54  F009         	goto	l3301
  2822   0012D8  EF5B  F009         	goto	l3305
  2823   0012DC                     l3311:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2826   0012DC  5034               	movf	vfpfcnvrt@done^0,w,c
  2827   0012DE  B4D8               	btfsc	status,2,c
  2828   0012E0  EF74  F009         	goto	u3101
  2829   0012E4  EF76  F009         	goto	u3100
  2830   0012E8                     u3101:
  2831   0012E8  EF5F  F009         	goto	l3309
  2832   0012EC                     u3100:
  2833   0012EC                     
  2834                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2835   0012EC  C02E  F011         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2836   0012F0  C02F  F012         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2837   0012F4  EC0D  F00D         	call	_read_prec_or_width	;wreg free
  2838   0012F8  C011  F048         	movff	?_read_prec_or_width,_width
  2839   0012FC  C012  F049         	movff	?_read_prec_or_width+1,_width+1
  2840   001300                     
  2841                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2842   001300  BE49               	btfsc	(_width+1)^0,7,c
  2843   001302  EF87  F009         	goto	u3110
  2844   001306  EF85  F009         	goto	u3111
  2845   00130A                     u3111:
  2846   00130A  EF8C  F009         	goto	l3319
  2847   00130E                     u3110:
  2848   00130E                     
  2849                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2850   00130E  804C               	bsf	_flags^0,0,c
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2853   001310  6C48               	negf	_width^0,c
  2854   001312  1E49               	comf	(_width+1)^0,f,c
  2855   001314  B0D8               	btfsc	status,0,c
  2856   001316  2A49               	incf	(_width+1)^0,f,c
  2857   001318                     l3319:
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2860   001318  502E               	movf	vfpfcnvrt@fmt^0,w,c
  2861   00131A  6ED9               	movwf	fsr2l,c
  2862   00131C  6ADA               	clrf	fsr2h,c
  2863   00131E  50DF               	movf	indf2,w,c
  2864   001320  6E35               	movwf	vfpfcnvrt@cp^0,c
  2865   001322  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2866   001326                     	if	1	;There is more than 1 active tblptr byte
  2867   001326  0E08               	movlw	high __smallconst
  2868   001328  6EF7               	movwf	tblptrh,c
  2869   00132A                     	endif
  2870   00132A                     	if	0	;tblptru may be non-zero
  2871   00132A                     	endif
  2872   00132A                     	if	0	;tblptru may be non-zero
  2873   00132A                     	endif
  2874   00132A  0008               	tblrd		*
  2875   00132C  50F5               	movf	tablat,w,c
  2876   00132E  0A75               	xorlw	117
  2877   001330  A4D8               	btfss	status,2,c
  2878   001332  EF9D  F009         	goto	u3121
  2879   001336  EF9F  F009         	goto	u3120
  2880   00133A                     u3121:
  2881   00133A  EFC8  F009         	goto	l3335
  2882   00133E                     u3120:
  2883   00133E                     
  2884                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2885   00133E  502F               	movf	vfpfcnvrt@ap^0,w,c
  2886   001340  6ED9               	movwf	fsr2l,c
  2887   001342  6ADA               	clrf	fsr2h,c
  2888   001344  0E02               	movlw	2
  2889   001346  26DF               	addwf	indf2,f,c
  2890   001348  5CDF               	subwf	indf2,w,c
  2891   00134A  6ED9               	movwf	fsr2l,c
  2892   00134C  6ADA               	clrf	fsr2h,c
  2893   00134E  CFDE F030          	movff	postinc2,vfpfcnvrt@convarg
  2894   001352  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg+1
  2895   001356                     
  2896                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2897   001356  502E               	movf	vfpfcnvrt@fmt^0,w,c
  2898   001358  6ED9               	movwf	fsr2l,c
  2899   00135A  6ADA               	clrf	fsr2h,c
  2900   00135C  2835               	incf	vfpfcnvrt@cp^0,w,c
  2901   00135E  6EDF               	movwf	indf2,c
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2904   001360  EFBC  F009         	goto	l3333
  2905   001364                     l3327:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  2908   001364  C02D  F025         	movff	vfpfcnvrt@fp,utoa@fp
  2909   001368  C030  F026         	movff	vfpfcnvrt@convarg,utoa@d
  2910   00136C  C031  F027         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2911   001370  ECDD  F00B         	call	_utoa	;wreg free
  2912   001374  EFDF  F009         	goto	l1041
  2913   001378                     l3333:
  2914   001378  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2915   00137C                     	if	1	;There is more than 1 active tblptr byte
  2916   00137C  0E08               	movlw	high __smallconst
  2917   00137E  6EF7               	movwf	tblptrh,c
  2918   001380                     	endif
  2919   001380                     	if	0	;tblptru may be non-zero
  2920   001380                     	endif
  2921   001380                     	if	0	;tblptru may be non-zero
  2922   001380                     	endif
  2923   001380  0008               	tblrd		*
  2924   001382  50F5               	movf	tablat,w,c
  2925                           
  2926                           ; Switch size 1, requested type "simple"
  2927                           ; Number of cases is 1, Range of values is 117 to 117
  2928                           ; switch strategies available:
  2929                           ; Name         Instructions Cycles
  2930                           ; simple_byte            4     3 (average)
  2931                           ;	Chosen strategy is simple_byte
  2932   001384  0A75               	xorlw	117	; case 117
  2933   001386  B4D8               	btfsc	status,2,c
  2934   001388  EFB2  F009         	goto	l3327
  2935   00138C  EFC8  F009         	goto	l3335
  2936   001390                     l3335:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2939   001390  502E               	movf	vfpfcnvrt@fmt^0,w,c
  2940   001392  6ED9               	movwf	fsr2l,c
  2941   001394  6ADA               	clrf	fsr2h,c
  2942   001396  2ADF               	incf	indf2,f,c
  2943   001398  EFDF  F009         	goto	l1041
  2944   00139C                     l3339:
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2947   00139C  502E               	movf	vfpfcnvrt@fmt^0,w,c
  2948   00139E  6ED9               	movwf	fsr2l,c
  2949   0013A0  6ADA               	clrf	fsr2h,c
  2950   0013A2  CFDF FFF6          	movff	indf2,tblptrl
  2951   0013A6                     	if	1	;There is more than 1 active tblptr byte
  2952   0013A6  0E08               	movlw	high __smallconst
  2953   0013A8  6EF7               	movwf	tblptrh,c
  2954   0013AA                     	endif
  2955   0013AA                     	if	0	;tblptru may be non-zero
  2956   0013AA                     	endif
  2957   0013AA                     	if	0	;tblptru may be non-zero
  2958   0013AA                     	endif
  2959   0013AA  0008               	tblrd		*
  2960   0013AC  50F5               	movf	tablat,w,c
  2961   0013AE  6E11               	movwf	fputc@c^0,c
  2962   0013B0  6A12               	clrf	(fputc@c+1)^0,c
  2963   0013B2  C02D  F013         	movff	vfpfcnvrt@fp,fputc@fp
  2964   0013B6  ECB8  F00C         	call	_fputc	;wreg free
  2965   0013BA  EFC8  F009         	goto	l3335
  2966   0013BE                     l1041:
  2967   0013BE  0012               	return		;funcret
  2968   0013C0                     __end_of_vfpfcnvrt:
  2969                           	callstack 0
  2970                           
  2971 ;; *************** function _utoa *****************
  2972 ;; Defined at:
  2973 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  fp              1   36[COMRAM] PTR struct _IO_FILE
  2976 ;;		 -> sprintf@f(11), 
  2977 ;;  d               2   37[COMRAM] unsigned int 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  i               2   42[COMRAM] int 
  2980 ;;  w               2   40[COMRAM] int 
  2981 ;;  p               1   39[COMRAM] _Bool 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2991 ;;      Params:         3       0       0       0       0       0       0       0       0
  2992 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2994 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2995 ;;Total ram usage:        8 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; Hardware stack levels required when called: 8
  2998 ;; This function calls:
  2999 ;;		___lwdiv
  3000 ;;		___lwmod
  3001 ;;		_pad
  3002 ;; This function is called by:
  3003 ;;		_vfpfcnvrt
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	text8
  3008   0017BA                     __ptext8:
  3009                           	callstack 0
  3010   0017BA                     _utoa:
  3011                           	callstack 18
  3012   0017BA                     
  3013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
  3014   0017BA  0E01               	movlw	1
  3015   0017BC  6E28               	movwf	utoa@p^0,c
  3016   0017BE                     
  3017                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  3018   0017BE  C048  F029         	movff	_width,utoa@w
  3019   0017C2  C049  F02A         	movff	_width+1,utoa@w+1
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  3022   0017C6  0E00               	movlw	0
  3023   0017C8  6E2C               	movwf	(utoa@i+1)^0,c
  3024   0017CA  0E1F               	movlw	31
  3025   0017CC  6E2B               	movwf	utoa@i^0,c
  3026   0017CE                     
  3027                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  3028   0017CE  0100               	movlb	0	; () banked
  3029   0017D0  6BB5               	clrf	(_dbuf+31)& (0+255),b
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3032   0017D2  EF11  F00C         	goto	l3263
  3033   0017D6                     l3253:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
  3036   0017D6  062B               	decf	utoa@i^0,f,c
  3037   0017D8  A0D8               	btfss	status,0,c
  3038   0017DA  062C               	decf	(utoa@i+1)^0,f,c
  3039   0017DC                     
  3040                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  3041   0017DC  502B               	movf	utoa@i^0,w,c
  3042   0017DE  0F96               	addlw	low _dbuf
  3043   0017E0  6ED9               	movwf	fsr2l,c
  3044   0017E2  6ADA               	clrf	fsr2h,c
  3045   0017E4  C026  F011         	movff	utoa@d,___lwmod@dividend
  3046   0017E8  C027  F012         	movff	utoa@d+1,___lwmod@dividend+1
  3047   0017EC  0E00               	movlw	0
  3048   0017EE  6E14               	movwf	(___lwmod@divisor+1)^0,c
  3049   0017F0  0E0A               	movlw	10
  3050   0017F2  6E13               	movwf	___lwmod@divisor^0,c
  3051   0017F4  ECA8  F00E         	call	___lwmod	;wreg free
  3052   0017F8  5011               	movf	?___lwmod^0,w,c
  3053   0017FA  0F30               	addlw	48
  3054   0017FC  6EDF               	movwf	indf2,c
  3055   0017FE                     
  3056                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  3057   0017FE  6A28               	clrf	utoa@p^0,c
  3058   001800                     
  3059                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  3060   001800  0629               	decf	utoa@w^0,f,c
  3061   001802  A0D8               	btfss	status,0,c
  3062   001804  062A               	decf	(utoa@w+1)^0,f,c
  3063   001806                     
  3064                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  3065   001806  C026  F011         	movff	utoa@d,___lwdiv@dividend
  3066   00180A  C027  F012         	movff	utoa@d+1,___lwdiv@dividend+1
  3067   00180E  0E00               	movlw	0
  3068   001810  6E14               	movwf	(___lwdiv@divisor+1)^0,c
  3069   001812  0E0A               	movlw	10
  3070   001814  6E13               	movwf	___lwdiv@divisor^0,c
  3071   001816  EC6E  F00E         	call	___lwdiv	;wreg free
  3072   00181A  C011  F026         	movff	?___lwdiv,utoa@d
  3073   00181E  C012  F027         	movff	?___lwdiv+1,utoa@d+1
  3074   001822                     l3263:
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3077   001822  502B               	movf	utoa@i^0,w,c
  3078   001824  102C               	iorwf	(utoa@i+1)^0,w,c
  3079   001826  B4D8               	btfsc	status,2,c
  3080   001828  EF18  F00C         	goto	u3021
  3081   00182C  EF1A  F00C         	goto	u3020
  3082   001830                     u3021:
  3083   001830  EF3F  F00C         	goto	l3273
  3084   001834                     u3020:
  3085   001834  5026               	movf	utoa@d^0,w,c
  3086   001836  1027               	iorwf	(utoa@d+1)^0,w,c
  3087   001838  A4D8               	btfss	status,2,c
  3088   00183A  EF21  F00C         	goto	u3031
  3089   00183E  EF23  F00C         	goto	u3030
  3090   001842                     u3031:
  3091   001842  EFEB  F00B         	goto	l3253
  3092   001846                     u3030:
  3093   001846  5028               	movf	utoa@p^0,w,c
  3094   001848  A4D8               	btfss	status,2,c
  3095   00184A  EF29  F00C         	goto	u3041
  3096   00184E  EF2B  F00C         	goto	u3040
  3097   001852                     u3041:
  3098   001852  EFEB  F00B         	goto	l3253
  3099   001856                     u3040:
  3100   001856  BE2A               	btfsc	(utoa@w+1)^0,7,c
  3101   001858  EF36  F00C         	goto	u3051
  3102   00185C  502A               	movf	(utoa@w+1)^0,w,c
  3103   00185E  E108               	bnz	u3050
  3104   001860  0429               	decf	utoa@w^0,w,c
  3105   001862  A0D8               	btfss	status,0,c
  3106   001864  EF36  F00C         	goto	u3051
  3107   001868  EF38  F00C         	goto	u3050
  3108   00186C                     u3051:
  3109   00186C  EF3F  F00C         	goto	l3273
  3110   001870                     u3050:
  3111   001870  B24C               	btfsc	_flags^0,1,c
  3112   001872  EF3D  F00C         	goto	u3061
  3113   001876  EF3F  F00C         	goto	u3060
  3114   00187A                     u3061:
  3115   00187A  EFEB  F00B         	goto	l3253
  3116   00187E                     u3060:
  3117   00187E                     l3273:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  3120   00187E  C025  F01E         	movff	utoa@fp,pad@fp
  3121   001882  502B               	movf	utoa@i^0,w,c
  3122   001884  0F96               	addlw	low _dbuf
  3123   001886  6E1F               	movwf	pad@buf^0,c
  3124   001888  C029  F020         	movff	utoa@w,pad@p
  3125   00188C  C02A  F021         	movff	utoa@w+1,pad@p+1
  3126   001890  ECA9  F00D         	call	_pad	;wreg free
  3127   001894  0012               	return		;funcret
  3128   001896                     __end_of_utoa:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function _pad *****************
  3132 ;; Defined at:
  3133 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  fp              1   29[COMRAM] PTR struct _IO_FILE
  3136 ;;		 -> sprintf@f(11), 
  3137 ;;  buf             1   30[COMRAM] PTR unsigned char 
  3138 ;;		 -> dbuf(32), 
  3139 ;;  p               2   31[COMRAM] int 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  i               2   34[COMRAM] int 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3151 ;;      Params:         4       0       0       0       0       0       0       0       0
  3152 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3153 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3154 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3155 ;;Total ram usage:        7 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 7
  3158 ;; This function calls:
  3159 ;;		_fputc
  3160 ;;		_fputs
  3161 ;; This function is called by:
  3162 ;;		_utoa
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text9
  3167   001B52                     __ptext9:
  3168                           	callstack 0
  3169   001B52                     _pad:
  3170                           	callstack 18
  3171   001B52                     
  3172                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  3173   001B52  A04C               	btfss	_flags^0,0,c
  3174   001B54  EFAE  F00D         	goto	u2981
  3175   001B58  EFB0  F00D         	goto	u2980
  3176   001B5C                     u2981:
  3177   001B5C  EFB6  F00D         	goto	l3235
  3178   001B60                     u2980:
  3179   001B60                     
  3180                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3181   001B60  C01F  F019         	movff	pad@buf,fputs@s
  3182   001B64  C01E  F01A         	movff	pad@fp,fputs@fp
  3183   001B68  EC28  F010         	call	_fputs	;wreg free
  3184   001B6C                     l3235:
  3185                           
  3186                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3187   001B6C  BE21               	btfsc	(pad@p+1)^0,7,c
  3188   001B6E  EFBD  F00D         	goto	u2990
  3189   001B72  EFBB  F00D         	goto	u2991
  3190   001B76                     u2991:
  3191   001B76  EFC1  F00D         	goto	l1001
  3192   001B7A                     u2990:
  3193   001B7A                     
  3194                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3195   001B7A  0E00               	movlw	0
  3196   001B7C  6E21               	movwf	(pad@p+1)^0,c
  3197   001B7E  0E00               	movlw	0
  3198   001B80  6E20               	movwf	pad@p^0,c
  3199   001B82                     l1001:
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3202   001B82  0E00               	movlw	0
  3203   001B84  6E24               	movwf	(pad@i+1)^0,c
  3204   001B86  0E00               	movlw	0
  3205   001B88  6E23               	movwf	pad@i^0,c
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3208   001B8A  EFD1  F00D         	goto	l3243
  3209   001B8E                     l3239:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3212   001B8E  0E00               	movlw	0
  3213   001B90  6E12               	movwf	(fputc@c+1)^0,c
  3214   001B92  0E20               	movlw	32
  3215   001B94  6E11               	movwf	fputc@c^0,c
  3216   001B96  C01E  F013         	movff	pad@fp,fputc@fp
  3217   001B9A  ECB8  F00C         	call	_fputc	;wreg free
  3218   001B9E                     
  3219                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3220   001B9E  4A23               	infsnz	pad@i^0,f,c
  3221   001BA0  2A24               	incf	(pad@i+1)^0,f,c
  3222   001BA2                     l3243:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3225   001BA2  5020               	movf	pad@p^0,w,c
  3226   001BA4  5C23               	subwf	pad@i^0,w,c
  3227   001BA6  5024               	movf	(pad@i+1)^0,w,c
  3228   001BA8  0A80               	xorlw	128
  3229   001BAA  6E22               	movwf	??_pad^0,c
  3230   001BAC  5021               	movf	(pad@p+1)^0,w,c
  3231   001BAE  0A80               	xorlw	128
  3232   001BB0  5822               	subwfb	??_pad^0,w,c
  3233   001BB2  A0D8               	btfss	status,0,c
  3234   001BB4  EFDE  F00D         	goto	u3001
  3235   001BB8  EFE0  F00D         	goto	u3000
  3236   001BBC                     u3001:
  3237   001BBC  EFC7  F00D         	goto	l3239
  3238   001BC0                     u3000:
  3239   001BC0                     
  3240                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3241   001BC0  B04C               	btfsc	_flags^0,0,c
  3242   001BC2  EFE5  F00D         	goto	u3011
  3243   001BC6  EFE7  F00D         	goto	u3010
  3244   001BCA                     u3011:
  3245   001BCA  EFED  F00D         	goto	l1006
  3246   001BCE                     u3010:
  3247   001BCE                     
  3248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3249   001BCE  C01F  F019         	movff	pad@buf,fputs@s
  3250   001BD2  C01E  F01A         	movff	pad@fp,fputs@fp
  3251   001BD6  EC28  F010         	call	_fputs	;wreg free
  3252   001BDA                     l1006:
  3253   001BDA  0012               	return		;funcret
  3254   001BDC                     __end_of_pad:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _fputs *****************
  3258 ;; Defined at:
  3259 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  s               1   24[COMRAM] PTR const unsigned char 
  3262 ;;		 -> dbuf(32), 
  3263 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
  3264 ;;		 -> sprintf@f(11), 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  i               2   27[COMRAM] int 
  3267 ;;  c               1   26[COMRAM] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  2   24[COMRAM] int 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3277 ;;      Params:         2       0       0       0       0       0       0       0       0
  3278 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3280 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3281 ;;Total ram usage:        5 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 6
  3284 ;; This function calls:
  3285 ;;		_fputc
  3286 ;; This function is called by:
  3287 ;;		_pad
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text10
  3292   002050                     __ptext10:
  3293                           	callstack 0
  3294   002050                     _fputs:
  3295                           	callstack 18
  3296   002050  0E00               	movlw	0
  3297   002052  6E1D               	movwf	(fputs@i+1)^0,c
  3298   002054  0E00               	movlw	0
  3299   002056  6E1C               	movwf	fputs@i^0,c
  3300   002058  EF37  F010         	goto	l3191
  3301   00205C                     l3187:
  3302   00205C  C01B  F011         	movff	fputs@c,fputc@c
  3303   002060  6A12               	clrf	(fputc@c+1)^0,c
  3304   002062  C01A  F013         	movff	fputs@fp,fputc@fp
  3305   002066  ECB8  F00C         	call	_fputc	;wreg free
  3306   00206A  4A1C               	infsnz	fputs@i^0,f,c
  3307   00206C  2A1D               	incf	(fputs@i+1)^0,f,c
  3308   00206E                     l3191:
  3309   00206E  5019               	movf	fputs@s^0,w,c
  3310   002070  241C               	addwf	fputs@i^0,w,c
  3311   002072  6ED9               	movwf	fsr2l,c
  3312   002074  6ADA               	clrf	fsr2h,c
  3313   002076  50DF               	movf	indf2,w,c
  3314   002078  6E1B               	movwf	fputs@c^0,c
  3315   00207A  501B               	movf	fputs@c^0,w,c
  3316   00207C  A4D8               	btfss	status,2,c
  3317   00207E  EF43  F010         	goto	u2911
  3318   002082  EF45  F010         	goto	u2910
  3319   002086                     u2911:
  3320   002086  EF2E  F010         	goto	l3187
  3321   00208A                     u2910:
  3322   00208A  0012               	return		;funcret
  3323   00208C                     __end_of_fputs:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _fputc *****************
  3327 ;; Defined at:
  3328 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  c               2   16[COMRAM] int 
  3331 ;;  fp              1   18[COMRAM] PTR struct _IO_FILE
  3332 ;;		 -> sprintf@f(11), 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  2   16[COMRAM] int 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3344 ;;      Params:         3       0       0       0       0       0       0       0       0
  3345 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3346 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3347 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3348 ;;Total ram usage:        8 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 5
  3351 ;; This function calls:
  3352 ;;		_putch
  3353 ;; This function is called by:
  3354 ;;		_pad
  3355 ;;		_vfpfcnvrt
  3356 ;;		_fputs
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text11
  3361   001970                     __ptext11:
  3362                           	callstack 0
  3363   001970                     _fputc:
  3364                           	callstack 18
  3365   001970  5013               	movf	fputc@fp^0,w,c
  3366   001972  B4D8               	btfsc	status,2,c
  3367   001974  EFBE  F00C         	goto	u2871
  3368   001978  EFC0  F00C         	goto	u2870
  3369   00197C                     u2871:
  3370   00197C  EFC8  F00C         	goto	l3175
  3371   001980                     u2870:
  3372   001980  5013               	movf	fputc@fp^0,w,c
  3373   001982  A4D8               	btfss	status,2,c
  3374   001984  EFC6  F00C         	goto	u2881
  3375   001988  EFC8  F00C         	goto	u2880
  3376   00198C                     u2881:
  3377   00198C  EFCD  F00C         	goto	l3177
  3378   001990                     u2880:
  3379   001990                     l3175:
  3380   001990  5011               	movf	fputc@c^0,w,c
  3381   001992  EC44  F011         	call	_putch
  3382   001996  EF0C  F00D         	goto	l1060
  3383   00199A                     l3177:
  3384   00199A  5013               	movf	fputc@fp^0,w,c
  3385   00199C  6ED9               	movwf	fsr2l,c
  3386   00199E  6ADA               	clrf	fsr2h,c
  3387   0019A0  0E09               	movlw	9
  3388   0019A2  26D9               	addwf	fsr2l,f,c
  3389   0019A4  50DE               	movf	postinc2,w,c
  3390   0019A6  10DE               	iorwf	postinc2,w,c
  3391   0019A8  B4D8               	btfsc	status,2,c
  3392   0019AA  EFD9  F00C         	goto	u2891
  3393   0019AE  EFDB  F00C         	goto	u2890
  3394   0019B2                     u2891:
  3395   0019B2  EFF4  F00C         	goto	l3181
  3396   0019B6                     u2890:
  3397   0019B6  5013               	movf	fputc@fp^0,w,c
  3398   0019B8  6ED9               	movwf	fsr2l,c
  3399   0019BA  6ADA               	clrf	fsr2h,c
  3400   0019BC  0E09               	movlw	9
  3401   0019BE  26D9               	addwf	fsr2l,f,c
  3402   0019C0  5013               	movf	fputc@fp^0,w,c
  3403   0019C2  6EE1               	movwf	fsr1l,c
  3404   0019C4  6AE2               	clrf	fsr1h,c
  3405   0019C6  0E02               	movlw	2
  3406   0019C8  26E1               	addwf	fsr1l,f,c
  3407   0019CA  50DE               	movf	postinc2,w,c
  3408   0019CC  5CE6               	subwf	postinc1,w,c
  3409   0019CE  50E6               	movf	postinc1,w,c
  3410   0019D0  0A80               	xorlw	128
  3411   0019D2  6E18               	movwf	(??_fputc+4)^0,c
  3412   0019D4  50DE               	movf	postinc2,w,c
  3413   0019D6  0A80               	xorlw	128
  3414   0019D8  5818               	subwfb	(??_fputc+4)^0,w,c
  3415   0019DA  B0D8               	btfsc	status,0,c
  3416   0019DC  EFF2  F00C         	goto	u2901
  3417   0019E0  EFF4  F00C         	goto	u2900
  3418   0019E4                     u2901:
  3419   0019E4  EF0C  F00D         	goto	l1060
  3420   0019E8                     u2900:
  3421   0019E8                     l3181:
  3422   0019E8  5013               	movf	fputc@fp^0,w,c
  3423   0019EA  6ED9               	movwf	fsr2l,c
  3424   0019EC  6ADA               	clrf	fsr2h,c
  3425   0019EE  0E02               	movlw	2
  3426   0019F0  26D9               	addwf	fsr2l,f,c
  3427   0019F2  50DF               	movf	indf2,w,c
  3428   0019F4  6E14               	movwf	??_fputc^0,c
  3429   0019F6  5013               	movf	fputc@fp^0,w,c
  3430   0019F8  6ED9               	movwf	fsr2l,c
  3431   0019FA  6ADA               	clrf	fsr2h,c
  3432   0019FC  50DF               	movf	indf2,w,c
  3433   0019FE  2414               	addwf	??_fputc^0,w,c
  3434   001A00  6ED9               	movwf	fsr2l,c
  3435   001A02  6ADA               	clrf	fsr2h,c
  3436   001A04  C011  FFDF         	movff	fputc@c,indf2
  3437   001A08  5013               	movf	fputc@fp^0,w,c
  3438   001A0A  6ED9               	movwf	fsr2l,c
  3439   001A0C  6ADA               	clrf	fsr2h,c
  3440   001A0E  0E02               	movlw	2
  3441   001A10  26D9               	addwf	fsr2l,f,c
  3442   001A12  2ADE               	incf	postinc2,f,c
  3443   001A14  0E00               	movlw	0
  3444   001A16  22DD               	addwfc	postdec2,f,c
  3445   001A18                     l1060:
  3446   001A18  0012               	return		;funcret
  3447   001A1A                     __end_of_fputc:
  3448                           	callstack 0
  3449                           
  3450 ;; *************** function _putch *****************
  3451 ;; Defined at:
  3452 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  c               1    wreg     unsigned char 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  c               1    0[COMRAM] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3466 ;;      Params:         0       0       0       0       0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3469 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 4
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_fputc
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text12
  3481   002288                     __ptext12:
  3482                           	callstack 0
  3483   002288                     _putch:
  3484                           	callstack 18
  3485   002288  0012               	return		;funcret
  3486   00228A                     __end_of_putch:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function ___lwmod *****************
  3490 ;; Defined at:
  3491 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  dividend        2   16[COMRAM] unsigned int 
  3494 ;;  divisor         2   18[COMRAM] unsigned int 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  counter         1   20[COMRAM] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  2   16[COMRAM] unsigned int 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3506 ;;      Params:         4       0       0       0       0       0       0       0       0
  3507 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3509 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3510 ;;Total ram usage:        5 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 4
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_utoa
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text13
  3521   001D50                     __ptext13:
  3522                           	callstack 0
  3523   001D50                     ___lwmod:
  3524                           	callstack 21
  3525   001D50  5013               	movf	___lwmod@divisor^0,w,c
  3526   001D52  1014               	iorwf	(___lwmod@divisor+1)^0,w,c
  3527   001D54  B4D8               	btfsc	status,2,c
  3528   001D56  EFAF  F00E         	goto	u2951
  3529   001D5A  EFB1  F00E         	goto	u2950
  3530   001D5E                     u2951:
  3531   001D5E  EFD5  F00E         	goto	l806
  3532   001D62                     u2950:
  3533   001D62  0E01               	movlw	1
  3534   001D64  6E15               	movwf	___lwmod@counter^0,c
  3535   001D66  EFB9  F00E         	goto	l3221
  3536   001D6A                     l3219:
  3537   001D6A  90D8               	bcf	status,0,c
  3538   001D6C  3613               	rlcf	___lwmod@divisor^0,f,c
  3539   001D6E  3614               	rlcf	(___lwmod@divisor+1)^0,f,c
  3540   001D70  2A15               	incf	___lwmod@counter^0,f,c
  3541   001D72                     l3221:
  3542   001D72  AE14               	btfss	(___lwmod@divisor+1)^0,7,c
  3543   001D74  EFBE  F00E         	goto	u2961
  3544   001D78  EFC0  F00E         	goto	u2960
  3545   001D7C                     u2961:
  3546   001D7C  EFB5  F00E         	goto	l3219
  3547   001D80                     u2960:
  3548   001D80                     l3223:
  3549   001D80  5013               	movf	___lwmod@divisor^0,w,c
  3550   001D82  5C11               	subwf	___lwmod@dividend^0,w,c
  3551   001D84  5014               	movf	(___lwmod@divisor+1)^0,w,c
  3552   001D86  5812               	subwfb	(___lwmod@dividend+1)^0,w,c
  3553   001D88  A0D8               	btfss	status,0,c
  3554   001D8A  EFC9  F00E         	goto	u2971
  3555   001D8E  EFCB  F00E         	goto	u2970
  3556   001D92                     u2971:
  3557   001D92  EFCF  F00E         	goto	l3227
  3558   001D96                     u2970:
  3559   001D96  5013               	movf	___lwmod@divisor^0,w,c
  3560   001D98  5E11               	subwf	___lwmod@dividend^0,f,c
  3561   001D9A  5014               	movf	(___lwmod@divisor+1)^0,w,c
  3562   001D9C  5A12               	subwfb	(___lwmod@dividend+1)^0,f,c
  3563   001D9E                     l3227:
  3564   001D9E  90D8               	bcf	status,0,c
  3565   001DA0  3214               	rrcf	(___lwmod@divisor+1)^0,f,c
  3566   001DA2  3213               	rrcf	___lwmod@divisor^0,f,c
  3567   001DA4  2E15               	decfsz	___lwmod@counter^0,f,c
  3568   001DA6  EFC0  F00E         	goto	l3223
  3569   001DAA                     l806:
  3570   001DAA  C011  F011         	movff	___lwmod@dividend,?___lwmod
  3571   001DAE  C012  F012         	movff	___lwmod@dividend+1,?___lwmod+1
  3572   001DB2  0012               	return		;funcret
  3573   001DB4                     __end_of___lwmod:
  3574                           	callstack 0
  3575                           
  3576 ;; *************** function ___lwdiv *****************
  3577 ;; Defined at:
  3578 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  dividend        2   16[COMRAM] unsigned int 
  3581 ;;  divisor         2   18[COMRAM] unsigned int 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  quotient        2   21[COMRAM] unsigned int 
  3584 ;;  counter         1   20[COMRAM] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  2   16[COMRAM] unsigned int 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3594 ;;      Params:         4       0       0       0       0       0       0       0       0
  3595 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3597 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3598 ;;Total ram usage:        7 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 4
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_utoa
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text14
  3609   001CDC                     __ptext14:
  3610                           	callstack 0
  3611   001CDC                     ___lwdiv:
  3612                           	callstack 21
  3613   001CDC  0E00               	movlw	0
  3614   001CDE  6E17               	movwf	(___lwdiv@quotient+1)^0,c
  3615   001CE0  0E00               	movlw	0
  3616   001CE2  6E16               	movwf	___lwdiv@quotient^0,c
  3617   001CE4  5013               	movf	___lwdiv@divisor^0,w,c
  3618   001CE6  1014               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3619   001CE8  B4D8               	btfsc	status,2,c
  3620   001CEA  EF79  F00E         	goto	u2921
  3621   001CEE  EF7B  F00E         	goto	u2920
  3622   001CF2                     u2921:
  3623   001CF2  EFA3  F00E         	goto	l796
  3624   001CF6                     u2920:
  3625   001CF6  0E01               	movlw	1
  3626   001CF8  6E15               	movwf	___lwdiv@counter^0,c
  3627   001CFA  EF83  F00E         	goto	l3201
  3628   001CFE                     l3199:
  3629   001CFE  90D8               	bcf	status,0,c
  3630   001D00  3613               	rlcf	___lwdiv@divisor^0,f,c
  3631   001D02  3614               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3632   001D04  2A15               	incf	___lwdiv@counter^0,f,c
  3633   001D06                     l3201:
  3634   001D06  AE14               	btfss	(___lwdiv@divisor+1)^0,7,c
  3635   001D08  EF88  F00E         	goto	u2931
  3636   001D0C  EF8A  F00E         	goto	u2930
  3637   001D10                     u2931:
  3638   001D10  EF7F  F00E         	goto	l3199
  3639   001D14                     u2930:
  3640   001D14                     l3203:
  3641   001D14  90D8               	bcf	status,0,c
  3642   001D16  3616               	rlcf	___lwdiv@quotient^0,f,c
  3643   001D18  3617               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3644   001D1A  5013               	movf	___lwdiv@divisor^0,w,c
  3645   001D1C  5C11               	subwf	___lwdiv@dividend^0,w,c
  3646   001D1E  5014               	movf	(___lwdiv@divisor+1)^0,w,c
  3647   001D20  5812               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3648   001D22  A0D8               	btfss	status,0,c
  3649   001D24  EF96  F00E         	goto	u2941
  3650   001D28  EF98  F00E         	goto	u2940
  3651   001D2C                     u2941:
  3652   001D2C  EF9D  F00E         	goto	l3211
  3653   001D30                     u2940:
  3654   001D30  5013               	movf	___lwdiv@divisor^0,w,c
  3655   001D32  5E11               	subwf	___lwdiv@dividend^0,f,c
  3656   001D34  5014               	movf	(___lwdiv@divisor+1)^0,w,c
  3657   001D36  5A12               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3658   001D38  8016               	bsf	___lwdiv@quotient^0,0,c
  3659   001D3A                     l3211:
  3660   001D3A  90D8               	bcf	status,0,c
  3661   001D3C  3214               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3662   001D3E  3213               	rrcf	___lwdiv@divisor^0,f,c
  3663   001D40  2E15               	decfsz	___lwdiv@counter^0,f,c
  3664   001D42  EF8A  F00E         	goto	l3203
  3665   001D46                     l796:
  3666   001D46  C016  F011         	movff	___lwdiv@quotient,?___lwdiv
  3667   001D4A  C017  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3668   001D4E  0012               	return		;funcret
  3669   001D50                     __end_of___lwdiv:
  3670                           	callstack 0
  3671                           
  3672 ;; *************** function _read_prec_or_width *****************
  3673 ;; Defined at:
  3674 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  fmt             1   16[COMRAM] PTR PTR const unsigned c
  3677 ;;		 -> vfprintf@cfmt(1), 
  3678 ;;  ap              1   17[COMRAM] PTR PTR void [1]
  3679 ;;		 -> sprintf@ap(1), 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  c               1   20[COMRAM] unsigned char 
  3682 ;;  n               2   21[COMRAM] int 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  2   16[COMRAM] int 
  3685 ;; Registers used:
  3686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3692 ;;      Params:         2       0       0       0       0       0       0       0       0
  3693 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3694 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3695 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3696 ;;Total ram usage:        7 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 4
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_vfpfcnvrt
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text15
  3707   001A1A                     __ptext15:
  3708                           	callstack 0
  3709   001A1A                     _read_prec_or_width:
  3710                           	callstack 22
  3711   001A1A                     
  3712                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3713   001A1A  0E00               	movlw	0
  3714   001A1C  6E17               	movwf	(read_prec_or_width@n+1)^0,c
  3715   001A1E  0E00               	movlw	0
  3716   001A20  6E16               	movwf	read_prec_or_width@n^0,c
  3717   001A22                     
  3718                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3719   001A22  5011               	movf	read_prec_or_width@fmt^0,w,c
  3720   001A24  6ED9               	movwf	fsr2l,c
  3721   001A26  6ADA               	clrf	fsr2h,c
  3722   001A28  CFDF FFF6          	movff	indf2,tblptrl
  3723   001A2C                     	if	1	;There is more than 1 active tblptr byte
  3724   001A2C  0E08               	movlw	high __smallconst
  3725   001A2E  6EF7               	movwf	tblptrh,c
  3726   001A30                     	endif
  3727   001A30                     	if	0	;tblptru may be non-zero
  3728   001A30                     	endif
  3729   001A30                     	if	0	;tblptru may be non-zero
  3730   001A30                     	endif
  3731   001A30  0008               	tblrd		*
  3732   001A32  50F5               	movf	tablat,w,c
  3733   001A34  0A2A               	xorlw	42
  3734   001A36  A4D8               	btfss	status,2,c
  3735   001A38  EF20  F00D         	goto	u3071
  3736   001A3C  EF22  F00D         	goto	u3070
  3737   001A40                     u3071:
  3738   001A40  EF47  F00D         	goto	l3289
  3739   001A44                     u3070:
  3740   001A44                     
  3741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3742   001A44  5011               	movf	read_prec_or_width@fmt^0,w,c
  3743   001A46  6ED9               	movwf	fsr2l,c
  3744   001A48  6ADA               	clrf	fsr2h,c
  3745   001A4A  2ADF               	incf	indf2,f,c
  3746   001A4C                     
  3747                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3748   001A4C  5012               	movf	read_prec_or_width@ap^0,w,c
  3749   001A4E  6ED9               	movwf	fsr2l,c
  3750   001A50  6ADA               	clrf	fsr2h,c
  3751   001A52  0E02               	movlw	2
  3752   001A54  26DF               	addwf	indf2,f,c
  3753   001A56  5CDF               	subwf	indf2,w,c
  3754   001A58  6ED9               	movwf	fsr2l,c
  3755   001A5A  6ADA               	clrf	fsr2h,c
  3756   001A5C  CFDE F016          	movff	postinc2,read_prec_or_width@n
  3757   001A60  CFDE F017          	movff	postinc2,read_prec_or_width@n+1
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3760   001A64  EF5A  F00D         	goto	l1020
  3761   001A68                     l3285:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3764   001A68  0E0A               	movlw	10
  3765   001A6A  0216               	mulwf	read_prec_or_width@n^0,c
  3766   001A6C  CFF3 F013          	movff	prodl,??_read_prec_or_width
  3767   001A70  CFF4 F014          	movff	prodh,??_read_prec_or_width+1
  3768   001A74  0217               	mulwf	(read_prec_or_width@n+1)^0,c
  3769   001A76  50F3               	movf	prodl,w,c
  3770   001A78  2614               	addwf	(??_read_prec_or_width+1)^0,f,c
  3771   001A7A  5015               	movf	read_prec_or_width@c^0,w,c
  3772   001A7C  2413               	addwf	??_read_prec_or_width^0,w,c
  3773   001A7E  6E16               	movwf	read_prec_or_width@n^0,c
  3774   001A80  0E00               	movlw	0
  3775   001A82  2014               	addwfc	(??_read_prec_or_width+1)^0,w,c
  3776   001A84  6E17               	movwf	(read_prec_or_width@n+1)^0,c
  3777   001A86                     
  3778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3779   001A86  5011               	movf	read_prec_or_width@fmt^0,w,c
  3780   001A88  6ED9               	movwf	fsr2l,c
  3781   001A8A  6ADA               	clrf	fsr2h,c
  3782   001A8C  2ADF               	incf	indf2,f,c
  3783   001A8E                     l3289:
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3786   001A8E  5011               	movf	read_prec_or_width@fmt^0,w,c
  3787   001A90  6ED9               	movwf	fsr2l,c
  3788   001A92  6ADA               	clrf	fsr2h,c
  3789   001A94  CFDF FFF6          	movff	indf2,tblptrl
  3790   001A98                     	if	1	;There is more than 1 active tblptr byte
  3791   001A98  0E08               	movlw	high __smallconst
  3792   001A9A  6EF7               	movwf	tblptrh,c
  3793   001A9C                     	endif
  3794   001A9C                     	if	0	;tblptru may be non-zero
  3795   001A9C                     	endif
  3796   001A9C                     	if	0	;tblptru may be non-zero
  3797   001A9C                     	endif
  3798   001A9C  0008               	tblrd		*
  3799   001A9E  50F5               	movf	tablat,w,c
  3800   001AA0  0FD0               	addlw	208
  3801   001AA2  6E15               	movwf	read_prec_or_width@c^0,c
  3802   001AA4  0E09               	movlw	9
  3803   001AA6  6415               	cpfsgt	read_prec_or_width@c^0,c
  3804   001AA8  EF58  F00D         	goto	u3081
  3805   001AAC  EF5A  F00D         	goto	u3080
  3806   001AB0                     u3081:
  3807   001AB0  EF34  F00D         	goto	l3285
  3808   001AB4                     u3080:
  3809   001AB4                     l1020:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3812   001AB4  C016  F011         	movff	read_prec_or_width@n,?_read_prec_or_width
  3813   001AB8  C017  F012         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3814   001ABC  0012               	return		;funcret
  3815   001ABE                     __end_of_read_prec_or_width:
  3816                           	callstack 0
  3817                           
  3818 ;; *************** function _RTC_GetDateTime *****************
  3819 ;; Defined at:
  3820 ;;		line 60 in file "ds1307.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  hour            1   21[COMRAM] PTR unsigned char 
  3823 ;;		 -> mostrar_rtc@h(1), 
  3824 ;;  min             1   22[COMRAM] PTR unsigned char 
  3825 ;;		 -> mostrar_rtc@m(1), 
  3826 ;;  sec             1   23[COMRAM] PTR unsigned char 
  3827 ;;		 -> mostrar_rtc@s(1), 
  3828 ;;  day             1   24[COMRAM] PTR unsigned char 
  3829 ;;		 -> mostrar_rtc@d(1), 
  3830 ;;  month           1   25[COMRAM] PTR unsigned char 
  3831 ;;		 -> mostrar_rtc@mo(1), 
  3832 ;;  year            1   26[COMRAM] PTR unsigned char 
  3833 ;;		 -> mostrar_rtc@y(1), 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3845 ;;      Params:         6       0       0       0       0       0       0       0       0
  3846 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3848 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3849 ;;Total ram usage:        6 bytes
  3850 ;; Hardware stack levels used: 1
  3851 ;; Hardware stack levels required when called: 6
  3852 ;; This function calls:
  3853 ;;		_BCD2DEC
  3854 ;;		_I2C_Master_Read
  3855 ;;		_I2C_Master_RepeatedStart
  3856 ;;		_I2C_Master_Start
  3857 ;;		_I2C_Master_Stop
  3858 ;;		_I2C_Master_Write
  3859 ;; This function is called by:
  3860 ;;		_mostrar_rtc
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text16
  3865   001896                     __ptext16:
  3866                           	callstack 0
  3867   001896                     _RTC_GetDateTime:
  3868                           	callstack 23
  3869   001896                     
  3870                           ;ds1307.c: 60: void RTC_GetDateTime(unsigned char *hour, unsigned char *min, unsigned ch
      +                          ar *sec,;ds1307.c: 61:                      unsigned char *day, unsigned char *month, un
      +                          signed char *year) {;ds1307.c: 62:     I2C_Master_Start();
  3871   001896  EC3C  F011         	call	_I2C_Master_Start	;wreg free
  3872                           
  3873                           ;ds1307.c: 63:     I2C_Master_Write(0b11010000);
  3874   00189A  0E00               	movlw	0
  3875   00189C  6E13               	movwf	(I2C_Master_Write@d+1)^0,c
  3876   00189E  0ED0               	movlw	208
  3877   0018A0  6E12               	movwf	I2C_Master_Write@d^0,c
  3878   0018A2  EC31  F011         	call	_I2C_Master_Write	;wreg free
  3879                           
  3880                           ;ds1307.c: 64:     I2C_Master_Write(0b00000000);
  3881   0018A6  0E00               	movlw	0
  3882   0018A8  6E13               	movwf	(I2C_Master_Write@d+1)^0,c
  3883   0018AA  0E00               	movlw	0
  3884   0018AC  6E12               	movwf	I2C_Master_Write@d^0,c
  3885   0018AE  EC31  F011         	call	_I2C_Master_Write	;wreg free
  3886                           
  3887                           ;ds1307.c: 65:     I2C_Master_RepeatedStart();
  3888   0018B2  EC40  F011         	call	_I2C_Master_RepeatedStart	;wreg free
  3889                           
  3890                           ;ds1307.c: 66:     I2C_Master_Write(0b11010000 | 1);
  3891   0018B6  0E00               	movlw	0
  3892   0018B8  6E13               	movwf	(I2C_Master_Write@d+1)^0,c
  3893   0018BA  0ED1               	movlw	209
  3894   0018BC  6E12               	movwf	I2C_Master_Write@d^0,c
  3895   0018BE  EC31  F011         	call	_I2C_Master_Write	;wreg free
  3896   0018C2                     
  3897                           ;ds1307.c: 68:     *sec = BCD2DEC(I2C_Master_Read(1));
  3898   0018C2  5018               	movf	RTC_GetDateTime@sec^0,w,c
  3899   0018C4  6ED9               	movwf	fsr2l,c
  3900   0018C6  6ADA               	clrf	fsr2h,c
  3901   0018C8  0E00               	movlw	0
  3902   0018CA  6E13               	movwf	(I2C_Master_Read@a+1)^0,c
  3903   0018CC  0E01               	movlw	1
  3904   0018CE  6E12               	movwf	I2C_Master_Read@a^0,c
  3905   0018D0  EC9C  F010         	call	_I2C_Master_Read	;wreg free
  3906   0018D4  5012               	movf	?_I2C_Master_Read^0,w,c
  3907   0018D6  EC26  F011         	call	_BCD2DEC
  3908   0018DA  6EDF               	movwf	indf2,c
  3909   0018DC                     
  3910                           ;ds1307.c: 69:     *min = BCD2DEC(I2C_Master_Read(1));
  3911   0018DC  5017               	movf	RTC_GetDateTime@min^0,w,c
  3912   0018DE  6ED9               	movwf	fsr2l,c
  3913   0018E0  6ADA               	clrf	fsr2h,c
  3914   0018E2  0E00               	movlw	0
  3915   0018E4  6E13               	movwf	(I2C_Master_Read@a+1)^0,c
  3916   0018E6  0E01               	movlw	1
  3917   0018E8  6E12               	movwf	I2C_Master_Read@a^0,c
  3918   0018EA  EC9C  F010         	call	_I2C_Master_Read	;wreg free
  3919   0018EE  5012               	movf	?_I2C_Master_Read^0,w,c
  3920   0018F0  EC26  F011         	call	_BCD2DEC
  3921   0018F4  6EDF               	movwf	indf2,c
  3922   0018F6                     
  3923                           ;ds1307.c: 70:     *hour = BCD2DEC(I2C_Master_Read(1));
  3924   0018F6  5016               	movf	RTC_GetDateTime@hour^0,w,c
  3925   0018F8  6ED9               	movwf	fsr2l,c
  3926   0018FA  6ADA               	clrf	fsr2h,c
  3927   0018FC  0E00               	movlw	0
  3928   0018FE  6E13               	movwf	(I2C_Master_Read@a+1)^0,c
  3929   001900  0E01               	movlw	1
  3930   001902  6E12               	movwf	I2C_Master_Read@a^0,c
  3931   001904  EC9C  F010         	call	_I2C_Master_Read	;wreg free
  3932   001908  5012               	movf	?_I2C_Master_Read^0,w,c
  3933   00190A  EC26  F011         	call	_BCD2DEC
  3934   00190E  6EDF               	movwf	indf2,c
  3935   001910                     
  3936                           ;ds1307.c: 71:     I2C_Master_Read(1);
  3937   001910  0E00               	movlw	0
  3938   001912  6E13               	movwf	(I2C_Master_Read@a+1)^0,c
  3939   001914  0E01               	movlw	1
  3940   001916  6E12               	movwf	I2C_Master_Read@a^0,c
  3941   001918  EC9C  F010         	call	_I2C_Master_Read	;wreg free
  3942                           
  3943                           ;ds1307.c: 72:     *day = BCD2DEC(I2C_Master_Read(1));
  3944   00191C  5019               	movf	RTC_GetDateTime@day^0,w,c
  3945   00191E  6ED9               	movwf	fsr2l,c
  3946   001920  6ADA               	clrf	fsr2h,c
  3947   001922  0E00               	movlw	0
  3948   001924  6E13               	movwf	(I2C_Master_Read@a+1)^0,c
  3949   001926  0E01               	movlw	1
  3950   001928  6E12               	movwf	I2C_Master_Read@a^0,c
  3951   00192A  EC9C  F010         	call	_I2C_Master_Read	;wreg free
  3952   00192E  5012               	movf	?_I2C_Master_Read^0,w,c
  3953   001930  EC26  F011         	call	_BCD2DEC
  3954   001934  6EDF               	movwf	indf2,c
  3955                           
  3956                           ;ds1307.c: 73:     *month = BCD2DEC(I2C_Master_Read(1));
  3957   001936  501A               	movf	RTC_GetDateTime@month^0,w,c
  3958   001938  6ED9               	movwf	fsr2l,c
  3959   00193A  6ADA               	clrf	fsr2h,c
  3960   00193C  0E00               	movlw	0
  3961   00193E  6E13               	movwf	(I2C_Master_Read@a+1)^0,c
  3962   001940  0E01               	movlw	1
  3963   001942  6E12               	movwf	I2C_Master_Read@a^0,c
  3964   001944  EC9C  F010         	call	_I2C_Master_Read	;wreg free
  3965   001948  5012               	movf	?_I2C_Master_Read^0,w,c
  3966   00194A  EC26  F011         	call	_BCD2DEC
  3967   00194E  6EDF               	movwf	indf2,c
  3968                           
  3969                           ;ds1307.c: 74:     *year = BCD2DEC(I2C_Master_Read(0));
  3970   001950  501B               	movf	RTC_GetDateTime@year^0,w,c
  3971   001952  6ED9               	movwf	fsr2l,c
  3972   001954  6ADA               	clrf	fsr2h,c
  3973   001956  0E00               	movlw	0
  3974   001958  6E13               	movwf	(I2C_Master_Read@a+1)^0,c
  3975   00195A  0E00               	movlw	0
  3976   00195C  6E12               	movwf	I2C_Master_Read@a^0,c
  3977   00195E  EC9C  F010         	call	_I2C_Master_Read	;wreg free
  3978   001962  5012               	movf	?_I2C_Master_Read^0,w,c
  3979   001964  EC26  F011         	call	_BCD2DEC
  3980   001968  6EDF               	movwf	indf2,c
  3981   00196A                     
  3982                           ;ds1307.c: 75:     I2C_Master_Stop();
  3983   00196A  EC38  F011         	call	_I2C_Master_Stop	;wreg free
  3984   00196E  0012               	return		;funcret
  3985   001970                     __end_of_RTC_GetDateTime:
  3986                           	callstack 0
  3987                           
  3988 ;; *************** function _BCD2DEC *****************
  3989 ;; Defined at:
  3990 ;;		line 6 in file "ds1307.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  val             1    wreg     unsigned char 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  val             1   17[COMRAM] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      unsigned char 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0, prodl, prodh
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4004 ;;      Params:         0       0       0       0       0       0       0       0       0
  4005 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4006 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4007 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4008 ;;Total ram usage:        2 bytes
  4009 ;; Hardware stack levels used: 1
  4010 ;; Hardware stack levels required when called: 4
  4011 ;; This function calls:
  4012 ;;		Nothing
  4013 ;; This function is called by:
  4014 ;;		_RTC_GetDateTime
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text17
  4019   00224C                     __ptext17:
  4020                           	callstack 0
  4021   00224C                     _BCD2DEC:
  4022                           	callstack 24
  4023                           
  4024                           ;incstack = 0
  4025                           ;BCD2DEC@val stored from wreg
  4026   00224C  6E12               	movwf	BCD2DEC@val^0,c
  4027   00224E                     
  4028                           ;ds1307.c: 7:     return ((val >> 4) * 10) + (val & 0x0F);
  4029   00224E  C012  F011         	movff	BCD2DEC@val,??_BCD2DEC
  4030   002252  0E0F               	movlw	15
  4031   002254  1611               	andwf	??_BCD2DEC^0,f,c
  4032   002256  3812               	swapf	BCD2DEC@val^0,w,c
  4033   002258  0B0F               	andlw	15
  4034   00225A  0D0A               	mullw	10
  4035   00225C  50F3               	movf	243,w,c
  4036   00225E  2411               	addwf	??_BCD2DEC^0,w,c
  4037   002260  0012               	return		;funcret
  4038   002262                     __end_of_BCD2DEC:
  4039                           	callstack 0
  4040                           
  4041 ;; *************** function _LCD_String_xy *****************
  4042 ;; Defined at:
  4043 ;;		line 53 in file "LCD.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  row             1    wreg     unsigned char 
  4046 ;;  pos             1   20[COMRAM] unsigned char 
  4047 ;;  msg             2   21[COMRAM] PTR const unsigned char 
  4048 ;;		 -> STR_8(8), STR_7(13), STR_6(17), STR_5(15), 
  4049 ;;		 -> STR_4(17), mostrar_rtc@fecha(17), mostrar_rtc@hora(17), mostrar_temperatura@buffer(16), 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  row             1   23[COMRAM] unsigned char 
  4052 ;;  location        1   24[COMRAM] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4062 ;;      Params:         3       0       0       0       0       0       0       0       0
  4063 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4065 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4066 ;;Total ram usage:        5 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; Hardware stack levels required when called: 6
  4069 ;; This function calls:
  4070 ;;		_LCD_Command
  4071 ;;		_LCD_String
  4072 ;; This function is called by:
  4073 ;;		_mostrar_temperatura
  4074 ;;		_mostrar_rtc
  4075 ;;		_main
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text18
  4080   00208C                     __ptext18:
  4081                           	callstack 0
  4082   00208C                     _LCD_String_xy:
  4083                           	callstack 23
  4084                           
  4085                           ;incstack = 0
  4086                           ;LCD_String_xy@row stored from wreg
  4087   00208C  6E18               	movwf	LCD_String_xy@row^0,c
  4088   00208E                     
  4089                           ;LCD.c: 55:     if (row == 0) {
  4090   00208E  5018               	movf	LCD_String_xy@row^0,w,c
  4091   002090  A4D8               	btfss	status,2,c
  4092   002092  EF4D  F010         	goto	u1951
  4093   002096  EF4F  F010         	goto	u1950
  4094   00209A                     u1951:
  4095   00209A  EF55  F010         	goto	l2541
  4096   00209E                     u1950:
  4097   00209E                     
  4098                           ;LCD.c: 56:         location = 0x80 | (pos & 0x0F);
  4099   00209E  5015               	movf	LCD_String_xy@pos^0,w,c
  4100   0020A0  0B0F               	andlw	15
  4101   0020A2  0980               	iorlw	128
  4102   0020A4  6E19               	movwf	LCD_String_xy@location^0,c
  4103                           
  4104                           ;LCD.c: 57:     } else {
  4105   0020A6  EF59  F010         	goto	l2543
  4106   0020AA                     l2541:
  4107                           
  4108                           ;LCD.c: 58:         location = 0xC0 | (pos & 0x0F);
  4109   0020AA  5015               	movf	LCD_String_xy@pos^0,w,c
  4110   0020AC  0B0F               	andlw	15
  4111   0020AE  09C0               	iorlw	192
  4112   0020B0  6E19               	movwf	LCD_String_xy@location^0,c
  4113   0020B2                     l2543:
  4114                           
  4115                           ;LCD.c: 60:     LCD_Command(location);
  4116   0020B2  5019               	movf	LCD_String_xy@location^0,w,c
  4117   0020B4  EC62  F00F         	call	_LCD_Command
  4118   0020B8                     
  4119                           ;LCD.c: 61:     LCD_String(msg);
  4120   0020B8  C016  F013         	movff	LCD_String_xy@msg,LCD_String@msg
  4121   0020BC  C017  F014         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4122   0020C0  ECDA  F00E         	call	_LCD_String	;wreg free
  4123   0020C4  0012               	return		;funcret
  4124   0020C6                     __end_of_LCD_String_xy:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function _LCD_String *****************
  4128 ;; Defined at:
  4129 ;;		line 45 in file "LCD.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  msg             2   18[COMRAM] PTR const unsigned char 
  4132 ;;		 -> STR_8(8), STR_7(13), STR_6(17), STR_5(15), 
  4133 ;;		 -> STR_4(17), mostrar_rtc@fecha(17), mostrar_rtc@hora(17), mostrar_temperatura@buffer(16), 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4145 ;;      Params:         2       0       0       0       0       0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4148 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4149 ;;Total ram usage:        2 bytes
  4150 ;; Hardware stack levels used: 1
  4151 ;; Hardware stack levels required when called: 5
  4152 ;; This function calls:
  4153 ;;		_LCD_Char
  4154 ;; This function is called by:
  4155 ;;		_LCD_String_xy
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text19
  4160   001DB4                     __ptext19:
  4161                           	callstack 0
  4162   001DB4                     _LCD_String:
  4163                           	callstack 23
  4164   001DB4                     
  4165                           ;LCD.c: 45: void LCD_String(const char *msg);LCD.c: 46: {;LCD.c: 47:     while((*msg) !=
      +                           0) {
  4166   001DB4  EFF0  F00E         	goto	l2411
  4167   001DB8                     l2407:
  4168                           
  4169                           ;LCD.c: 48:         LCD_Char(*msg);
  4170   001DB8  C013  FFF6         	movff	LCD_String@msg,tblptrl
  4171   001DBC  C014  FFF7         	movff	LCD_String@msg+1,tblptrh
  4172   001DC0  6AF8               	clrf	tblptru,c
  4173   001DC2  0E07               	movlw	(high __ramtop+-1)
  4174   001DC4  64F7               	cpfsgt	tblptrh,c
  4175   001DC6  D003               	bra	u1827
  4176   001DC8  0008               	tblrd		*
  4177   001DCA  50F5               	movf	tablat,w,c
  4178   001DCC  D005               	bra	u1820
  4179   001DCE                     u1827:
  4180   001DCE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4181   001DD2  CFF7 FFEA          	movff	tblptrh,fsr0h
  4182   001DD6  50EF               	movf	indf0,w,c
  4183   001DD8                     u1820:
  4184   001DD8  EC38  F00F         	call	_LCD_Char
  4185   001DDC                     
  4186                           ;LCD.c: 49:         msg++;
  4187   001DDC  4A13               	infsnz	LCD_String@msg^0,f,c
  4188   001DDE  2A14               	incf	(LCD_String@msg+1)^0,f,c
  4189   001DE0                     l2411:
  4190                           
  4191                           ;LCD.c: 47:     while((*msg) != 0) {
  4192   001DE0  C013  FFF6         	movff	LCD_String@msg,tblptrl
  4193   001DE4  C014  FFF7         	movff	LCD_String@msg+1,tblptrh
  4194   001DE8  6AF8               	clrf	tblptru,c
  4195   001DEA  0E07               	movlw	(high __ramtop+-1)
  4196   001DEC  64F7               	cpfsgt	tblptrh,c
  4197   001DEE  D003               	bra	u1837
  4198   001DF0  0008               	tblrd		*
  4199   001DF2  50F5               	movf	tablat,w,c
  4200   001DF4  D005               	bra	u1830
  4201   001DF6                     u1837:
  4202   001DF6  CFF6 FFE9          	movff	tblptrl,fsr0l
  4203   001DFA  CFF7 FFEA          	movff	tblptrh,fsr0h
  4204   001DFE  50EF               	movf	indf0,w,c
  4205   001E00                     u1830:
  4206   001E00  0900               	iorlw	0
  4207   001E02  A4D8               	btfss	status,2,c
  4208   001E04  EF06  F00F         	goto	u1841
  4209   001E08  EF08  F00F         	goto	u1840
  4210   001E0C                     u1841:
  4211   001E0C  EFDC  F00E         	goto	l2407
  4212   001E10                     u1840:
  4213   001E10  0012               	return		;funcret
  4214   001E12                     __end_of_LCD_String:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function _LCD_Char *****************
  4218 ;; Defined at:
  4219 ;;		line 30 in file "LCD.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  dat             1    wreg     unsigned char 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  dat             1   17[COMRAM] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0
  4234 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4235 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4236 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4237 ;;Total ram usage:        2 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 4
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_LCD_String
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text20
  4248   001E70                     __ptext20:
  4249                           	callstack 0
  4250   001E70                     _LCD_Char:
  4251                           	callstack 23
  4252                           
  4253                           ;incstack = 0
  4254                           ;LCD_Char@dat stored from wreg
  4255   001E70  6E12               	movwf	LCD_Char@dat^0,c
  4256   001E72                     
  4257                           ;LCD.c: 30: void LCD_Char(unsigned char dat);LCD.c: 31: {;LCD.c: 32:     LATD = (LATD & 
      +                          0x0f) | (0xF0 & dat);
  4258   001E72  C012  F011         	movff	LCD_Char@dat,??_LCD_Char
  4259   001E76  0EF0               	movlw	240
  4260   001E78  1611               	andwf	??_LCD_Char^0,f,c
  4261   001E7A  508C               	movf	140,w,c	;volatile
  4262   001E7C  0B0F               	andlw	15
  4263   001E7E  1011               	iorwf	??_LCD_Char^0,w,c
  4264   001E80  6E8C               	movwf	140,c	;volatile
  4265   001E82                     
  4266                           ;LCD.c: 33:     LATD0 = 1;
  4267   001E82  808C               	bsf	3980,0,c	;volatile
  4268   001E84                     
  4269                           ;LCD.c: 34:     LATD2 = 1;
  4270   001E84  848C               	bsf	3980,2,c	;volatile
  4271   001E86                     
  4272                           ;LCD.c: 35:     __nop();
  4273   001E86  0000               	nop	
  4274   001E88                     
  4275                           ;LCD.c: 36:     LATD2 = 0;
  4276   001E88  948C               	bcf	3980,2,c	;volatile
  4277   001E8A                     
  4278                           ;LCD.c: 37:     _delay((unsigned long)((1)*(8000000/4000.0)));
  4279   001E8A  0E03               	movlw	3
  4280   001E8C  6E11               	movwf	??_LCD_Char^0,c
  4281   001E8E  0E98               	movlw	152
  4282   001E90                     u3227:
  4283   001E90  2EE8               	decfsz	wreg,f,c
  4284   001E92  D7FE               	bra	u3227
  4285   001E94  2E11               	decfsz	??_LCD_Char^0,f,c
  4286   001E96  D7FC               	bra	u3227
  4287   001E98                     
  4288                           ;LCD.c: 38:     LATD = (LATD & 0x0f) | ((dat << 4) & 0xF0);
  4289   001E98  C012  F011         	movff	LCD_Char@dat,??_LCD_Char
  4290   001E9C  3A11               	swapf	??_LCD_Char^0,f,c
  4291   001E9E  0EF0               	movlw	240
  4292   001EA0  1611               	andwf	??_LCD_Char^0,f,c
  4293   001EA2  0EF0               	movlw	240
  4294   001EA4  1611               	andwf	??_LCD_Char^0,f,c
  4295   001EA6  508C               	movf	140,w,c	;volatile
  4296   001EA8  0B0F               	andlw	15
  4297   001EAA  1011               	iorwf	??_LCD_Char^0,w,c
  4298   001EAC  6E8C               	movwf	140,c	;volatile
  4299   001EAE                     
  4300                           ;LCD.c: 39:     LATD2 = 1;
  4301   001EAE  848C               	bsf	3980,2,c	;volatile
  4302   001EB0                     
  4303                           ;LCD.c: 40:     __nop();
  4304   001EB0  0000               	nop	
  4305   001EB2                     
  4306                           ;LCD.c: 41:     LATD2 = 0;
  4307   001EB2  948C               	bcf	3980,2,c	;volatile
  4308                           
  4309                           ;LCD.c: 42:     _delay((unsigned long)((3)*(8000000/4000.0)));
  4310   001EB4  0E08               	movlw	8
  4311   001EB6  6E11               	movwf	??_LCD_Char^0,c
  4312   001EB8  0ECA               	movlw	202
  4313   001EBA                     u3237:
  4314   001EBA  2EE8               	decfsz	wreg,f,c
  4315   001EBC  D7FE               	bra	u3237
  4316   001EBE  2E11               	decfsz	??_LCD_Char^0,f,c
  4317   001EC0  D7FC               	bra	u3237
  4318   001EC2  0012               	return		;funcret
  4319   001EC4                     __end_of_LCD_Char:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function _LCD_Clear *****************
  4323 ;; Defined at:
  4324 ;;		line 64 in file "LCD.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4338 ;;      Params:         0       0       0       0       0       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4340 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4341 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4342 ;;Total ram usage:        1 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 5
  4345 ;; This function calls:
  4346 ;;		_LCD_Command
  4347 ;; This function is called by:
  4348 ;;		_mostrar_temperatura
  4349 ;;		_mostrar_rtc
  4350 ;;		_main
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text21
  4355   00221C                     __ptext21:
  4356                           	callstack 0
  4357   00221C                     _LCD_Clear:
  4358                           	callstack 24
  4359   00221C                     
  4360                           ;LCD.c: 66:     LCD_Command(0x01);
  4361   00221C  0E01               	movlw	1
  4362   00221E  EC62  F00F         	call	_LCD_Command
  4363   002222                     
  4364                           ;LCD.c: 67:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4365   002222  0E06               	movlw	6
  4366   002224  6E13               	movwf	??_LCD_Clear^0,c
  4367   002226  0E30               	movlw	48
  4368   002228                     u3247:
  4369   002228  2EE8               	decfsz	wreg,f,c
  4370   00222A  D7FE               	bra	u3247
  4371   00222C  2E13               	decfsz	??_LCD_Clear^0,f,c
  4372   00222E  D7FC               	bra	u3247
  4373   002230  D000               	nop2	
  4374   002232  0012               	return		;funcret
  4375   002234                     __end_of_LCD_Clear:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _USART_Init *****************
  4379 ;; Defined at:
  4380 ;;		line 6 in file "USART.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  baud_rate       4    0[BANK0 ] long 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  temp            4    4[BANK0 ] float 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4394 ;;      Params:         0       4       0       0       0       0       0       0       0
  4395 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4397 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4398 ;;Total ram usage:        8 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; Hardware stack levels required when called: 5
  4401 ;; This function calls:
  4402 ;;		___fladd
  4403 ;;		___fldiv
  4404 ;;		___fltol
  4405 ;;		___xxtofl
  4406 ;; This function is called by:
  4407 ;;		_main
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text22
  4412   001ABE                     __ptext22:
  4413                           	callstack 0
  4414   001ABE                     _USART_Init:
  4415                           	callstack 25
  4416   001ABE                     
  4417                           ;USART.c: 6: void USART_Init(long baud_rate);USART.c: 7: {;USART.c: 8:     float temp;;U
      +                          SART.c: 9:     TRISC6 = 0;
  4418   001ABE  9C94               	bcf	3988,6,c	;volatile
  4419                           
  4420                           ;USART.c: 10:     TRISC7 = 1;
  4421   001AC0  8E94               	bsf	3988,7,c	;volatile
  4422   001AC2                     
  4423                           ;USART.c: 11:     temp = (((float)(8000000UL/64)/(float)baud_rate)-1);
  4424   001AC2  C060  F011         	movff	USART_Init@baud_rate,___xxtofl@val
  4425   001AC6  C061  F012         	movff	USART_Init@baud_rate+1,___xxtofl@val+1
  4426   001ACA  C062  F013         	movff	USART_Init@baud_rate+2,___xxtofl@val+2
  4427   001ACE  C063  F014         	movff	USART_Init@baud_rate+3,___xxtofl@val+3
  4428   001AD2  0E01               	movlw	1
  4429   001AD4  EC5A  F008         	call	___xxtofl
  4430   001AD8  C011  F023         	movff	?___xxtofl,___fldiv@a
  4431   001ADC  C012  F024         	movff	?___xxtofl+1,___fldiv@a+1
  4432   001AE0  C013  F025         	movff	?___xxtofl+2,___fldiv@a+2
  4433   001AE4  C014  F026         	movff	?___xxtofl+3,___fldiv@a+3
  4434   001AE8  0E00               	movlw	0
  4435   001AEA  6E1F               	movwf	___fldiv@b^0,c
  4436   001AEC  0E24               	movlw	36
  4437   001AEE  6E20               	movwf	(___fldiv@b+1)^0,c
  4438   001AF0  0EF4               	movlw	244
  4439   001AF2  6E21               	movwf	(___fldiv@b+2)^0,c
  4440   001AF4  0E47               	movlw	71
  4441   001AF6  6E22               	movwf	(___fldiv@b+3)^0,c
  4442   001AF8  EC92  F006         	call	___fldiv	;wreg free
  4443   001AFC  C01F  F038         	movff	?___fldiv,___fladd@b
  4444   001B00  C020  F039         	movff	?___fldiv+1,___fladd@b+1
  4445   001B04  C021  F03A         	movff	?___fldiv+2,___fladd@b+2
  4446   001B08  C022  F03B         	movff	?___fldiv+3,___fladd@b+3
  4447   001B0C  0E00               	movlw	0
  4448   001B0E  6E3C               	movwf	___fladd@a^0,c
  4449   001B10  0E00               	movlw	0
  4450   001B12  6E3D               	movwf	(___fladd@a+1)^0,c
  4451   001B14  0E80               	movlw	128
  4452   001B16  6E3E               	movwf	(___fladd@a+2)^0,c
  4453   001B18  0EBF               	movlw	191
  4454   001B1A  6E3F               	movwf	(___fladd@a+3)^0,c
  4455   001B1C  EC37  F004         	call	___fladd	;wreg free
  4456   001B20  C038  F064         	movff	?___fladd,USART_Init@temp
  4457   001B24  C039  F065         	movff	?___fladd+1,USART_Init@temp+1
  4458   001B28  C03A  F066         	movff	?___fladd+2,USART_Init@temp+2
  4459   001B2C  C03B  F067         	movff	?___fladd+3,USART_Init@temp+3
  4460                           
  4461                           ;USART.c: 12:     SPBRG = (int)temp;
  4462   001B30  C064  F011         	movff	USART_Init@temp,___fltol@f1
  4463   001B34  C065  F012         	movff	USART_Init@temp+1,___fltol@f1+1
  4464   001B38  C066  F013         	movff	USART_Init@temp+2,___fltol@f1+2
  4465   001B3C  C067  F014         	movff	USART_Init@temp+3,___fltol@f1+3
  4466   001B40  ECE0  F009         	call	___fltol	;wreg free
  4467   001B44  5011               	movf	?___fltol^0,w,c
  4468   001B46  6EAF               	movwf	175,c	;volatile
  4469   001B48                     
  4470                           ;USART.c: 13:     TXSTA = 0x20;
  4471   001B48  0E20               	movlw	32
  4472   001B4A  6EAC               	movwf	172,c	;volatile
  4473   001B4C                     
  4474                           ;USART.c: 14:     RCSTA = 0x90;
  4475   001B4C  0E90               	movlw	144
  4476   001B4E  6EAB               	movwf	171,c	;volatile
  4477   001B50  0012               	return		;funcret
  4478   001B52                     __end_of_USART_Init:
  4479                           	callstack 0
  4480                           
  4481 ;; *************** function ___xxtofl *****************
  4482 ;; Defined at:
  4483 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  sign            1    wreg     unsigned char 
  4486 ;;  val             4   16[COMRAM] long 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  sign            1   24[COMRAM] unsigned char 
  4489 ;;  arg             4   26[COMRAM] unsigned long 
  4490 ;;  exp             1   25[COMRAM] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  4   16[COMRAM] unsigned char 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4500 ;;      Params:         4       0       0       0       0       0       0       0       0
  4501 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4502 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4503 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4504 ;;Total ram usage:       14 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; Hardware stack levels required when called: 4
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_USART_Init
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text23
  4515   0010B4                     __ptext23:
  4516                           	callstack 0
  4517   0010B4                     ___xxtofl:
  4518                           	callstack 25
  4519                           
  4520                           ;incstack = 0
  4521                           ;___xxtofl@sign stored from wreg
  4522   0010B4  6E19               	movwf	___xxtofl@sign^0,c
  4523   0010B6  5019               	movf	___xxtofl@sign^0,w,c
  4524   0010B8  B4D8               	btfsc	status,2,c
  4525   0010BA  EF61  F008         	goto	u2651
  4526   0010BE  EF63  F008         	goto	u2650
  4527   0010C2                     u2651:
  4528   0010C2  EF85  F008         	goto	l960
  4529   0010C6                     u2650:
  4530   0010C6  BE14               	btfsc	(___xxtofl@val+3)^0,7,c
  4531   0010C8  EF6A  F008         	goto	u2660
  4532   0010CC  EF68  F008         	goto	u2661
  4533   0010D0                     u2661:
  4534   0010D0  EF85  F008         	goto	l960
  4535   0010D4                     u2660:
  4536   0010D4  C011  F015         	movff	___xxtofl@val,??___xxtofl
  4537   0010D8  C012  F016         	movff	___xxtofl@val+1,??___xxtofl+1
  4538   0010DC  C013  F017         	movff	___xxtofl@val+2,??___xxtofl+2
  4539   0010E0  C014  F018         	movff	___xxtofl@val+3,??___xxtofl+3
  4540   0010E4  1E15               	comf	??___xxtofl^0,f,c
  4541   0010E6  1E16               	comf	(??___xxtofl+1)^0,f,c
  4542   0010E8  1E17               	comf	(??___xxtofl+2)^0,f,c
  4543   0010EA  1E18               	comf	(??___xxtofl+3)^0,f,c
  4544   0010EC  2A15               	incf	??___xxtofl^0,f,c
  4545   0010EE  0E00               	movlw	0
  4546   0010F0  2216               	addwfc	(??___xxtofl+1)^0,f,c
  4547   0010F2  2217               	addwfc	(??___xxtofl+2)^0,f,c
  4548   0010F4  2218               	addwfc	(??___xxtofl+3)^0,f,c
  4549   0010F6  C015  F01B         	movff	??___xxtofl,___xxtofl@arg
  4550   0010FA  C016  F01C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4551   0010FE  C017  F01D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4552   001102  C018  F01E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4553   001106  EF8D  F008         	goto	l2939
  4554   00110A                     l960:
  4555   00110A  C011  F01B         	movff	___xxtofl@val,___xxtofl@arg
  4556   00110E  C012  F01C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4557   001112  C013  F01D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4558   001116  C014  F01E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4559   00111A                     l2939:
  4560   00111A  5011               	movf	___xxtofl@val^0,w,c
  4561   00111C  1012               	iorwf	(___xxtofl@val+1)^0,w,c
  4562   00111E  1013               	iorwf	(___xxtofl@val+2)^0,w,c
  4563   001120  1014               	iorwf	(___xxtofl@val+3)^0,w,c
  4564   001122  A4D8               	btfss	status,2,c
  4565   001124  EF96  F008         	goto	u2671
  4566   001128  EF98  F008         	goto	u2670
  4567   00112C                     u2671:
  4568   00112C  EFA2  F008         	goto	l2945
  4569   001130                     u2670:
  4570   001130  0E00               	movlw	0
  4571   001132  6E11               	movwf	?___xxtofl^0,c
  4572   001134  0E00               	movlw	0
  4573   001136  6E12               	movwf	(?___xxtofl+1)^0,c
  4574   001138  0E00               	movlw	0
  4575   00113A  6E13               	movwf	(?___xxtofl+2)^0,c
  4576   00113C  0E00               	movlw	0
  4577   00113E  6E14               	movwf	(?___xxtofl+3)^0,c
  4578   001140  EF33  F009         	goto	l963
  4579   001144                     l2945:
  4580   001144  0E96               	movlw	150
  4581   001146  6E1A               	movwf	___xxtofl@exp^0,c
  4582   001148  EFAC  F008         	goto	l2949
  4583   00114C                     l2947:
  4584   00114C  2A1A               	incf	___xxtofl@exp^0,f,c
  4585   00114E  90D8               	bcf	status,0,c
  4586   001150  321E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4587   001152  321D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4588   001154  321C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4589   001156  321B               	rrcf	___xxtofl@arg^0,f,c
  4590   001158                     l2949:
  4591   001158  0E00               	movlw	0
  4592   00115A  141B               	andwf	___xxtofl@arg^0,w,c
  4593   00115C  6E15               	movwf	??___xxtofl^0,c
  4594   00115E  0E00               	movlw	0
  4595   001160  141C               	andwf	(___xxtofl@arg+1)^0,w,c
  4596   001162  6E16               	movwf	(??___xxtofl+1)^0,c
  4597   001164  0E00               	movlw	0
  4598   001166  141D               	andwf	(___xxtofl@arg+2)^0,w,c
  4599   001168  6E17               	movwf	(??___xxtofl+2)^0,c
  4600   00116A  0EFE               	movlw	254
  4601   00116C  141E               	andwf	(___xxtofl@arg+3)^0,w,c
  4602   00116E  6E18               	movwf	(??___xxtofl+3)^0,c
  4603   001170  5015               	movf	??___xxtofl^0,w,c
  4604   001172  1016               	iorwf	(??___xxtofl+1)^0,w,c
  4605   001174  1017               	iorwf	(??___xxtofl+2)^0,w,c
  4606   001176  1018               	iorwf	(??___xxtofl+3)^0,w,c
  4607   001178  A4D8               	btfss	status,2,c
  4608   00117A  EFC1  F008         	goto	u2681
  4609   00117E  EFC3  F008         	goto	u2680
  4610   001182                     u2681:
  4611   001182  EFA6  F008         	goto	l2947
  4612   001186                     u2680:
  4613   001186  EFD1  F008         	goto	l967
  4614   00118A                     l2951:
  4615   00118A  2A1A               	incf	___xxtofl@exp^0,f,c
  4616   00118C  0E01               	movlw	1
  4617   00118E  261B               	addwf	___xxtofl@arg^0,f,c
  4618   001190  0E00               	movlw	0
  4619   001192  221C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4620   001194  221D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4621   001196  221E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4622   001198  90D8               	bcf	status,0,c
  4623   00119A  321E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4624   00119C  321D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4625   00119E  321C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4626   0011A0  321B               	rrcf	___xxtofl@arg^0,f,c
  4627   0011A2                     l967:
  4628   0011A2  0E00               	movlw	0
  4629   0011A4  141B               	andwf	___xxtofl@arg^0,w,c
  4630   0011A6  6E15               	movwf	??___xxtofl^0,c
  4631   0011A8  0E00               	movlw	0
  4632   0011AA  141C               	andwf	(___xxtofl@arg+1)^0,w,c
  4633   0011AC  6E16               	movwf	(??___xxtofl+1)^0,c
  4634   0011AE  0E00               	movlw	0
  4635   0011B0  141D               	andwf	(___xxtofl@arg+2)^0,w,c
  4636   0011B2  6E17               	movwf	(??___xxtofl+2)^0,c
  4637   0011B4  0EFF               	movlw	255
  4638   0011B6  141E               	andwf	(___xxtofl@arg+3)^0,w,c
  4639   0011B8  6E18               	movwf	(??___xxtofl+3)^0,c
  4640   0011BA  5015               	movf	??___xxtofl^0,w,c
  4641   0011BC  1016               	iorwf	(??___xxtofl+1)^0,w,c
  4642   0011BE  1017               	iorwf	(??___xxtofl+2)^0,w,c
  4643   0011C0  1018               	iorwf	(??___xxtofl+3)^0,w,c
  4644   0011C2  A4D8               	btfss	status,2,c
  4645   0011C4  EFE6  F008         	goto	u2691
  4646   0011C8  EFE8  F008         	goto	u2690
  4647   0011CC                     u2691:
  4648   0011CC  EFC5  F008         	goto	l2951
  4649   0011D0                     u2690:
  4650   0011D0  EFF0  F008         	goto	l2959
  4651   0011D4                     l2957:
  4652   0011D4  061A               	decf	___xxtofl@exp^0,f,c
  4653   0011D6  90D8               	bcf	status,0,c
  4654   0011D8  361B               	rlcf	___xxtofl@arg^0,f,c
  4655   0011DA  361C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4656   0011DC  361D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4657   0011DE  361E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4658   0011E0                     l2959:
  4659   0011E0  BE1D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4660   0011E2  EFF5  F008         	goto	u2701
  4661   0011E6  EFF7  F008         	goto	u2700
  4662   0011EA                     u2701:
  4663   0011EA  EFFF  F008         	goto	l974
  4664   0011EE                     u2700:
  4665   0011EE  0E02               	movlw	2
  4666   0011F0  601A               	cpfslt	___xxtofl@exp^0,c
  4667   0011F2  EFFD  F008         	goto	u2711
  4668   0011F6  EFFF  F008         	goto	u2710
  4669   0011FA                     u2711:
  4670   0011FA  EFEA  F008         	goto	l2957
  4671   0011FE                     u2710:
  4672   0011FE                     l974:
  4673   0011FE  B01A               	btfsc	___xxtofl@exp^0,0,c
  4674   001200  EF04  F009         	goto	u2721
  4675   001204  EF06  F009         	goto	u2720
  4676   001208                     u2721:
  4677   001208  EF07  F009         	goto	l2965
  4678   00120C                     u2720:
  4679   00120C  9E1D               	bcf	(___xxtofl@arg+2)^0,7,c
  4680   00120E                     l2965:
  4681   00120E  90D8               	bcf	status,0,c
  4682   001210  321A               	rrcf	___xxtofl@exp^0,f,c
  4683   001212  C01A  F015         	movff	___xxtofl@exp,??___xxtofl
  4684   001216  6A16               	clrf	(??___xxtofl+1)^0,c
  4685   001218  6A17               	clrf	(??___xxtofl+2)^0,c
  4686   00121A  6A18               	clrf	(??___xxtofl+3)^0,c
  4687   00121C  C015  F018         	movff	??___xxtofl,??___xxtofl+3
  4688   001220  6A17               	clrf	(??___xxtofl+2)^0,c
  4689   001222  6A16               	clrf	(??___xxtofl+1)^0,c
  4690   001224  6A15               	clrf	??___xxtofl^0,c
  4691   001226  5015               	movf	??___xxtofl^0,w,c
  4692   001228  121B               	iorwf	___xxtofl@arg^0,f,c
  4693   00122A  5016               	movf	(??___xxtofl+1)^0,w,c
  4694   00122C  121C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4695   00122E  5017               	movf	(??___xxtofl+2)^0,w,c
  4696   001230  121D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4697   001232  5018               	movf	(??___xxtofl+3)^0,w,c
  4698   001234  121E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4699   001236  5019               	movf	___xxtofl@sign^0,w,c
  4700   001238  B4D8               	btfsc	status,2,c
  4701   00123A  EF21  F009         	goto	u2731
  4702   00123E  EF23  F009         	goto	u2730
  4703   001242                     u2731:
  4704   001242  EF2B  F009         	goto	l2975
  4705   001246                     u2730:
  4706   001246  BE14               	btfsc	(___xxtofl@val+3)^0,7,c
  4707   001248  EF2A  F009         	goto	u2740
  4708   00124C  EF28  F009         	goto	u2741
  4709   001250                     u2741:
  4710   001250  EF2B  F009         	goto	l2975
  4711   001254                     u2740:
  4712   001254  8E1E               	bsf	(___xxtofl@arg+3)^0,7,c
  4713   001256                     l2975:
  4714   001256  C01B  F011         	movff	___xxtofl@arg,?___xxtofl
  4715   00125A  C01C  F012         	movff	___xxtofl@arg+1,?___xxtofl+1
  4716   00125E  C01D  F013         	movff	___xxtofl@arg+2,?___xxtofl+2
  4717   001262  C01E  F014         	movff	___xxtofl@arg+3,?___xxtofl+3
  4718   001266                     l963:
  4719   001266  0012               	return		;funcret
  4720   001268                     __end_of___xxtofl:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function ___fltol *****************
  4724 ;; Defined at:
  4725 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  f1              4   16[COMRAM] unsigned char 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  exp1            1   25[COMRAM] unsigned char 
  4730 ;;  sign1           1   24[COMRAM] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  4   16[COMRAM] long 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4740 ;;      Params:         4       0       0       0       0       0       0       0       0
  4741 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4742 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4743 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4744 ;;Total ram usage:       10 bytes
  4745 ;; Hardware stack levels used: 1
  4746 ;; Hardware stack levels required when called: 4
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_USART_Init
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           	psect	text24
  4755   0013C0                     __ptext24:
  4756                           	callstack 0
  4757   0013C0                     ___fltol:
  4758                           	callstack 25
  4759   0013C0  3413               	rlcf	(___fltol@f1+2)^0,w,c
  4760   0013C2  3414               	rlcf	(___fltol@f1+3)^0,w,c
  4761   0013C4  6E1A               	movwf	___fltol@exp1^0,c
  4762   0013C6  501A               	movf	___fltol@exp1^0,w,c
  4763   0013C8  A4D8               	btfss	status,2,c
  4764   0013CA  EFE9  F009         	goto	u2581
  4765   0013CE  EFEB  F009         	goto	u2580
  4766   0013D2                     u2581:
  4767   0013D2  EFF5  F009         	goto	l2895
  4768   0013D6                     u2580:
  4769   0013D6                     l2891:
  4770   0013D6  0E00               	movlw	0
  4771   0013D8  6E11               	movwf	?___fltol^0,c
  4772   0013DA  0E00               	movlw	0
  4773   0013DC  6E12               	movwf	(?___fltol+1)^0,c
  4774   0013DE  0E00               	movlw	0
  4775   0013E0  6E13               	movwf	(?___fltol+2)^0,c
  4776   0013E2  0E00               	movlw	0
  4777   0013E4  6E14               	movwf	(?___fltol+3)^0,c
  4778   0013E6  EF62  F00A         	goto	l602
  4779   0013EA                     l2895:
  4780   0013EA  C011  F015         	movff	___fltol@f1,??___fltol
  4781   0013EE  C012  F016         	movff	___fltol@f1+1,??___fltol+1
  4782   0013F2  C013  F017         	movff	___fltol@f1+2,??___fltol+2
  4783   0013F6  C014  F018         	movff	___fltol@f1+3,??___fltol+3
  4784   0013FA  0E20               	movlw	32
  4785   0013FC  EF05  F00A         	goto	u2590
  4786   001400                     u2595:
  4787   001400  90D8               	bcf	status,0,c
  4788   001402  3218               	rrcf	(??___fltol+3)^0,f,c
  4789   001404  3217               	rrcf	(??___fltol+2)^0,f,c
  4790   001406  3216               	rrcf	(??___fltol+1)^0,f,c
  4791   001408  3215               	rrcf	??___fltol^0,f,c
  4792   00140A                     u2590:
  4793   00140A  2EE8               	decfsz	wreg,f,c
  4794   00140C  EF00  F00A         	goto	u2595
  4795   001410  5015               	movf	??___fltol^0,w,c
  4796   001412  6E19               	movwf	___fltol@sign1^0,c
  4797   001414  8E13               	bsf	(___fltol@f1+2)^0,7,c
  4798   001416  0EFF               	movlw	255
  4799   001418  1611               	andwf	___fltol@f1^0,f,c
  4800   00141A  0EFF               	movlw	255
  4801   00141C  1612               	andwf	(___fltol@f1+1)^0,f,c
  4802   00141E  0EFF               	movlw	255
  4803   001420  1613               	andwf	(___fltol@f1+2)^0,f,c
  4804   001422  0E00               	movlw	0
  4805   001424  1614               	andwf	(___fltol@f1+3)^0,f,c
  4806   001426  0E96               	movlw	150
  4807   001428  5E1A               	subwf	___fltol@exp1^0,f,c
  4808   00142A  BE1A               	btfsc	___fltol@exp1^0,7,c
  4809   00142C  EF1C  F00A         	goto	u2600
  4810   001430  EF1A  F00A         	goto	u2601
  4811   001434                     u2601:
  4812   001434  EF32  F00A         	goto	l2915
  4813   001438                     u2600:
  4814   001438  501A               	movf	___fltol@exp1^0,w,c
  4815   00143A  0A80               	xorlw	128
  4816   00143C  0F97               	addlw	151
  4817   00143E  B0D8               	btfsc	status,0,c
  4818   001440  EF24  F00A         	goto	u2611
  4819   001444  EF26  F00A         	goto	u2610
  4820   001448                     u2611:
  4821   001448  EF28  F00A         	goto	l2911
  4822   00144C                     u2610:
  4823   00144C  EFEB  F009         	goto	l2891
  4824   001450                     l2911:
  4825   001450  90D8               	bcf	status,0,c
  4826   001452  3214               	rrcf	(___fltol@f1+3)^0,f,c
  4827   001454  3213               	rrcf	(___fltol@f1+2)^0,f,c
  4828   001456  3212               	rrcf	(___fltol@f1+1)^0,f,c
  4829   001458  3211               	rrcf	___fltol@f1^0,f,c
  4830   00145A  3E1A               	incfsz	___fltol@exp1^0,f,c
  4831   00145C  EF28  F00A         	goto	l2911
  4832   001460  EF4A  F00A         	goto	l2925
  4833   001464                     l2915:
  4834   001464  0E1F               	movlw	31
  4835   001466  641A               	cpfsgt	___fltol@exp1^0,c
  4836   001468  EF38  F00A         	goto	u2621
  4837   00146C  EF3A  F00A         	goto	u2620
  4838   001470                     u2621:
  4839   001470  EF42  F00A         	goto	l2923
  4840   001474                     u2620:
  4841   001474  EFEB  F009         	goto	l2891
  4842   001478                     l2921:
  4843   001478  90D8               	bcf	status,0,c
  4844   00147A  3611               	rlcf	___fltol@f1^0,f,c
  4845   00147C  3612               	rlcf	(___fltol@f1+1)^0,f,c
  4846   00147E  3613               	rlcf	(___fltol@f1+2)^0,f,c
  4847   001480  3614               	rlcf	(___fltol@f1+3)^0,f,c
  4848   001482  061A               	decf	___fltol@exp1^0,f,c
  4849   001484                     l2923:
  4850   001484  501A               	movf	___fltol@exp1^0,w,c
  4851   001486  A4D8               	btfss	status,2,c
  4852   001488  EF48  F00A         	goto	u2631
  4853   00148C  EF4A  F00A         	goto	u2630
  4854   001490                     u2631:
  4855   001490  EF3C  F00A         	goto	l2921
  4856   001494                     u2630:
  4857   001494                     l2925:
  4858   001494  5019               	movf	___fltol@sign1^0,w,c
  4859   001496  B4D8               	btfsc	status,2,c
  4860   001498  EF50  F00A         	goto	u2641
  4861   00149C  EF52  F00A         	goto	u2640
  4862   0014A0                     u2641:
  4863   0014A0  EF5A  F00A         	goto	l2929
  4864   0014A4                     u2640:
  4865   0014A4  1E14               	comf	(___fltol@f1+3)^0,f,c
  4866   0014A6  1E13               	comf	(___fltol@f1+2)^0,f,c
  4867   0014A8  1E12               	comf	(___fltol@f1+1)^0,f,c
  4868   0014AA  6C11               	negf	___fltol@f1^0,c
  4869   0014AC  0E00               	movlw	0
  4870   0014AE  2212               	addwfc	(___fltol@f1+1)^0,f,c
  4871   0014B0  2213               	addwfc	(___fltol@f1+2)^0,f,c
  4872   0014B2  2214               	addwfc	(___fltol@f1+3)^0,f,c
  4873   0014B4                     l2929:
  4874   0014B4  C011  F011         	movff	___fltol@f1,?___fltol
  4875   0014B8  C012  F012         	movff	___fltol@f1+1,?___fltol+1
  4876   0014BC  C013  F013         	movff	___fltol@f1+2,?___fltol+2
  4877   0014C0  C014  F014         	movff	___fltol@f1+3,?___fltol+3
  4878   0014C4                     l602:
  4879   0014C4  0012               	return		;funcret
  4880   0014C6                     __end_of___fltol:
  4881                           	callstack 0
  4882                           
  4883 ;; *************** function ___fldiv *****************
  4884 ;; Defined at:
  4885 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  b               4   30[COMRAM] long 
  4888 ;;  a               4   34[COMRAM] long 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  grs             4   49[COMRAM] unsigned long 
  4891 ;;  rem             4   42[COMRAM] unsigned long 
  4892 ;;  new_exp         2   47[COMRAM] short 
  4893 ;;  aexp            1   54[COMRAM] unsigned char 
  4894 ;;  bexp            1   53[COMRAM] unsigned char 
  4895 ;;  sign            1   46[COMRAM] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  4   30[COMRAM] unsigned char 
  4898 ;; Registers used:
  4899 ;;		wreg, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4905 ;;      Params:         8       0       0       0       0       0       0       0       0
  4906 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4907 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4908 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4909 ;;Total ram usage:       25 bytes
  4910 ;; Hardware stack levels used: 1
  4911 ;; Hardware stack levels required when called: 4
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_USART_Init
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text25
  4920   000D24                     __ptext25:
  4921                           	callstack 0
  4922   000D24                     ___fldiv:
  4923                           	callstack 25
  4924   000D24  5022               	movf	(___fldiv@b+3)^0,w,c
  4925   000D26  0B80               	andlw	128
  4926   000D28  6E2F               	movwf	___fldiv@sign^0,c
  4927   000D2A  5022               	movf	(___fldiv@b+3)^0,w,c
  4928   000D2C  2422               	addwf	(___fldiv@b+3)^0,w,c
  4929   000D2E  6E36               	movwf	___fldiv@bexp^0,c
  4930   000D30  AE21               	btfss	(___fldiv@b+2)^0,7,c
  4931   000D32  EF9D  F006         	goto	u2351
  4932   000D36  EF9F  F006         	goto	u2350
  4933   000D3A                     u2351:
  4934   000D3A  EFA0  F006         	goto	l2759
  4935   000D3E                     u2350:
  4936   000D3E  8036               	bsf	___fldiv@bexp^0,0,c
  4937   000D40                     l2759:
  4938   000D40  5036               	movf	___fldiv@bexp^0,w,c
  4939   000D42  B4D8               	btfsc	status,2,c
  4940   000D44  EFA6  F006         	goto	u2361
  4941   000D48  EFA8  F006         	goto	u2360
  4942   000D4C                     u2361:
  4943   000D4C  EFBC  F006         	goto	l2769
  4944   000D50                     u2360:
  4945   000D50  2836               	incf	___fldiv@bexp^0,w,c
  4946   000D52  A4D8               	btfss	status,2,c
  4947   000D54  EFAE  F006         	goto	u2371
  4948   000D58  EFB0  F006         	goto	u2370
  4949   000D5C                     u2371:
  4950   000D5C  EFB8  F006         	goto	l2765
  4951   000D60                     u2370:
  4952   000D60  0E00               	movlw	0
  4953   000D62  6E1F               	movwf	___fldiv@b^0,c
  4954   000D64  0E00               	movlw	0
  4955   000D66  6E20               	movwf	(___fldiv@b+1)^0,c
  4956   000D68  0E00               	movlw	0
  4957   000D6A  6E21               	movwf	(___fldiv@b+2)^0,c
  4958   000D6C  0E00               	movlw	0
  4959   000D6E  6E22               	movwf	(___fldiv@b+3)^0,c
  4960   000D70                     l2765:
  4961   000D70  8E21               	bsf	(___fldiv@b+2)^0,7,c
  4962   000D72  6A22               	clrf	(___fldiv@b+3)^0,c
  4963   000D74  EFC4  F006         	goto	l2771
  4964   000D78                     l2769:
  4965   000D78  0E00               	movlw	0
  4966   000D7A  6E1F               	movwf	___fldiv@b^0,c
  4967   000D7C  0E00               	movlw	0
  4968   000D7E  6E20               	movwf	(___fldiv@b+1)^0,c
  4969   000D80  0E00               	movlw	0
  4970   000D82  6E21               	movwf	(___fldiv@b+2)^0,c
  4971   000D84  0E00               	movlw	0
  4972   000D86  6E22               	movwf	(___fldiv@b+3)^0,c
  4973   000D88                     l2771:
  4974   000D88  5026               	movf	(___fldiv@a+3)^0,w,c
  4975   000D8A  0B80               	andlw	128
  4976   000D8C  1A2F               	xorwf	___fldiv@sign^0,f,c
  4977   000D8E  5026               	movf	(___fldiv@a+3)^0,w,c
  4978   000D90  2426               	addwf	(___fldiv@a+3)^0,w,c
  4979   000D92  6E37               	movwf	___fldiv@aexp^0,c
  4980   000D94  AE25               	btfss	(___fldiv@a+2)^0,7,c
  4981   000D96  EFCF  F006         	goto	u2381
  4982   000D9A  EFD1  F006         	goto	u2380
  4983   000D9E                     u2381:
  4984   000D9E  EFD2  F006         	goto	l2779
  4985   000DA2                     u2380:
  4986   000DA2  8037               	bsf	___fldiv@aexp^0,0,c
  4987   000DA4                     l2779:
  4988   000DA4  5037               	movf	___fldiv@aexp^0,w,c
  4989   000DA6  B4D8               	btfsc	status,2,c
  4990   000DA8  EFD8  F006         	goto	u2391
  4991   000DAC  EFDA  F006         	goto	u2390
  4992   000DB0                     u2391:
  4993   000DB0  EFEE  F006         	goto	l2789
  4994   000DB4                     u2390:
  4995   000DB4  2837               	incf	___fldiv@aexp^0,w,c
  4996   000DB6  A4D8               	btfss	status,2,c
  4997   000DB8  EFE0  F006         	goto	u2401
  4998   000DBC  EFE2  F006         	goto	u2400
  4999   000DC0                     u2401:
  5000   000DC0  EFEA  F006         	goto	l2785
  5001   000DC4                     u2400:
  5002   000DC4  0E00               	movlw	0
  5003   000DC6  6E23               	movwf	___fldiv@a^0,c
  5004   000DC8  0E00               	movlw	0
  5005   000DCA  6E24               	movwf	(___fldiv@a+1)^0,c
  5006   000DCC  0E00               	movlw	0
  5007   000DCE  6E25               	movwf	(___fldiv@a+2)^0,c
  5008   000DD0  0E00               	movlw	0
  5009   000DD2  6E26               	movwf	(___fldiv@a+3)^0,c
  5010   000DD4                     l2785:
  5011   000DD4  8E25               	bsf	(___fldiv@a+2)^0,7,c
  5012   000DD6  6A26               	clrf	(___fldiv@a+3)^0,c
  5013   000DD8  EFF6  F006         	goto	l2791
  5014   000DDC                     l2789:
  5015   000DDC  0E00               	movlw	0
  5016   000DDE  6E23               	movwf	___fldiv@a^0,c
  5017   000DE0  0E00               	movlw	0
  5018   000DE2  6E24               	movwf	(___fldiv@a+1)^0,c
  5019   000DE4  0E00               	movlw	0
  5020   000DE6  6E25               	movwf	(___fldiv@a+2)^0,c
  5021   000DE8  0E00               	movlw	0
  5022   000DEA  6E26               	movwf	(___fldiv@a+3)^0,c
  5023   000DEC                     l2791:
  5024   000DEC  5023               	movf	___fldiv@a^0,w,c
  5025   000DEE  1024               	iorwf	(___fldiv@a+1)^0,w,c
  5026   000DF0  1025               	iorwf	(___fldiv@a+2)^0,w,c
  5027   000DF2  1026               	iorwf	(___fldiv@a+3)^0,w,c
  5028   000DF4  A4D8               	btfss	status,2,c
  5029   000DF6  EFFF  F006         	goto	u2411
  5030   000DFA  EF01  F007         	goto	u2410
  5031   000DFE                     u2411:
  5032   000DFE  EF19  F007         	goto	l2803
  5033   000E02                     u2410:
  5034   000E02  0E00               	movlw	0
  5035   000E04  6E1F               	movwf	___fldiv@b^0,c
  5036   000E06  0E00               	movlw	0
  5037   000E08  6E20               	movwf	(___fldiv@b+1)^0,c
  5038   000E0A  0E00               	movlw	0
  5039   000E0C  6E21               	movwf	(___fldiv@b+2)^0,c
  5040   000E0E  0E00               	movlw	0
  5041   000E10  6E22               	movwf	(___fldiv@b+3)^0,c
  5042   000E12  0E80               	movlw	128
  5043   000E14  1221               	iorwf	(___fldiv@b+2)^0,f,c
  5044   000E16  0E7F               	movlw	127
  5045   000E18  1222               	iorwf	(___fldiv@b+3)^0,f,c
  5046   000E1A                     l2797:
  5047   000E1A  502F               	movf	___fldiv@sign^0,w,c
  5048   000E1C  1222               	iorwf	(___fldiv@b+3)^0,f,c
  5049   000E1E  C01F  F01F         	movff	___fldiv@b,?___fldiv
  5050   000E22  C020  F020         	movff	___fldiv@b+1,?___fldiv+1
  5051   000E26  C021  F021         	movff	___fldiv@b+2,?___fldiv+2
  5052   000E2A  C022  F022         	movff	___fldiv@b+3,?___fldiv+3
  5053   000E2E  EF59  F008         	goto	l887
  5054   000E32                     l2803:
  5055   000E32  5036               	movf	___fldiv@bexp^0,w,c
  5056   000E34  A4D8               	btfss	status,2,c
  5057   000E36  EF1F  F007         	goto	u2421
  5058   000E3A  EF21  F007         	goto	u2420
  5059   000E3E                     u2421:
  5060   000E3E  EF2B  F007         	goto	l2811
  5061   000E42                     u2420:
  5062   000E42  0E00               	movlw	0
  5063   000E44  6E1F               	movwf	?___fldiv^0,c
  5064   000E46  0E00               	movlw	0
  5065   000E48  6E20               	movwf	(?___fldiv+1)^0,c
  5066   000E4A  0E00               	movlw	0
  5067   000E4C  6E21               	movwf	(?___fldiv+2)^0,c
  5068   000E4E  0E00               	movlw	0
  5069   000E50  6E22               	movwf	(?___fldiv+3)^0,c
  5070   000E52  EF59  F008         	goto	l887
  5071   000E56                     l2811:
  5072   000E56  5037               	movf	___fldiv@aexp^0,w,c
  5073   000E58  C036  F027         	movff	___fldiv@bexp,??___fldiv
  5074   000E5C  6A28               	clrf	(??___fldiv+1)^0,c
  5075   000E5E  5E27               	subwf	??___fldiv^0,f,c
  5076   000E60  0E00               	movlw	0
  5077   000E62  5A28               	subwfb	(??___fldiv+1)^0,f,c
  5078   000E64  0E7F               	movlw	127
  5079   000E66  2427               	addwf	??___fldiv^0,w,c
  5080   000E68  6E30               	movwf	___fldiv@new_exp^0,c
  5081   000E6A  0E00               	movlw	0
  5082   000E6C  2028               	addwfc	(??___fldiv+1)^0,w,c
  5083   000E6E  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  5084   000E70  C01F  F02B         	movff	___fldiv@b,___fldiv@rem
  5085   000E74  C020  F02C         	movff	___fldiv@b+1,___fldiv@rem+1
  5086   000E78  C021  F02D         	movff	___fldiv@b+2,___fldiv@rem+2
  5087   000E7C  C022  F02E         	movff	___fldiv@b+3,___fldiv@rem+3
  5088   000E80  0E00               	movlw	0
  5089   000E82  6E1F               	movwf	___fldiv@b^0,c
  5090   000E84  0E00               	movlw	0
  5091   000E86  6E20               	movwf	(___fldiv@b+1)^0,c
  5092   000E88  0E00               	movlw	0
  5093   000E8A  6E21               	movwf	(___fldiv@b+2)^0,c
  5094   000E8C  0E00               	movlw	0
  5095   000E8E  6E22               	movwf	(___fldiv@b+3)^0,c
  5096   000E90  0E00               	movlw	0
  5097   000E92  6E32               	movwf	___fldiv@grs^0,c
  5098   000E94  0E00               	movlw	0
  5099   000E96  6E33               	movwf	(___fldiv@grs+1)^0,c
  5100   000E98  0E00               	movlw	0
  5101   000E9A  6E34               	movwf	(___fldiv@grs+2)^0,c
  5102   000E9C  0E00               	movlw	0
  5103   000E9E  6E35               	movwf	(___fldiv@grs+3)^0,c
  5104   000EA0  6A37               	clrf	___fldiv@aexp^0,c
  5105   000EA2  EF8B  F007         	goto	l889
  5106   000EA6                     l2821:
  5107   000EA6  5037               	movf	___fldiv@aexp^0,w,c
  5108   000EA8  B4D8               	btfsc	status,2,c
  5109   000EAA  EF59  F007         	goto	u2431
  5110   000EAE  EF5B  F007         	goto	u2430
  5111   000EB2                     u2431:
  5112   000EB2  EF72  F007         	goto	l2829
  5113   000EB6                     u2430:
  5114   000EB6  90D8               	bcf	status,0,c
  5115   000EB8  362B               	rlcf	___fldiv@rem^0,f,c
  5116   000EBA  362C               	rlcf	(___fldiv@rem+1)^0,f,c
  5117   000EBC  362D               	rlcf	(___fldiv@rem+2)^0,f,c
  5118   000EBE  362E               	rlcf	(___fldiv@rem+3)^0,f,c
  5119   000EC0  90D8               	bcf	status,0,c
  5120   000EC2  361F               	rlcf	___fldiv@b^0,f,c
  5121   000EC4  3620               	rlcf	(___fldiv@b+1)^0,f,c
  5122   000EC6  3621               	rlcf	(___fldiv@b+2)^0,f,c
  5123   000EC8  3622               	rlcf	(___fldiv@b+3)^0,f,c
  5124   000ECA  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  5125   000ECC  EF6A  F007         	goto	u2441
  5126   000ED0  EF6C  F007         	goto	u2440
  5127   000ED4                     u2441:
  5128   000ED4  EF6D  F007         	goto	l892
  5129   000ED8                     u2440:
  5130   000ED8  801F               	bsf	___fldiv@b^0,0,c
  5131   000EDA                     l892:
  5132   000EDA  90D8               	bcf	status,0,c
  5133   000EDC  3632               	rlcf	___fldiv@grs^0,f,c
  5134   000EDE  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  5135   000EE0  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  5136   000EE2  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  5137   000EE4                     l2829:
  5138   000EE4  5023               	movf	___fldiv@a^0,w,c
  5139   000EE6  5C2B               	subwf	___fldiv@rem^0,w,c
  5140   000EE8  5024               	movf	(___fldiv@a+1)^0,w,c
  5141   000EEA  582C               	subwfb	(___fldiv@rem+1)^0,w,c
  5142   000EEC  5025               	movf	(___fldiv@a+2)^0,w,c
  5143   000EEE  582D               	subwfb	(___fldiv@rem+2)^0,w,c
  5144   000EF0  5026               	movf	(___fldiv@a+3)^0,w,c
  5145   000EF2  582E               	subwfb	(___fldiv@rem+3)^0,w,c
  5146   000EF4  A0D8               	btfss	status,0,c
  5147   000EF6  EF7F  F007         	goto	u2451
  5148   000EFA  EF81  F007         	goto	u2450
  5149   000EFE                     u2451:
  5150   000EFE  EF8A  F007         	goto	l2835
  5151   000F02                     u2450:
  5152   000F02  8C35               	bsf	(___fldiv@grs+3)^0,6,c
  5153   000F04  5023               	movf	___fldiv@a^0,w,c
  5154   000F06  5E2B               	subwf	___fldiv@rem^0,f,c
  5155   000F08  5024               	movf	(___fldiv@a+1)^0,w,c
  5156   000F0A  5A2C               	subwfb	(___fldiv@rem+1)^0,f,c
  5157   000F0C  5025               	movf	(___fldiv@a+2)^0,w,c
  5158   000F0E  5A2D               	subwfb	(___fldiv@rem+2)^0,f,c
  5159   000F10  5026               	movf	(___fldiv@a+3)^0,w,c
  5160   000F12  5A2E               	subwfb	(___fldiv@rem+3)^0,f,c
  5161   000F14                     l2835:
  5162   000F14  2A37               	incf	___fldiv@aexp^0,f,c
  5163   000F16                     l889:
  5164   000F16  0E19               	movlw	25
  5165   000F18  6437               	cpfsgt	___fldiv@aexp^0,c
  5166   000F1A  EF91  F007         	goto	u2461
  5167   000F1E  EF93  F007         	goto	u2460
  5168   000F22                     u2461:
  5169   000F22  EF53  F007         	goto	l2821
  5170   000F26                     u2460:
  5171   000F26  502B               	movf	___fldiv@rem^0,w,c
  5172   000F28  102C               	iorwf	(___fldiv@rem+1)^0,w,c
  5173   000F2A  102D               	iorwf	(___fldiv@rem+2)^0,w,c
  5174   000F2C  102E               	iorwf	(___fldiv@rem+3)^0,w,c
  5175   000F2E  B4D8               	btfsc	status,2,c
  5176   000F30  EF9C  F007         	goto	u2471
  5177   000F34  EF9E  F007         	goto	u2470
  5178   000F38                     u2471:
  5179   000F38  EFB6  F007         	goto	l2847
  5180   000F3C                     u2470:
  5181   000F3C  8032               	bsf	___fldiv@grs^0,0,c
  5182   000F3E  EFB6  F007         	goto	l2847
  5183   000F42                     l2841:
  5184   000F42  90D8               	bcf	status,0,c
  5185   000F44  361F               	rlcf	___fldiv@b^0,f,c
  5186   000F46  3620               	rlcf	(___fldiv@b+1)^0,f,c
  5187   000F48  3621               	rlcf	(___fldiv@b+2)^0,f,c
  5188   000F4A  3622               	rlcf	(___fldiv@b+3)^0,f,c
  5189   000F4C  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  5190   000F4E  EFAB  F007         	goto	u2481
  5191   000F52  EFAD  F007         	goto	u2480
  5192   000F56                     u2481:
  5193   000F56  EFAE  F007         	goto	l898
  5194   000F5A                     u2480:
  5195   000F5A  801F               	bsf	___fldiv@b^0,0,c
  5196   000F5C                     l898:
  5197   000F5C  90D8               	bcf	status,0,c
  5198   000F5E  3632               	rlcf	___fldiv@grs^0,f,c
  5199   000F60  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  5200   000F62  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  5201   000F64  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  5202   000F66  0630               	decf	___fldiv@new_exp^0,f,c
  5203   000F68  A0D8               	btfss	status,0,c
  5204   000F6A  0631               	decf	(___fldiv@new_exp+1)^0,f,c
  5205   000F6C                     l2847:
  5206   000F6C  AE21               	btfss	(___fldiv@b+2)^0,7,c
  5207   000F6E  EFBB  F007         	goto	u2491
  5208   000F72  EFBD  F007         	goto	u2490
  5209   000F76                     u2491:
  5210   000F76  EFA1  F007         	goto	l2841
  5211   000F7A                     u2490:
  5212   000F7A  6A37               	clrf	___fldiv@aexp^0,c
  5213   000F7C  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  5214   000F7E  EFC3  F007         	goto	u2501
  5215   000F82  EFC5  F007         	goto	u2500
  5216   000F86                     u2501:
  5217   000F86  EFE9  F007         	goto	l900
  5218   000F8A                     u2500:
  5219   000F8A  0EFF               	movlw	255
  5220   000F8C  1432               	andwf	___fldiv@grs^0,w,c
  5221   000F8E  6E27               	movwf	??___fldiv^0,c
  5222   000F90  0EFF               	movlw	255
  5223   000F92  1433               	andwf	(___fldiv@grs+1)^0,w,c
  5224   000F94  6E28               	movwf	(??___fldiv+1)^0,c
  5225   000F96  0EFF               	movlw	255
  5226   000F98  1434               	andwf	(___fldiv@grs+2)^0,w,c
  5227   000F9A  6E29               	movwf	(??___fldiv+2)^0,c
  5228   000F9C  0E7F               	movlw	127
  5229   000F9E  1435               	andwf	(___fldiv@grs+3)^0,w,c
  5230   000FA0  6E2A               	movwf	(??___fldiv+3)^0,c
  5231   000FA2  5027               	movf	??___fldiv^0,w,c
  5232   000FA4  1028               	iorwf	(??___fldiv+1)^0,w,c
  5233   000FA6  1029               	iorwf	(??___fldiv+2)^0,w,c
  5234   000FA8  102A               	iorwf	(??___fldiv+3)^0,w,c
  5235   000FAA  B4D8               	btfsc	status,2,c
  5236   000FAC  EFDA  F007         	goto	u2511
  5237   000FB0  EFDC  F007         	goto	u2510
  5238   000FB4                     u2511:
  5239   000FB4  EFE0  F007         	goto	l901
  5240   000FB8                     u2510:
  5241   000FB8                     l2851:
  5242   000FB8  0E01               	movlw	1
  5243   000FBA  6E37               	movwf	___fldiv@aexp^0,c
  5244   000FBC  EFE9  F007         	goto	l900
  5245   000FC0                     l901:
  5246   000FC0  A01F               	btfss	___fldiv@b^0,0,c
  5247   000FC2  EFE5  F007         	goto	u2521
  5248   000FC6  EFE7  F007         	goto	u2520
  5249   000FCA                     u2521:
  5250   000FCA  EFE9  F007         	goto	l900
  5251   000FCE                     u2520:
  5252   000FCE  EFDC  F007         	goto	l2851
  5253   000FD2                     l900:
  5254   000FD2  5037               	movf	___fldiv@aexp^0,w,c
  5255   000FD4  B4D8               	btfsc	status,2,c
  5256   000FD6  EFEF  F007         	goto	u2531
  5257   000FDA  EFF1  F007         	goto	u2530
  5258   000FDE                     u2531:
  5259   000FDE  EF15  F008         	goto	l2863
  5260   000FE2                     u2530:
  5261   000FE2  0E01               	movlw	1
  5262   000FE4  261F               	addwf	___fldiv@b^0,f,c
  5263   000FE6  0E00               	movlw	0
  5264   000FE8  2220               	addwfc	(___fldiv@b+1)^0,f,c
  5265   000FEA  2221               	addwfc	(___fldiv@b+2)^0,f,c
  5266   000FEC  2222               	addwfc	(___fldiv@b+3)^0,f,c
  5267   000FEE  A022               	btfss	(___fldiv@b+3)^0,0,c
  5268   000FF0  EFFC  F007         	goto	u2541
  5269   000FF4  EFFE  F007         	goto	u2540
  5270   000FF8                     u2541:
  5271   000FF8  EF15  F008         	goto	l2863
  5272   000FFC                     u2540:
  5273   000FFC  C01F  F027         	movff	___fldiv@b,??___fldiv
  5274   001000  C020  F028         	movff	___fldiv@b+1,??___fldiv+1
  5275   001004  C021  F029         	movff	___fldiv@b+2,??___fldiv+2
  5276   001008  C022  F02A         	movff	___fldiv@b+3,??___fldiv+3
  5277   00100C  342A               	rlcf	(??___fldiv+3)^0,w,c
  5278   00100E  322A               	rrcf	(??___fldiv+3)^0,f,c
  5279   001010  3229               	rrcf	(??___fldiv+2)^0,f,c
  5280   001012  3228               	rrcf	(??___fldiv+1)^0,f,c
  5281   001014  3227               	rrcf	??___fldiv^0,f,c
  5282   001016  C027  F01F         	movff	??___fldiv,___fldiv@b
  5283   00101A  C028  F020         	movff	??___fldiv+1,___fldiv@b+1
  5284   00101E  C029  F021         	movff	??___fldiv+2,___fldiv@b+2
  5285   001022  C02A  F022         	movff	??___fldiv+3,___fldiv@b+3
  5286   001026  4A30               	infsnz	___fldiv@new_exp^0,f,c
  5287   001028  2A31               	incf	(___fldiv@new_exp+1)^0,f,c
  5288   00102A                     l2863:
  5289   00102A  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5290   00102C  EF20  F008         	goto	u2551
  5291   001030  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  5292   001032  E108               	bnz	u2550
  5293   001034  2830               	incf	___fldiv@new_exp^0,w,c
  5294   001036  A0D8               	btfss	status,0,c
  5295   001038  EF20  F008         	goto	u2551
  5296   00103C  EF22  F008         	goto	u2550
  5297   001040                     u2551:
  5298   001040  EF2D  F008         	goto	l2867
  5299   001044                     u2550:
  5300   001044  0E00               	movlw	0
  5301   001046  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  5302   001048  6830               	setf	___fldiv@new_exp^0,c
  5303   00104A  0E00               	movlw	0
  5304   00104C  6E1F               	movwf	___fldiv@b^0,c
  5305   00104E  0E00               	movlw	0
  5306   001050  6E20               	movwf	(___fldiv@b+1)^0,c
  5307   001052  0E00               	movlw	0
  5308   001054  6E21               	movwf	(___fldiv@b+2)^0,c
  5309   001056  0E00               	movlw	0
  5310   001058  6E22               	movwf	(___fldiv@b+3)^0,c
  5311   00105A                     l2867:
  5312   00105A  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5313   00105C  EF3A  F008         	goto	u2560
  5314   001060  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  5315   001062  E106               	bnz	u2561
  5316   001064  0430               	decf	___fldiv@new_exp^0,w,c
  5317   001066  B0D8               	btfsc	status,0,c
  5318   001068  EF38  F008         	goto	u2561
  5319   00106C  EF3A  F008         	goto	u2560
  5320   001070                     u2561:
  5321   001070  EF47  F008         	goto	l2873
  5322   001074                     u2560:
  5323   001074  0E00               	movlw	0
  5324   001076  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  5325   001078  0E00               	movlw	0
  5326   00107A  6E30               	movwf	___fldiv@new_exp^0,c
  5327   00107C  0E00               	movlw	0
  5328   00107E  6E1F               	movwf	___fldiv@b^0,c
  5329   001080  0E00               	movlw	0
  5330   001082  6E20               	movwf	(___fldiv@b+1)^0,c
  5331   001084  0E00               	movlw	0
  5332   001086  6E21               	movwf	(___fldiv@b+2)^0,c
  5333   001088  0E00               	movlw	0
  5334   00108A  6E22               	movwf	(___fldiv@b+3)^0,c
  5335   00108C  6A2F               	clrf	___fldiv@sign^0,c
  5336   00108E                     l2873:
  5337   00108E  C030  F036         	movff	___fldiv@new_exp,___fldiv@bexp
  5338   001092  A036               	btfss	___fldiv@bexp^0,0,c
  5339   001094  EF4E  F008         	goto	u2571
  5340   001098  EF50  F008         	goto	u2570
  5341   00109C                     u2571:
  5342   00109C  EF53  F008         	goto	l2879
  5343   0010A0                     u2570:
  5344   0010A0  8E21               	bsf	(___fldiv@b+2)^0,7,c
  5345   0010A2  EF54  F008         	goto	l2881
  5346   0010A6                     l2879:
  5347   0010A6  9E21               	bcf	(___fldiv@b+2)^0,7,c
  5348   0010A8                     l2881:
  5349   0010A8  90D8               	bcf	status,0,c
  5350   0010AA  3036               	rrcf	___fldiv@bexp^0,w,c
  5351   0010AC  6E22               	movwf	(___fldiv@b+3)^0,c
  5352   0010AE  EF0D  F007         	goto	l2797
  5353   0010B2                     l887:
  5354   0010B2  0012               	return		;funcret
  5355   0010B4                     __end_of___fldiv:
  5356                           	callstack 0
  5357                           
  5358 ;; *************** function ___fladd *****************
  5359 ;; Defined at:
  5360 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  b               4   55[COMRAM] unsigned char 
  5363 ;;  a               4   59[COMRAM] unsigned char 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  grs             1   70[COMRAM] unsigned char 
  5366 ;;  bexp            1   69[COMRAM] unsigned char 
  5367 ;;  aexp            1   68[COMRAM] unsigned char 
  5368 ;;  signs           1   67[COMRAM] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  4   55[COMRAM] unsigned char 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5378 ;;      Params:         8       0       0       0       0       0       0       0       0
  5379 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5380 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5381 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5382 ;;Total ram usage:       16 bytes
  5383 ;; Hardware stack levels used: 1
  5384 ;; Hardware stack levels required when called: 4
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_USART_Init
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text26
  5393   00086E                     __ptext26:
  5394                           	callstack 0
  5395   00086E                     ___fladd:
  5396                           	callstack 25
  5397   00086E  503B               	movf	(___fladd@b+3)^0,w,c
  5398   000870  0B80               	andlw	128
  5399   000872  6E44               	movwf	___fladd@signs^0,c
  5400   000874  503B               	movf	(___fladd@b+3)^0,w,c
  5401   000876  243B               	addwf	(___fladd@b+3)^0,w,c
  5402   000878  6E46               	movwf	___fladd@bexp^0,c
  5403   00087A  AE3A               	btfss	(___fladd@b+2)^0,7,c
  5404   00087C  EF42  F004         	goto	u1961
  5405   000880  EF44  F004         	goto	u1960
  5406   000884                     u1961:
  5407   000884  EF45  F004         	goto	l2565
  5408   000888                     u1960:
  5409   000888  8046               	bsf	___fladd@bexp^0,0,c
  5410   00088A                     l2565:
  5411   00088A  5046               	movf	___fladd@bexp^0,w,c
  5412   00088C  B4D8               	btfsc	status,2,c
  5413   00088E  EF4B  F004         	goto	u1971
  5414   000892  EF4D  F004         	goto	u1970
  5415   000896                     u1971:
  5416   000896  EF61  F004         	goto	l2575
  5417   00089A                     u1970:
  5418   00089A  2846               	incf	___fladd@bexp^0,w,c
  5419   00089C  A4D8               	btfss	status,2,c
  5420   00089E  EF53  F004         	goto	u1981
  5421   0008A2  EF55  F004         	goto	u1980
  5422   0008A6                     u1981:
  5423   0008A6  EF5D  F004         	goto	l2571
  5424   0008AA                     u1980:
  5425   0008AA  0E00               	movlw	0
  5426   0008AC  6E38               	movwf	___fladd@b^0,c
  5427   0008AE  0E00               	movlw	0
  5428   0008B0  6E39               	movwf	(___fladd@b+1)^0,c
  5429   0008B2  0E00               	movlw	0
  5430   0008B4  6E3A               	movwf	(___fladd@b+2)^0,c
  5431   0008B6  0E00               	movlw	0
  5432   0008B8  6E3B               	movwf	(___fladd@b+3)^0,c
  5433   0008BA                     l2571:
  5434   0008BA  8E3A               	bsf	(___fladd@b+2)^0,7,c
  5435   0008BC  6A3B               	clrf	(___fladd@b+3)^0,c
  5436   0008BE  EF69  F004         	goto	l2577
  5437   0008C2                     l2575:
  5438   0008C2  0E00               	movlw	0
  5439   0008C4  6E38               	movwf	___fladd@b^0,c
  5440   0008C6  0E00               	movlw	0
  5441   0008C8  6E39               	movwf	(___fladd@b+1)^0,c
  5442   0008CA  0E00               	movlw	0
  5443   0008CC  6E3A               	movwf	(___fladd@b+2)^0,c
  5444   0008CE  0E00               	movlw	0
  5445   0008D0  6E3B               	movwf	(___fladd@b+3)^0,c
  5446   0008D2                     l2577:
  5447   0008D2  503F               	movf	(___fladd@a+3)^0,w,c
  5448   0008D4  0B80               	andlw	128
  5449   0008D6  6E45               	movwf	___fladd@aexp^0,c
  5450   0008D8  5044               	movf	___fladd@signs^0,w,c
  5451   0008DA  1845               	xorwf	___fladd@aexp^0,w,c
  5452   0008DC  B4D8               	btfsc	status,2,c
  5453   0008DE  EF73  F004         	goto	u1991
  5454   0008E2  EF75  F004         	goto	u1990
  5455   0008E6                     u1991:
  5456   0008E6  EF76  F004         	goto	l2583
  5457   0008EA                     u1990:
  5458   0008EA  8C44               	bsf	___fladd@signs^0,6,c
  5459   0008EC                     l2583:
  5460   0008EC  503F               	movf	(___fladd@a+3)^0,w,c
  5461   0008EE  243F               	addwf	(___fladd@a+3)^0,w,c
  5462   0008F0  6E45               	movwf	___fladd@aexp^0,c
  5463   0008F2  AE3E               	btfss	(___fladd@a+2)^0,7,c
  5464   0008F4  EF7E  F004         	goto	u2001
  5465   0008F8  EF80  F004         	goto	u2000
  5466   0008FC                     u2001:
  5467   0008FC  EF81  F004         	goto	l2589
  5468   000900                     u2000:
  5469   000900  8045               	bsf	___fladd@aexp^0,0,c
  5470   000902                     l2589:
  5471   000902  5045               	movf	___fladd@aexp^0,w,c
  5472   000904  B4D8               	btfsc	status,2,c
  5473   000906  EF87  F004         	goto	u2011
  5474   00090A  EF89  F004         	goto	u2010
  5475   00090E                     u2011:
  5476   00090E  EF9D  F004         	goto	l2599
  5477   000912                     u2010:
  5478   000912  2845               	incf	___fladd@aexp^0,w,c
  5479   000914  A4D8               	btfss	status,2,c
  5480   000916  EF8F  F004         	goto	u2021
  5481   00091A  EF91  F004         	goto	u2020
  5482   00091E                     u2021:
  5483   00091E  EF99  F004         	goto	l2595
  5484   000922                     u2020:
  5485   000922  0E00               	movlw	0
  5486   000924  6E3C               	movwf	___fladd@a^0,c
  5487   000926  0E00               	movlw	0
  5488   000928  6E3D               	movwf	(___fladd@a+1)^0,c
  5489   00092A  0E00               	movlw	0
  5490   00092C  6E3E               	movwf	(___fladd@a+2)^0,c
  5491   00092E  0E00               	movlw	0
  5492   000930  6E3F               	movwf	(___fladd@a+3)^0,c
  5493   000932                     l2595:
  5494   000932  8E3E               	bsf	(___fladd@a+2)^0,7,c
  5495   000934  6A3F               	clrf	(___fladd@a+3)^0,c
  5496   000936  EFA5  F004         	goto	l2601
  5497   00093A                     l2599:
  5498   00093A  0E00               	movlw	0
  5499   00093C  6E3C               	movwf	___fladd@a^0,c
  5500   00093E  0E00               	movlw	0
  5501   000940  6E3D               	movwf	(___fladd@a+1)^0,c
  5502   000942  0E00               	movlw	0
  5503   000944  6E3E               	movwf	(___fladd@a+2)^0,c
  5504   000946  0E00               	movlw	0
  5505   000948  6E3F               	movwf	(___fladd@a+3)^0,c
  5506   00094A                     l2601:
  5507   00094A  5046               	movf	___fladd@bexp^0,w,c
  5508   00094C  5C45               	subwf	___fladd@aexp^0,w,c
  5509   00094E  B0D8               	btfsc	status,0,c
  5510   000950  EFAC  F004         	goto	u2031
  5511   000954  EFAE  F004         	goto	u2030
  5512   000958                     u2031:
  5513   000958  EFD5  F004         	goto	l2637
  5514   00095C                     u2030:
  5515   00095C  AC44               	btfss	___fladd@signs^0,6,c
  5516   00095E  EFB3  F004         	goto	u2041
  5517   000962  EFB5  F004         	goto	u2040
  5518   000966                     u2041:
  5519   000966  EFB7  F004         	goto	l2607
  5520   00096A                     u2040:
  5521   00096A  0E80               	movlw	128
  5522   00096C  1A44               	xorwf	___fladd@signs^0,f,c
  5523   00096E                     l2607:
  5524   00096E  C046  F047         	movff	___fladd@bexp,___fladd@grs
  5525   000972  C045  F046         	movff	___fladd@aexp,___fladd@bexp
  5526   000976  C047  F045         	movff	___fladd@grs,___fladd@aexp
  5527   00097A  C038  F047         	movff	___fladd@b,___fladd@grs
  5528   00097E  C03C  F038         	movff	___fladd@a,___fladd@b
  5529   000982  C047  F03C         	movff	___fladd@grs,___fladd@a
  5530   000986  C039  F047         	movff	___fladd@b+1,___fladd@grs
  5531   00098A  C03D  F039         	movff	___fladd@a+1,___fladd@b+1
  5532   00098E  C047  F03D         	movff	___fladd@grs,___fladd@a+1
  5533   000992  C03A  F047         	movff	___fladd@b+2,___fladd@grs
  5534   000996  C03E  F03A         	movff	___fladd@a+2,___fladd@b+2
  5535   00099A  C047  F03E         	movff	___fladd@grs,___fladd@a+2
  5536   00099E  C03B  F047         	movff	___fladd@b+3,___fladd@grs
  5537   0009A2  C03F  F03B         	movff	___fladd@a+3,___fladd@b+3
  5538   0009A6  C047  F03F         	movff	___fladd@grs,___fladd@a+3
  5539   0009AA                     l2637:
  5540   0009AA  6A47               	clrf	___fladd@grs^0,c
  5541   0009AC  5046               	movf	___fladd@bexp^0,w,c
  5542   0009AE  C045  F040         	movff	___fladd@aexp,??___fladd
  5543   0009B2  6A41               	clrf	(??___fladd+1)^0,c
  5544   0009B4  5E40               	subwf	??___fladd^0,f,c
  5545   0009B6  0E00               	movlw	0
  5546   0009B8  5A41               	subwfb	(??___fladd+1)^0,f,c
  5547   0009BA  BE41               	btfsc	(??___fladd+1)^0,7,c
  5548   0009BC  EFE9  F004         	goto	u2051
  5549   0009C0  5041               	movf	(??___fladd+1)^0,w,c
  5550   0009C2  E109               	bnz	u2050
  5551   0009C4  0E1A               	movlw	26
  5552   0009C6  5C40               	subwf	??___fladd^0,w,c
  5553   0009C8  A0D8               	btfss	status,0,c
  5554   0009CA  EFE9  F004         	goto	u2051
  5555   0009CE  EFEB  F004         	goto	u2050
  5556   0009D2                     u2051:
  5557   0009D2  EF22  F005         	goto	l834
  5558   0009D6                     u2050:
  5559   0009D6  5038               	movf	___fladd@b^0,w,c
  5560   0009D8  1039               	iorwf	(___fladd@b+1)^0,w,c
  5561   0009DA  103A               	iorwf	(___fladd@b+2)^0,w,c
  5562   0009DC  103B               	iorwf	(___fladd@b+3)^0,w,c
  5563   0009DE  A4D8               	btfss	status,2,c
  5564   0009E0  EFF4  F004         	goto	u2061
  5565   0009E4  EFF7  F004         	goto	u2060
  5566   0009E8                     u2061:
  5567   0009E8  0E01               	movlw	1
  5568   0009EA  EFF8  F004         	goto	u2070
  5569   0009EE                     u2060:
  5570   0009EE  0E00               	movlw	0
  5571   0009F0                     u2070:
  5572   0009F0  6E47               	movwf	___fladd@grs^0,c
  5573   0009F2  0E00               	movlw	0
  5574   0009F4  6E38               	movwf	___fladd@b^0,c
  5575   0009F6  0E00               	movlw	0
  5576   0009F8  6E39               	movwf	(___fladd@b+1)^0,c
  5577   0009FA  0E00               	movlw	0
  5578   0009FC  6E3A               	movwf	(___fladd@b+2)^0,c
  5579   0009FE  0E00               	movlw	0
  5580   000A00  6E3B               	movwf	(___fladd@b+3)^0,c
  5581   000A02  C045  F046         	movff	___fladd@aexp,___fladd@bexp
  5582   000A06  EF2B  F005         	goto	l833
  5583   000A0A                     l835:
  5584   000A0A  A047               	btfss	___fladd@grs^0,0,c
  5585   000A0C  EF0A  F005         	goto	u2081
  5586   000A10  EF0C  F005         	goto	u2080
  5587   000A14                     u2081:
  5588   000A14  EF12  F005         	goto	l2647
  5589   000A18                     u2080:
  5590   000A18  90D8               	bcf	status,0,c
  5591   000A1A  3047               	rrcf	___fladd@grs^0,w,c
  5592   000A1C  0901               	iorlw	1
  5593   000A1E  6E47               	movwf	___fladd@grs^0,c
  5594   000A20  EF14  F005         	goto	l2649
  5595   000A24                     l2647:
  5596   000A24  90D8               	bcf	status,0,c
  5597   000A26  3247               	rrcf	___fladd@grs^0,f,c
  5598   000A28                     l2649:
  5599   000A28  A038               	btfss	___fladd@b^0,0,c
  5600   000A2A  EF19  F005         	goto	u2091
  5601   000A2E  EF1B  F005         	goto	u2090
  5602   000A32                     u2091:
  5603   000A32  EF1C  F005         	goto	l2653
  5604   000A36                     u2090:
  5605   000A36  8E47               	bsf	___fladd@grs^0,7,c
  5606   000A38                     l2653:
  5607   000A38  343B               	rlcf	(___fladd@b+3)^0,w,c
  5608   000A3A  323B               	rrcf	(___fladd@b+3)^0,f,c
  5609   000A3C  323A               	rrcf	(___fladd@b+2)^0,f,c
  5610   000A3E  3239               	rrcf	(___fladd@b+1)^0,f,c
  5611   000A40  3238               	rrcf	___fladd@b^0,f,c
  5612   000A42  2A46               	incf	___fladd@bexp^0,f,c
  5613   000A44                     l834:
  5614   000A44  5045               	movf	___fladd@aexp^0,w,c
  5615   000A46  5C46               	subwf	___fladd@bexp^0,w,c
  5616   000A48  A0D8               	btfss	status,0,c
  5617   000A4A  EF29  F005         	goto	u2101
  5618   000A4E  EF2B  F005         	goto	u2100
  5619   000A52                     u2101:
  5620   000A52  EF05  F005         	goto	l835
  5621   000A56                     u2100:
  5622   000A56                     l833:
  5623   000A56  BC44               	btfsc	___fladd@signs^0,6,c
  5624   000A58  EF30  F005         	goto	u2111
  5625   000A5C  EF32  F005         	goto	u2110
  5626   000A60                     u2111:
  5627   000A60  EF72  F005         	goto	l2681
  5628   000A64                     u2110:
  5629   000A64  5046               	movf	___fladd@bexp^0,w,c
  5630   000A66  A4D8               	btfss	status,2,c
  5631   000A68  EF38  F005         	goto	u2121
  5632   000A6C  EF3A  F005         	goto	u2120
  5633   000A70                     u2121:
  5634   000A70  EF44  F005         	goto	l2663
  5635   000A74                     u2120:
  5636   000A74  0E00               	movlw	0
  5637   000A76  6E38               	movwf	?___fladd^0,c
  5638   000A78  0E00               	movlw	0
  5639   000A7A  6E39               	movwf	(?___fladd+1)^0,c
  5640   000A7C  0E00               	movlw	0
  5641   000A7E  6E3A               	movwf	(?___fladd+2)^0,c
  5642   000A80  0E00               	movlw	0
  5643   000A82  6E3B               	movwf	(?___fladd+3)^0,c
  5644   000A84  EF91  F006         	goto	l842
  5645   000A88                     l2663:
  5646   000A88  503C               	movf	___fladd@a^0,w,c
  5647   000A8A  2638               	addwf	___fladd@b^0,f,c
  5648   000A8C  503D               	movf	(___fladd@a+1)^0,w,c
  5649   000A8E  2239               	addwfc	(___fladd@b+1)^0,f,c
  5650   000A90  503E               	movf	(___fladd@a+2)^0,w,c
  5651   000A92  223A               	addwfc	(___fladd@b+2)^0,f,c
  5652   000A94  503F               	movf	(___fladd@a+3)^0,w,c
  5653   000A96  223B               	addwfc	(___fladd@b+3)^0,f,c
  5654   000A98  A03B               	btfss	(___fladd@b+3)^0,0,c
  5655   000A9A  EF51  F005         	goto	u2131
  5656   000A9E  EF53  F005         	goto	u2130
  5657   000AA2                     u2131:
  5658   000AA2  EFFF  F005         	goto	l847
  5659   000AA6                     u2130:
  5660   000AA6  A047               	btfss	___fladd@grs^0,0,c
  5661   000AA8  EF58  F005         	goto	u2141
  5662   000AAC  EF5A  F005         	goto	u2140
  5663   000AB0                     u2141:
  5664   000AB0  EF60  F005         	goto	l2671
  5665   000AB4                     u2140:
  5666   000AB4  90D8               	bcf	status,0,c
  5667   000AB6  3047               	rrcf	___fladd@grs^0,w,c
  5668   000AB8  0901               	iorlw	1
  5669   000ABA  6E47               	movwf	___fladd@grs^0,c
  5670   000ABC  EF62  F005         	goto	l2673
  5671   000AC0                     l2671:
  5672   000AC0  90D8               	bcf	status,0,c
  5673   000AC2  3247               	rrcf	___fladd@grs^0,f,c
  5674   000AC4                     l2673:
  5675   000AC4  A038               	btfss	___fladd@b^0,0,c
  5676   000AC6  EF67  F005         	goto	u2151
  5677   000ACA  EF69  F005         	goto	u2150
  5678   000ACE                     u2151:
  5679   000ACE  EF6A  F005         	goto	l2677
  5680   000AD2                     u2150:
  5681   000AD2  8E47               	bsf	___fladd@grs^0,7,c
  5682   000AD4                     l2677:
  5683   000AD4  343B               	rlcf	(___fladd@b+3)^0,w,c
  5684   000AD6  323B               	rrcf	(___fladd@b+3)^0,f,c
  5685   000AD8  323A               	rrcf	(___fladd@b+2)^0,f,c
  5686   000ADA  3239               	rrcf	(___fladd@b+1)^0,f,c
  5687   000ADC  3238               	rrcf	___fladd@b^0,f,c
  5688   000ADE  2A46               	incf	___fladd@bexp^0,f,c
  5689   000AE0  EFFF  F005         	goto	l847
  5690   000AE4                     l2681:
  5691   000AE4  503C               	movf	___fladd@a^0,w,c
  5692   000AE6  5C38               	subwf	___fladd@b^0,w,c
  5693   000AE8  503D               	movf	(___fladd@a+1)^0,w,c
  5694   000AEA  5839               	subwfb	(___fladd@b+1)^0,w,c
  5695   000AEC  503E               	movf	(___fladd@a+2)^0,w,c
  5696   000AEE  583A               	subwfb	(___fladd@b+2)^0,w,c
  5697   000AF0  503B               	movf	(___fladd@b+3)^0,w,c
  5698   000AF2  0A80               	xorlw	128
  5699   000AF4  6E40               	movwf	??___fladd^0,c
  5700   000AF6  503F               	movf	(___fladd@a+3)^0,w,c
  5701   000AF8  0A80               	xorlw	128
  5702   000AFA  5840               	subwfb	??___fladd^0,w,c
  5703   000AFC  B0D8               	btfsc	status,0,c
  5704   000AFE  EF83  F005         	goto	u2161
  5705   000B02  EF85  F005         	goto	u2160
  5706   000B06                     u2161:
  5707   000B06  EFB0  F005         	goto	l2691
  5708   000B0A                     u2160:
  5709   000B0A  5038               	movf	___fladd@b^0,w,c
  5710   000B0C  5C3C               	subwf	___fladd@a^0,w,c
  5711   000B0E  6E40               	movwf	??___fladd^0,c
  5712   000B10  5039               	movf	(___fladd@b+1)^0,w,c
  5713   000B12  583D               	subwfb	(___fladd@a+1)^0,w,c
  5714   000B14  6E41               	movwf	(??___fladd+1)^0,c
  5715   000B16  503A               	movf	(___fladd@b+2)^0,w,c
  5716   000B18  583E               	subwfb	(___fladd@a+2)^0,w,c
  5717   000B1A  6E42               	movwf	(??___fladd+2)^0,c
  5718   000B1C  503B               	movf	(___fladd@b+3)^0,w,c
  5719   000B1E  583F               	subwfb	(___fladd@a+3)^0,w,c
  5720   000B20  6E43               	movwf	(??___fladd+3)^0,c
  5721   000B22  0EFF               	movlw	255
  5722   000B24  2440               	addwf	??___fladd^0,w,c
  5723   000B26  6E38               	movwf	___fladd@b^0,c
  5724   000B28  0EFF               	movlw	255
  5725   000B2A  2041               	addwfc	(??___fladd+1)^0,w,c
  5726   000B2C  6E39               	movwf	(___fladd@b+1)^0,c
  5727   000B2E  0EFF               	movlw	255
  5728   000B30  2042               	addwfc	(??___fladd+2)^0,w,c
  5729   000B32  6E3A               	movwf	(___fladd@b+2)^0,c
  5730   000B34  0EFF               	movlw	255
  5731   000B36  2043               	addwfc	(??___fladd+3)^0,w,c
  5732   000B38  6E3B               	movwf	(___fladd@b+3)^0,c
  5733   000B3A  0E80               	movlw	128
  5734   000B3C  1A44               	xorwf	___fladd@signs^0,f,c
  5735   000B3E  6C47               	negf	___fladd@grs^0,c
  5736   000B40  5047               	movf	___fladd@grs^0,w,c
  5737   000B42  A4D8               	btfss	status,2,c
  5738   000B44  EFA6  F005         	goto	u2171
  5739   000B48  EFA8  F005         	goto	u2170
  5740   000B4C                     u2171:
  5741   000B4C  EFB8  F005         	goto	l850
  5742   000B50                     u2170:
  5743   000B50  0E01               	movlw	1
  5744   000B52  2638               	addwf	___fladd@b^0,f,c
  5745   000B54  0E00               	movlw	0
  5746   000B56  2239               	addwfc	(___fladd@b+1)^0,f,c
  5747   000B58  223A               	addwfc	(___fladd@b+2)^0,f,c
  5748   000B5A  223B               	addwfc	(___fladd@b+3)^0,f,c
  5749   000B5C  EFB8  F005         	goto	l850
  5750   000B60                     l2691:
  5751   000B60  503C               	movf	___fladd@a^0,w,c
  5752   000B62  5E38               	subwf	___fladd@b^0,f,c
  5753   000B64  503D               	movf	(___fladd@a+1)^0,w,c
  5754   000B66  5A39               	subwfb	(___fladd@b+1)^0,f,c
  5755   000B68  503E               	movf	(___fladd@a+2)^0,w,c
  5756   000B6A  5A3A               	subwfb	(___fladd@b+2)^0,f,c
  5757   000B6C  503F               	movf	(___fladd@a+3)^0,w,c
  5758   000B6E  5A3B               	subwfb	(___fladd@b+3)^0,f,c
  5759   000B70                     l850:
  5760   000B70  5038               	movf	___fladd@b^0,w,c
  5761   000B72  1039               	iorwf	(___fladd@b+1)^0,w,c
  5762   000B74  103A               	iorwf	(___fladd@b+2)^0,w,c
  5763   000B76  103B               	iorwf	(___fladd@b+3)^0,w,c
  5764   000B78  A4D8               	btfss	status,2,c
  5765   000B7A  EFC1  F005         	goto	u2181
  5766   000B7E  EFC3  F005         	goto	u2180
  5767   000B82                     u2181:
  5768   000B82  EFF8  F005         	goto	l2715
  5769   000B86                     u2180:
  5770   000B86  5047               	movf	___fladd@grs^0,w,c
  5771   000B88  A4D8               	btfss	status,2,c
  5772   000B8A  EFC9  F005         	goto	u2191
  5773   000B8E  EFCB  F005         	goto	u2190
  5774   000B92                     u2191:
  5775   000B92  EFF8  F005         	goto	l2715
  5776   000B96                     u2190:
  5777   000B96  0E00               	movlw	0
  5778   000B98  6E38               	movwf	?___fladd^0,c
  5779   000B9A  0E00               	movlw	0
  5780   000B9C  6E39               	movwf	(?___fladd+1)^0,c
  5781   000B9E  0E00               	movlw	0
  5782   000BA0  6E3A               	movwf	(?___fladd+2)^0,c
  5783   000BA2  0E00               	movlw	0
  5784   000BA4  6E3B               	movwf	(?___fladd+3)^0,c
  5785   000BA6  EF91  F006         	goto	l842
  5786   000BAA                     l2699:
  5787   000BAA  90D8               	bcf	status,0,c
  5788   000BAC  3638               	rlcf	___fladd@b^0,f,c
  5789   000BAE  3639               	rlcf	(___fladd@b+1)^0,f,c
  5790   000BB0  363A               	rlcf	(___fladd@b+2)^0,f,c
  5791   000BB2  363B               	rlcf	(___fladd@b+3)^0,f,c
  5792   000BB4  AE47               	btfss	___fladd@grs^0,7,c
  5793   000BB6  EFDF  F005         	goto	u2201
  5794   000BBA  EFE1  F005         	goto	u2200
  5795   000BBE                     u2201:
  5796   000BBE  EFE2  F005         	goto	l2705
  5797   000BC2                     u2200:
  5798   000BC2  8038               	bsf	___fladd@b^0,0,c
  5799   000BC4                     l2705:
  5800   000BC4  A047               	btfss	___fladd@grs^0,0,c
  5801   000BC6  EFE7  F005         	goto	u2211
  5802   000BCA  EFE9  F005         	goto	u2210
  5803   000BCE                     u2211:
  5804   000BCE  EFED  F005         	goto	l2709
  5805   000BD2                     u2210:
  5806   000BD2  80D8               	bsf	status,0,c
  5807   000BD4  3647               	rlcf	___fladd@grs^0,f,c
  5808   000BD6  EFEF  F005         	goto	l2711
  5809   000BDA                     l2709:
  5810   000BDA  90D8               	bcf	status,0,c
  5811   000BDC  3647               	rlcf	___fladd@grs^0,f,c
  5812   000BDE                     l2711:
  5813   000BDE  5046               	movf	___fladd@bexp^0,w,c
  5814   000BE0  B4D8               	btfsc	status,2,c
  5815   000BE2  EFF5  F005         	goto	u2221
  5816   000BE6  EFF7  F005         	goto	u2220
  5817   000BEA                     u2221:
  5818   000BEA  EFF8  F005         	goto	l2715
  5819   000BEE                     u2220:
  5820   000BEE  0646               	decf	___fladd@bexp^0,f,c
  5821   000BF0                     l2715:
  5822   000BF0  AE3A               	btfss	(___fladd@b+2)^0,7,c
  5823   000BF2  EFFD  F005         	goto	u2231
  5824   000BF6  EFFF  F005         	goto	u2230
  5825   000BFA                     u2231:
  5826   000BFA  EFD5  F005         	goto	l2699
  5827   000BFE                     u2230:
  5828   000BFE                     l847:
  5829   000BFE  6A45               	clrf	___fladd@aexp^0,c
  5830   000C00  AE47               	btfss	___fladd@grs^0,7,c
  5831   000C02  EF05  F006         	goto	u2241
  5832   000C06  EF07  F006         	goto	u2240
  5833   000C0A                     u2241:
  5834   000C0A  EF1F  F006         	goto	l859
  5835   000C0E                     u2240:
  5836   000C0E  C047  F040         	movff	___fladd@grs,??___fladd
  5837   000C12  0E7F               	movlw	127
  5838   000C14  1640               	andwf	??___fladd^0,f,c
  5839   000C16  B4D8               	btfsc	status,2,c
  5840   000C18  EF10  F006         	goto	u2251
  5841   000C1C  EF12  F006         	goto	u2250
  5842   000C20                     u2251:
  5843   000C20  EF16  F006         	goto	l860
  5844   000C24                     u2250:
  5845   000C24                     l2719:
  5846   000C24  0E01               	movlw	1
  5847   000C26  6E45               	movwf	___fladd@aexp^0,c
  5848   000C28  EF1F  F006         	goto	l859
  5849   000C2C                     l860:
  5850   000C2C  A038               	btfss	___fladd@b^0,0,c
  5851   000C2E  EF1B  F006         	goto	u2261
  5852   000C32  EF1D  F006         	goto	u2260
  5853   000C36                     u2261:
  5854   000C36  EF1F  F006         	goto	l859
  5855   000C3A                     u2260:
  5856   000C3A  EF12  F006         	goto	l2719
  5857   000C3E                     l859:
  5858   000C3E  5045               	movf	___fladd@aexp^0,w,c
  5859   000C40  B4D8               	btfsc	status,2,c
  5860   000C42  EF25  F006         	goto	u2271
  5861   000C46  EF27  F006         	goto	u2270
  5862   000C4A                     u2271:
  5863   000C4A  EF52  F006         	goto	l2731
  5864   000C4E                     u2270:
  5865   000C4E  0E01               	movlw	1
  5866   000C50  2638               	addwf	___fladd@b^0,f,c
  5867   000C52  0E00               	movlw	0
  5868   000C54  2239               	addwfc	(___fladd@b+1)^0,f,c
  5869   000C56  223A               	addwfc	(___fladd@b+2)^0,f,c
  5870   000C58  223B               	addwfc	(___fladd@b+3)^0,f,c
  5871   000C5A  A03B               	btfss	(___fladd@b+3)^0,0,c
  5872   000C5C  EF32  F006         	goto	u2281
  5873   000C60  EF34  F006         	goto	u2280
  5874   000C64                     u2281:
  5875   000C64  EF52  F006         	goto	l2731
  5876   000C68                     u2280:
  5877   000C68  C038  F040         	movff	___fladd@b,??___fladd
  5878   000C6C  C039  F041         	movff	___fladd@b+1,??___fladd+1
  5879   000C70  C03A  F042         	movff	___fladd@b+2,??___fladd+2
  5880   000C74  C03B  F043         	movff	___fladd@b+3,??___fladd+3
  5881   000C78  3443               	rlcf	(??___fladd+3)^0,w,c
  5882   000C7A  3243               	rrcf	(??___fladd+3)^0,f,c
  5883   000C7C  3242               	rrcf	(??___fladd+2)^0,f,c
  5884   000C7E  3241               	rrcf	(??___fladd+1)^0,f,c
  5885   000C80  3240               	rrcf	??___fladd^0,f,c
  5886   000C82  C040  F038         	movff	??___fladd,___fladd@b
  5887   000C86  C041  F039         	movff	??___fladd+1,___fladd@b+1
  5888   000C8A  C042  F03A         	movff	??___fladd+2,___fladd@b+2
  5889   000C8E  C043  F03B         	movff	??___fladd+3,___fladd@b+3
  5890   000C92  2846               	incf	___fladd@bexp^0,w,c
  5891   000C94  B4D8               	btfsc	status,2,c
  5892   000C96  EF4F  F006         	goto	u2291
  5893   000C9A  EF51  F006         	goto	u2290
  5894   000C9E                     u2291:
  5895   000C9E  EF52  F006         	goto	l2731
  5896   000CA2                     u2290:
  5897   000CA2  2A46               	incf	___fladd@bexp^0,f,c
  5898   000CA4                     l2731:
  5899   000CA4  2846               	incf	___fladd@bexp^0,w,c
  5900   000CA6  B4D8               	btfsc	status,2,c
  5901   000CA8  EF58  F006         	goto	u2301
  5902   000CAC  EF5A  F006         	goto	u2300
  5903   000CB0                     u2301:
  5904   000CB0  EF62  F006         	goto	l2735
  5905   000CB4                     u2300:
  5906   000CB4  5046               	movf	___fladd@bexp^0,w,c
  5907   000CB6  A4D8               	btfss	status,2,c
  5908   000CB8  EF60  F006         	goto	u2311
  5909   000CBC  EF62  F006         	goto	u2310
  5910   000CC0                     u2311:
  5911   000CC0  EF73  F006         	goto	l866
  5912   000CC4                     u2310:
  5913   000CC4                     l2735:
  5914   000CC4  0E00               	movlw	0
  5915   000CC6  6E38               	movwf	___fladd@b^0,c
  5916   000CC8  0E00               	movlw	0
  5917   000CCA  6E39               	movwf	(___fladd@b+1)^0,c
  5918   000CCC  0E00               	movlw	0
  5919   000CCE  6E3A               	movwf	(___fladd@b+2)^0,c
  5920   000CD0  0E00               	movlw	0
  5921   000CD2  6E3B               	movwf	(___fladd@b+3)^0,c
  5922   000CD4  5046               	movf	___fladd@bexp^0,w,c
  5923   000CD6  A4D8               	btfss	status,2,c
  5924   000CD8  EF70  F006         	goto	u2321
  5925   000CDC  EF72  F006         	goto	u2320
  5926   000CE0                     u2321:
  5927   000CE0  EF73  F006         	goto	l866
  5928   000CE4                     u2320:
  5929   000CE4  6A44               	clrf	___fladd@signs^0,c
  5930   000CE6                     l866:
  5931   000CE6  A046               	btfss	___fladd@bexp^0,0,c
  5932   000CE8  EF78  F006         	goto	u2331
  5933   000CEC  EF7A  F006         	goto	u2330
  5934   000CF0                     u2331:
  5935   000CF0  EF7D  F006         	goto	l2741
  5936   000CF4                     u2330:
  5937   000CF4  8E3A               	bsf	(___fladd@b+2)^0,7,c
  5938   000CF6  EF7E  F006         	goto	l2743
  5939   000CFA                     l2741:
  5940   000CFA  9E3A               	bcf	(___fladd@b+2)^0,7,c
  5941   000CFC                     l2743:
  5942   000CFC  90D8               	bcf	status,0,c
  5943   000CFE  3046               	rrcf	___fladd@bexp^0,w,c
  5944   000D00  6E3B               	movwf	(___fladd@b+3)^0,c
  5945   000D02  AE44               	btfss	___fladd@signs^0,7,c
  5946   000D04  EF86  F006         	goto	u2341
  5947   000D08  EF88  F006         	goto	u2340
  5948   000D0C                     u2341:
  5949   000D0C  EF89  F006         	goto	l2749
  5950   000D10                     u2340:
  5951   000D10  8E3B               	bsf	(___fladd@b+3)^0,7,c
  5952   000D12                     l2749:
  5953   000D12  C038  F038         	movff	___fladd@b,?___fladd
  5954   000D16  C039  F039         	movff	___fladd@b+1,?___fladd+1
  5955   000D1A  C03A  F03A         	movff	___fladd@b+2,?___fladd+2
  5956   000D1E  C03B  F03B         	movff	___fladd@b+3,?___fladd+3
  5957   000D22                     l842:
  5958   000D22  0012               	return		;funcret
  5959   000D24                     __end_of___fladd:
  5960                           	callstack 0
  5961                           
  5962 ;; *************** function _RTC_Init *****************
  5963 ;; Defined at:
  5964 ;;		line 14 in file "ds1307.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  sec             1   22[COMRAM] unsigned char 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0
  5979 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5980 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5981 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5982 ;;Total ram usage:        2 bytes
  5983 ;; Hardware stack levels used: 1
  5984 ;; Hardware stack levels required when called: 6
  5985 ;; This function calls:
  5986 ;;		_I2C_Master_Read
  5987 ;;		_I2C_Master_RepeatedStart
  5988 ;;		_I2C_Master_Start
  5989 ;;		_I2C_Master_Stop
  5990 ;;		_I2C_Master_Write
  5991 ;; This function is called by:
  5992 ;;		_main
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text27
  5997   001BDC                     __ptext27:
  5998                           	callstack 0
  5999   001BDC                     _RTC_Init:
  6000                           	callstack 24
  6001   001BDC                     
  6002                           ;ds1307.c: 15:     unsigned char sec;;ds1307.c: 17:     I2C_Master_Start();
  6003   001BDC  EC3C  F011         	call	_I2C_Master_Start	;wreg free
  6004                           
  6005                           ;ds1307.c: 18:     I2C_Master_Write(0b11010000);
  6006   001BE0  0E00               	movlw	0
  6007   001BE2  6E13               	movwf	(I2C_Master_Write@d+1)^0,c
  6008   001BE4  0ED0               	movlw	208
  6009   001BE6  6E12               	movwf	I2C_Master_Write@d^0,c
  6010   001BE8  EC31  F011         	call	_I2C_Master_Write	;wreg free
  6011                           
  6012                           ;ds1307.c: 19:     I2C_Master_Write(0x00);
  6013   001BEC  0E00               	movlw	0
  6014   001BEE  6E13               	movwf	(I2C_Master_Write@d+1)^0,c
  6015   001BF0  0E00               	movlw	0
  6016   001BF2  6E12               	movwf	I2C_Master_Write@d^0,c
  6017   001BF4  EC31  F011         	call	_I2C_Master_Write	;wreg free
  6018                           
  6019                           ;ds1307.c: 20:     I2C_Master_RepeatedStart();
  6020   001BF8  EC40  F011         	call	_I2C_Master_RepeatedStart	;wreg free
  6021                           
  6022                           ;ds1307.c: 21:     I2C_Master_Write(0b11010000 | 1);
  6023   001BFC  0E00               	movlw	0
  6024   001BFE  6E13               	movwf	(I2C_Master_Write@d+1)^0,c
  6025   001C00  0ED1               	movlw	209
  6026   001C02  6E12               	movwf	I2C_Master_Write@d^0,c
  6027   001C04  EC31  F011         	call	_I2C_Master_Write	;wreg free
  6028                           
  6029                           ;ds1307.c: 22:     sec = I2C_Master_Read(0);
  6030   001C08  0E00               	movlw	0
  6031   001C0A  6E13               	movwf	(I2C_Master_Read@a+1)^0,c
  6032   001C0C  0E00               	movlw	0
  6033   001C0E  6E12               	movwf	I2C_Master_Read@a^0,c
  6034   001C10  EC9C  F010         	call	_I2C_Master_Read	;wreg free
  6035   001C14  5012               	movf	?_I2C_Master_Read^0,w,c
  6036   001C16  6E17               	movwf	RTC_Init@sec^0,c
  6037                           
  6038                           ;ds1307.c: 23:     I2C_Master_Stop();
  6039   001C18  EC38  F011         	call	_I2C_Master_Stop	;wreg free
  6040   001C1C                     
  6041                           ;ds1307.c: 25:     if (sec & 0x80) {
  6042   001C1C  AE17               	btfss	RTC_Init@sec^0,7,c
  6043   001C1E  EF13  F00E         	goto	u2781
  6044   001C22  EF15  F00E         	goto	u2780
  6045   001C26                     u2781:
  6046   001C26  EF2E  F00E         	goto	l182
  6047   001C2A                     u2780:
  6048   001C2A                     
  6049                           ;ds1307.c: 28:         I2C_Master_Start();
  6050   001C2A  EC3C  F011         	call	_I2C_Master_Start	;wreg free
  6051                           
  6052                           ;ds1307.c: 29:         I2C_Master_Write(0b11010000);
  6053   001C2E  0E00               	movlw	0
  6054   001C30  6E13               	movwf	(I2C_Master_Write@d+1)^0,c
  6055   001C32  0ED0               	movlw	208
  6056   001C34  6E12               	movwf	I2C_Master_Write@d^0,c
  6057   001C36  EC31  F011         	call	_I2C_Master_Write	;wreg free
  6058                           
  6059                           ;ds1307.c: 30:         I2C_Master_Write(0x00);
  6060   001C3A  0E00               	movlw	0
  6061   001C3C  6E13               	movwf	(I2C_Master_Write@d+1)^0,c
  6062   001C3E  0E00               	movlw	0
  6063   001C40  6E12               	movwf	I2C_Master_Write@d^0,c
  6064   001C42  EC31  F011         	call	_I2C_Master_Write	;wreg free
  6065                           
  6066                           ;ds1307.c: 31:         I2C_Master_Write(sec & 0x7F);
  6067   001C46  C017  F016         	movff	RTC_Init@sec,??_RTC_Init
  6068   001C4A  0E7F               	movlw	127
  6069   001C4C  1616               	andwf	??_RTC_Init^0,f,c
  6070   001C4E  5016               	movf	??_RTC_Init^0,w,c
  6071   001C50  6E12               	movwf	I2C_Master_Write@d^0,c
  6072   001C52  6A13               	clrf	(I2C_Master_Write@d+1)^0,c
  6073   001C54  EC31  F011         	call	_I2C_Master_Write	;wreg free
  6074                           
  6075                           ;ds1307.c: 32:         I2C_Master_Stop();
  6076   001C58  EC38  F011         	call	_I2C_Master_Stop	;wreg free
  6077   001C5C                     l182:
  6078   001C5C  0012               	return		;funcret
  6079   001C5E                     __end_of_RTC_Init:
  6080                           	callstack 0
  6081                           
  6082 ;; *************** function _I2C_Master_Write *****************
  6083 ;; Defined at:
  6084 ;;		line 32 in file "i2c.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  d               2   17[COMRAM] unsigned int 
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      unsigned char 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6098 ;;      Params:         2       0       0       0       0       0       0       0       0
  6099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6101 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6102 ;;Total ram usage:        2 bytes
  6103 ;; Hardware stack levels used: 1
  6104 ;; Hardware stack levels required when called: 5
  6105 ;; This function calls:
  6106 ;;		_I2C_Master_Wait
  6107 ;; This function is called by:
  6108 ;;		_RTC_Init
  6109 ;;		_RTC_GetDateTime
  6110 ;;		_RTC_SetDateTime
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text28
  6115   002262                     __ptext28:
  6116                           	callstack 0
  6117   002262                     _I2C_Master_Write:
  6118                           	callstack 23
  6119   002262                     
  6120                           ;i2c.c: 33:     I2C_Master_Wait();
  6121   002262  ECFB  F010         	call	_I2C_Master_Wait	;wreg free
  6122   002266                     
  6123                           ;i2c.c: 34:     SSPBUF = d;
  6124   002266  C012  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  6125                           
  6126                           ;i2c.c: 35:     I2C_Master_Wait();
  6127   00226A  ECFB  F010         	call	_I2C_Master_Wait	;wreg free
  6128   00226E  0012               	return		;funcret
  6129   002270                     __end_of_I2C_Master_Write:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function _I2C_Master_Stop *****************
  6133 ;; Defined at:
  6134 ;;		line 27 in file "i2c.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg, status,2, status,0, cstack
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6148 ;;      Params:         0       0       0       0       0       0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6151 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6152 ;;Total ram usage:        0 bytes
  6153 ;; Hardware stack levels used: 1
  6154 ;; Hardware stack levels required when called: 5
  6155 ;; This function calls:
  6156 ;;		_I2C_Master_Wait
  6157 ;; This function is called by:
  6158 ;;		_RTC_Init
  6159 ;;		_RTC_GetDateTime
  6160 ;;		_RTC_SetDateTime
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text29
  6165   002270                     __ptext29:
  6166                           	callstack 0
  6167   002270                     _I2C_Master_Stop:
  6168                           	callstack 23
  6169   002270                     
  6170                           ;i2c.c: 28:     I2C_Master_Wait();
  6171   002270  ECFB  F010         	call	_I2C_Master_Wait	;wreg free
  6172   002274                     
  6173                           ;i2c.c: 29:     PEN = 1;
  6174   002274  84C5               	bsf	4037,2,c	;volatile
  6175   002276  0012               	return		;funcret
  6176   002278                     __end_of_I2C_Master_Stop:
  6177                           	callstack 0
  6178                           
  6179 ;; *************** function _I2C_Master_Start *****************
  6180 ;; Defined at:
  6181 ;;		line 17 in file "i2c.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;		None
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;		None
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1    wreg      void 
  6188 ;; Registers used:
  6189 ;;		wreg, status,2, status,0, cstack
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6195 ;;      Params:         0       0       0       0       0       0       0       0       0
  6196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6198 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6199 ;;Total ram usage:        0 bytes
  6200 ;; Hardware stack levels used: 1
  6201 ;; Hardware stack levels required when called: 5
  6202 ;; This function calls:
  6203 ;;		_I2C_Master_Wait
  6204 ;; This function is called by:
  6205 ;;		_RTC_Init
  6206 ;;		_RTC_GetDateTime
  6207 ;;		_RTC_SetDateTime
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text30
  6212   002278                     __ptext30:
  6213                           	callstack 0
  6214   002278                     _I2C_Master_Start:
  6215                           	callstack 23
  6216   002278                     
  6217                           ;i2c.c: 18:     I2C_Master_Wait();
  6218   002278  ECFB  F010         	call	_I2C_Master_Wait	;wreg free
  6219   00227C                     
  6220                           ;i2c.c: 19:     SEN = 1;
  6221   00227C  80C5               	bsf	4037,0,c	;volatile
  6222   00227E  0012               	return		;funcret
  6223   002280                     __end_of_I2C_Master_Start:
  6224                           	callstack 0
  6225                           
  6226 ;; *************** function _I2C_Master_RepeatedStart *****************
  6227 ;; Defined at:
  6228 ;;		line 22 in file "i2c.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;		None
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      void 
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0, cstack
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6245 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6246 ;;Total ram usage:        0 bytes
  6247 ;; Hardware stack levels used: 1
  6248 ;; Hardware stack levels required when called: 5
  6249 ;; This function calls:
  6250 ;;		_I2C_Master_Wait
  6251 ;; This function is called by:
  6252 ;;		_RTC_Init
  6253 ;;		_RTC_GetDateTime
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text31
  6258   002280                     __ptext31:
  6259                           	callstack 0
  6260   002280                     _I2C_Master_RepeatedStart:
  6261                           	callstack 23
  6262   002280                     
  6263                           ;i2c.c: 23:     I2C_Master_Wait();
  6264   002280  ECFB  F010         	call	_I2C_Master_Wait	;wreg free
  6265   002284                     
  6266                           ;i2c.c: 24:     RSEN = 1;
  6267   002284  82C5               	bsf	4037,1,c	;volatile
  6268   002286  0012               	return		;funcret
  6269   002288                     __end_of_I2C_Master_RepeatedStart:
  6270                           	callstack 0
  6271                           
  6272 ;; *************** function _I2C_Master_Read *****************
  6273 ;; Defined at:
  6274 ;;		line 39 in file "i2c.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  a               2   17[COMRAM] unsigned short 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  temp            2   19[COMRAM] unsigned short 
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  2   17[COMRAM] unsigned short 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6288 ;;      Params:         2       0       0       0       0       0       0       0       0
  6289 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6291 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6292 ;;Total ram usage:        4 bytes
  6293 ;; Hardware stack levels used: 1
  6294 ;; Hardware stack levels required when called: 5
  6295 ;; This function calls:
  6296 ;;		_I2C_Master_Wait
  6297 ;; This function is called by:
  6298 ;;		_RTC_Init
  6299 ;;		_RTC_GetDateTime
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text32
  6304   002138                     __ptext32:
  6305                           	callstack 0
  6306   002138                     _I2C_Master_Read:
  6307                           	callstack 23
  6308   002138                     
  6309                           ;i2c.c: 40:     unsigned short temp;;i2c.c: 41:     I2C_Master_Wait();
  6310   002138  ECFB  F010         	call	_I2C_Master_Wait	;wreg free
  6311   00213C                     
  6312                           ;i2c.c: 42:     RCEN = 1;
  6313   00213C  86C5               	bsf	4037,3,c	;volatile
  6314                           
  6315                           ;i2c.c: 43:     I2C_Master_Wait();
  6316   00213E  ECFB  F010         	call	_I2C_Master_Wait	;wreg free
  6317   002142                     
  6318                           ;i2c.c: 44:     temp = SSPBUF;
  6319   002142  CFC9 F014          	movff	4041,I2C_Master_Read@temp	;volatile
  6320   002146  6A15               	clrf	(I2C_Master_Read@temp+1)^0,c
  6321                           
  6322                           ;i2c.c: 45:     I2C_Master_Wait();
  6323   002148  ECFB  F010         	call	_I2C_Master_Wait	;wreg free
  6324   00214C                     
  6325                           ;i2c.c: 46:     ACKDT = (a)?0:1;
  6326   00214C  5012               	movf	I2C_Master_Read@a^0,w,c
  6327   00214E  1013               	iorwf	(I2C_Master_Read@a+1)^0,w,c
  6328   002150  B4D8               	btfsc	status,2,c
  6329   002152  EFAD  F010         	goto	u1851
  6330   002156  EFB0  F010         	goto	u1850
  6331   00215A                     u1851:
  6332   00215A  8AC5               	bsf	4037,5,c	;volatile
  6333   00215C  EFB1  F010         	goto	u1865
  6334   002160                     u1850:
  6335   002160  9AC5               	bcf	4037,5,c	;volatile
  6336   002162                     u1865:
  6337   002162                     
  6338                           ;i2c.c: 47:     ACKEN = 1;
  6339   002162  88C5               	bsf	4037,4,c	;volatile
  6340   002164                     
  6341                           ;i2c.c: 48:     return temp;
  6342   002164  C014  F012         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
  6343   002168  C015  F013         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
  6344   00216C  0012               	return		;funcret
  6345   00216E                     __end_of_I2C_Master_Read:
  6346                           	callstack 0
  6347                           
  6348 ;; *************** function _I2C_Master_Wait *****************
  6349 ;; Defined at:
  6350 ;;		line 13 in file "i2c.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;		None
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;		None
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg, status,2, status,0
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6366 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6367 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6368 ;;Total ram usage:        1 bytes
  6369 ;; Hardware stack levels used: 1
  6370 ;; Hardware stack levels required when called: 4
  6371 ;; This function calls:
  6372 ;;		Nothing
  6373 ;; This function is called by:
  6374 ;;		_I2C_Master_Start
  6375 ;;		_I2C_Master_RepeatedStart
  6376 ;;		_I2C_Master_Stop
  6377 ;;		_I2C_Master_Write
  6378 ;;		_I2C_Master_Read
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text33
  6383   0021F6                     __ptext33:
  6384                           	callstack 0
  6385   0021F6                     _I2C_Master_Wait:
  6386                           	callstack 23
  6387   0021F6                     l2305:
  6388   0021F6  CFC5 F011          	movff	4037,??_I2C_Master_Wait	;volatile
  6389   0021FA  0E1F               	movlw	31
  6390   0021FC  1611               	andwf	??_I2C_Master_Wait^0,f,c
  6391   0021FE  A4D8               	btfss	status,2,c
  6392   002200  EF04  F011         	goto	u1721
  6393   002204  EF06  F011         	goto	u1720
  6394   002208                     u1721:
  6395   002208  EFFB  F010         	goto	l2305
  6396   00220C                     u1720:
  6397   00220C  B4C7               	btfsc	199,2,c	;volatile
  6398   00220E  EF0B  F011         	goto	u1731
  6399   002212  EF0D  F011         	goto	u1730
  6400   002216                     u1731:
  6401   002216  EFFB  F010         	goto	l2305
  6402   00221A                     u1730:
  6403   00221A  0012               	return		;funcret
  6404   00221C                     __end_of_I2C_Master_Wait:
  6405                           	callstack 0
  6406                           
  6407 ;; *************** function _LCD_Init *****************
  6408 ;; Defined at:
  6409 ;;		line 4 in file "LCD.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;		None
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      void 
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6423 ;;      Params:         0       0       0       0       0       0       0       0       0
  6424 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6425 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6426 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6427 ;;Total ram usage:        1 bytes
  6428 ;; Hardware stack levels used: 1
  6429 ;; Hardware stack levels required when called: 5
  6430 ;; This function calls:
  6431 ;;		_LCD_Command
  6432 ;; This function is called by:
  6433 ;;		_main
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text34
  6438   00216E                     __ptext34:
  6439                           	callstack 0
  6440   00216E                     _LCD_Init:
  6441                           	callstack 25
  6442   00216E                     
  6443                           ;LCD.c: 6:     TRISD = 0;
  6444   00216E  6A95               	clrf	149,c	;volatile
  6445   002170                     
  6446                           ;LCD.c: 7:     _delay((unsigned long)((15)*(8000000/4000.0)));
  6447   002170  0E27               	movlw	39
  6448   002172  6E13               	movwf	??_LCD_Init^0,c
  6449   002174  0EF5               	movlw	245
  6450   002176                     u3257:
  6451   002176  2EE8               	decfsz	wreg,f,c
  6452   002178  D7FE               	bra	u3257
  6453   00217A  2E13               	decfsz	??_LCD_Init^0,f,c
  6454   00217C  D7FC               	bra	u3257
  6455   00217E  0000               	nop	
  6456   002180                     
  6457                           ;LCD.c: 8:     LCD_Command(0x02);
  6458   002180  0E02               	movlw	2
  6459   002182  EC62  F00F         	call	_LCD_Command
  6460   002186                     
  6461                           ;LCD.c: 9:     LCD_Command(0x28);
  6462   002186  0E28               	movlw	40
  6463   002188  EC62  F00F         	call	_LCD_Command
  6464   00218C                     
  6465                           ;LCD.c: 10:     LCD_Command(0x01);
  6466   00218C  0E01               	movlw	1
  6467   00218E  EC62  F00F         	call	_LCD_Command
  6468   002192                     
  6469                           ;LCD.c: 11:     LCD_Command(0x0c);
  6470   002192  0E0C               	movlw	12
  6471   002194  EC62  F00F         	call	_LCD_Command
  6472   002198                     
  6473                           ;LCD.c: 12:     LCD_Command(0x06);
  6474   002198  0E06               	movlw	6
  6475   00219A  EC62  F00F         	call	_LCD_Command
  6476   00219E  0012               	return		;funcret
  6477   0021A0                     __end_of_LCD_Init:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function _LCD_Command *****************
  6481 ;; Defined at:
  6482 ;;		line 15 in file "LCD.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  cmd             1    wreg     unsigned char 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  cmd             1   17[COMRAM] unsigned char 
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2, status,0
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0
  6497 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6498 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6499 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6500 ;;Total ram usage:        2 bytes
  6501 ;; Hardware stack levels used: 1
  6502 ;; Hardware stack levels required when called: 4
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_LCD_Init
  6507 ;;		_LCD_String_xy
  6508 ;;		_LCD_Clear
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text35
  6513   001EC4                     __ptext35:
  6514                           	callstack 0
  6515   001EC4                     _LCD_Command:
  6516                           	callstack 24
  6517                           
  6518                           ;incstack = 0
  6519                           ;LCD_Command@cmd stored from wreg
  6520   001EC4  6E12               	movwf	LCD_Command@cmd^0,c
  6521   001EC6                     
  6522                           ;LCD.c: 15: void LCD_Command(unsigned char cmd);LCD.c: 16: {;LCD.c: 17:     LATD = (LATD
      +                           & 0x0f) | (0xF0 & cmd);
  6523   001EC6  C012  F011         	movff	LCD_Command@cmd,??_LCD_Command
  6524   001ECA  0EF0               	movlw	240
  6525   001ECC  1611               	andwf	??_LCD_Command^0,f,c
  6526   001ECE  508C               	movf	140,w,c	;volatile
  6527   001ED0  0B0F               	andlw	15
  6528   001ED2  1011               	iorwf	??_LCD_Command^0,w,c
  6529   001ED4  6E8C               	movwf	140,c	;volatile
  6530   001ED6                     
  6531                           ;LCD.c: 18:     LATD0 = 0;
  6532   001ED6  908C               	bcf	3980,0,c	;volatile
  6533   001ED8                     
  6534                           ;LCD.c: 19:     LATD2 = 1;
  6535   001ED8  848C               	bsf	3980,2,c	;volatile
  6536   001EDA                     
  6537                           ;LCD.c: 20:     __nop();
  6538   001EDA  0000               	nop	
  6539   001EDC                     
  6540                           ;LCD.c: 21:     LATD2 = 0;
  6541   001EDC  948C               	bcf	3980,2,c	;volatile
  6542   001EDE                     
  6543                           ;LCD.c: 22:     _delay((unsigned long)((1)*(8000000/4000.0)));
  6544   001EDE  0E03               	movlw	3
  6545   001EE0  6E11               	movwf	??_LCD_Command^0,c
  6546   001EE2  0E98               	movlw	152
  6547   001EE4                     u3267:
  6548   001EE4  2EE8               	decfsz	wreg,f,c
  6549   001EE6  D7FE               	bra	u3267
  6550   001EE8  2E11               	decfsz	??_LCD_Command^0,f,c
  6551   001EEA  D7FC               	bra	u3267
  6552   001EEC                     
  6553                           ;LCD.c: 23:     LATD = (LATD & 0x0f) | ((cmd << 4) & 0xF0);
  6554   001EEC  C012  F011         	movff	LCD_Command@cmd,??_LCD_Command
  6555   001EF0  3A11               	swapf	??_LCD_Command^0,f,c
  6556   001EF2  0EF0               	movlw	240
  6557   001EF4  1611               	andwf	??_LCD_Command^0,f,c
  6558   001EF6  0EF0               	movlw	240
  6559   001EF8  1611               	andwf	??_LCD_Command^0,f,c
  6560   001EFA  508C               	movf	140,w,c	;volatile
  6561   001EFC  0B0F               	andlw	15
  6562   001EFE  1011               	iorwf	??_LCD_Command^0,w,c
  6563   001F00  6E8C               	movwf	140,c	;volatile
  6564   001F02                     
  6565                           ;LCD.c: 24:     LATD2 = 1;
  6566   001F02  848C               	bsf	3980,2,c	;volatile
  6567   001F04                     
  6568                           ;LCD.c: 25:     __nop();
  6569   001F04  0000               	nop	
  6570   001F06                     
  6571                           ;LCD.c: 26:     LATD2 = 0;
  6572   001F06  948C               	bcf	3980,2,c	;volatile
  6573                           
  6574                           ;LCD.c: 27:     _delay((unsigned long)((3)*(8000000/4000.0)));
  6575   001F08  0E08               	movlw	8
  6576   001F0A  6E11               	movwf	??_LCD_Command^0,c
  6577   001F0C  0ECA               	movlw	202
  6578   001F0E                     u3277:
  6579   001F0E  2EE8               	decfsz	wreg,f,c
  6580   001F10  D7FE               	bra	u3277
  6581   001F12  2E11               	decfsz	??_LCD_Command^0,f,c
  6582   001F14  D7FC               	bra	u3277
  6583   001F16  0012               	return		;funcret
  6584   001F18                     __end_of_LCD_Command:
  6585                           	callstack 0
  6586                           
  6587 ;; *************** function _ISR *****************
  6588 ;; Defined at:
  6589 ;;		line 40 in file "conjunto.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;		None
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  comando         1   15[COMRAM] unsigned char 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  1    wreg      void 
  6596 ;; Registers used:
  6597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6603 ;;      Params:         0       0       0       0       0       0       0       0       0
  6604 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6605 ;;      Temps:          6       0       0       0       0       0       0       0       0
  6606 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6607 ;;Total ram usage:        7 bytes
  6608 ;; Hardware stack levels used: 1
  6609 ;; Hardware stack levels required when called: 3
  6610 ;; This function calls:
  6611 ;;		i2_LCD_Clear
  6612 ;;		i2_LCD_String_xy
  6613 ;; This function is called by:
  6614 ;;		Interrupt level 2
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           	psect	intcode
  6619   000008                     __pintcode:
  6620                           	callstack 0
  6621   000008                     _ISR:
  6622                           	callstack 18
  6623                           
  6624                           ;incstack = 0
  6625   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6626   00000A  ED63  F00A         	call	int_func,f	;refresh shadow registers
  6627                           
  6628                           	psect	intcode_body
  6629   0014C6                     __pintcode_body:
  6630                           	callstack 18
  6631   0014C6                     int_func:
  6632                           	callstack 18
  6633   0014C6  0006               	pop		; remove dummy address from shadow register refresh
  6634   0014C8  CFE9 F00A          	movff	fsr0l,??_ISR
  6635   0014CC  CFEA F00B          	movff	fsr0h,??_ISR+1
  6636   0014D0  CFF6 F00C          	movff	tblptrl,??_ISR+2
  6637   0014D4  CFF7 F00D          	movff	tblptrh,??_ISR+3
  6638   0014D8  CFF8 F00E          	movff	tblptru,??_ISR+4
  6639   0014DC  CFF5 F00F          	movff	tablat,??_ISR+5
  6640   0014E0                     
  6641                           ;conjunto.c: 42:     if (PIR1bits.RCIF) {
  6642   0014E0  AA9E               	btfss	158,5,c	;volatile
  6643   0014E2  EF75  F00A         	goto	i2u280_41
  6644   0014E6  EF77  F00A         	goto	i2u280_40
  6645   0014EA                     i2u280_41:
  6646   0014EA  EFA8  F00A         	goto	i2l3091
  6647   0014EE                     i2u280_40:
  6648   0014EE                     
  6649                           ;conjunto.c: 43:         char comando = RCREG;
  6650   0014EE  CFAE F010          	movff	4014,ISR@comando	;volatile
  6651                           
  6652                           ;conjunto.c: 46:         if (RCSTAbits.OERR) {
  6653   0014F2  A2AB               	btfss	171,1,c	;volatile
  6654   0014F4  EF7E  F00A         	goto	i2u281_41
  6655   0014F8  EF80  F00A         	goto	i2u281_40
  6656   0014FC                     i2u281_41:
  6657   0014FC  EF83  F00A         	goto	i2l3077
  6658   001500                     i2u281_40:
  6659   001500                     
  6660                           ;conjunto.c: 47:             CREN = 0;
  6661   001500  98AB               	bcf	4011,4,c	;volatile
  6662                           
  6663                           ;conjunto.c: 48:             __nop();
  6664   001502  0000               	nop	
  6665                           
  6666                           ;conjunto.c: 49:             CREN = 1;
  6667   001504  88AB               	bsf	4011,4,c	;volatile
  6668   001506                     i2l3077:
  6669                           
  6670                           ;conjunto.c: 52:         if (comando == '1') {
  6671   001506  0E31               	movlw	49
  6672   001508  1810               	xorwf	ISR@comando^0,w,c
  6673   00150A  A4D8               	btfss	status,2,c
  6674   00150C  EF8A  F00A         	goto	i2u282_41
  6675   001510  EF8C  F00A         	goto	i2u282_40
  6676   001514                     i2u282_41:
  6677   001514  EF90  F00A         	goto	i2l3081
  6678   001518                     i2u282_40:
  6679   001518                     
  6680                           ;conjunto.c: 53:             sistema_activo = 1;
  6681   001518  0E01               	movlw	1
  6682   00151A  6E4E               	movwf	_sistema_activo^0,c
  6683                           
  6684                           ;conjunto.c: 54:         } else if (comando == '0') {
  6685   00151C  EFA7  F00A         	goto	i2l3089
  6686   001520                     i2l3081:
  6687   001520  0E30               	movlw	48
  6688   001522  1810               	xorwf	ISR@comando^0,w,c
  6689   001524  A4D8               	btfss	status,2,c
  6690   001526  EF97  F00A         	goto	i2u283_41
  6691   00152A  EF99  F00A         	goto	i2u283_40
  6692   00152E                     i2u283_41:
  6693   00152E  EFA7  F00A         	goto	i2l3089
  6694   001532                     i2u283_40:
  6695   001532                     
  6696                           ;conjunto.c: 55:             sistema_activo = 0;
  6697   001532  6A4E               	clrf	_sistema_activo^0,c
  6698   001534                     
  6699                           ;conjunto.c: 56:             LCD_Clear();
  6700   001534  EC1A  F011         	call	i2_LCD_Clear	;wreg free
  6701   001538                     
  6702                           ;conjunto.c: 57:             LCD_String_xy(0, 0, "Sistema en pausa");
  6703   001538  0E00               	movlw	0
  6704   00153A  6E05               	movwf	i2LCD_String_xy@pos^0,c
  6705   00153C  0E2C               	movlw	low STR_4
  6706   00153E  6E06               	movwf	i2LCD_String_xy@msg^0,c
  6707   001540  5006               	movf	i2LCD_String_xy@msg^0,w,c
  6708   001542  A4D8               	btfss	status,2,c
  6709   001544  0E08               	movlw	high __smallconst
  6710   001546  6E07               	movwf	(i2LCD_String_xy@msg+1)^0,c
  6711   001548  0E00               	movlw	0
  6712   00154A  EC63  F010         	call	i2_LCD_String_xy
  6713   00154E                     i2l3089:
  6714                           
  6715                           ;conjunto.c: 60:         PIR1bits.RCIF = 0;
  6716   00154E  9A9E               	bcf	158,5,c	;volatile
  6717   001550                     i2l3091:
  6718                           
  6719                           ;conjunto.c: 64:     if (INTCON3bits.INT2IF) {
  6720   001550  A2F0               	btfss	240,1,c	;volatile
  6721   001552  EFAD  F00A         	goto	i2u284_41
  6722   001556  EFAF  F00A         	goto	i2u284_40
  6723   00155A                     i2u284_41:
  6724   00155A  EFD6  F00A         	goto	i2l63
  6725   00155E                     i2u284_40:
  6726   00155E                     
  6727                           ;conjunto.c: 66:         sistema_activo ^= 1;
  6728   00155E  0E01               	movlw	1
  6729   001560  1A4E               	xorwf	_sistema_activo^0,f,c
  6730   001562                     
  6731                           ;conjunto.c: 68:         if (sistema_activo) {
  6732   001562  504E               	movf	_sistema_activo^0,w,c
  6733   001564  B4D8               	btfsc	status,2,c
  6734   001566  EFB7  F00A         	goto	i2u285_41
  6735   00156A  EFB9  F00A         	goto	i2u285_40
  6736   00156E                     i2u285_41:
  6737   00156E  EFC8  F00A         	goto	i2l3101
  6738   001572                     i2u285_40:
  6739   001572                     
  6740                           ;conjunto.c: 69:             LCD_Clear();
  6741   001572  EC1A  F011         	call	i2_LCD_Clear	;wreg free
  6742   001576                     
  6743                           ;conjunto.c: 70:             LCD_String_xy(0, 0, "Sistema activo");
  6744   001576  0E00               	movlw	0
  6745   001578  6E05               	movwf	i2LCD_String_xy@pos^0,c
  6746   00157A  0E3D               	movlw	low STR_5
  6747   00157C  6E06               	movwf	i2LCD_String_xy@msg^0,c
  6748   00157E  5006               	movf	i2LCD_String_xy@msg^0,w,c
  6749   001580  A4D8               	btfss	status,2,c
  6750   001582  0E08               	movlw	high __smallconst
  6751   001584  6E07               	movwf	(i2LCD_String_xy@msg+1)^0,c
  6752   001586  0E00               	movlw	0
  6753   001588  EC63  F010         	call	i2_LCD_String_xy
  6754                           
  6755                           ;conjunto.c: 72:         } else {
  6756   00158C  EFD5  F00A         	goto	i2l3105
  6757   001590                     i2l3101:
  6758                           
  6759                           ;conjunto.c: 73:             LCD_Clear();
  6760   001590  EC1A  F011         	call	i2_LCD_Clear	;wreg free
  6761   001594                     
  6762                           ;conjunto.c: 74:             LCD_String_xy(0, 0, "Sistema en pausa");
  6763   001594  0E00               	movlw	0
  6764   001596  6E05               	movwf	i2LCD_String_xy@pos^0,c
  6765   001598  0E2C               	movlw	low STR_4
  6766   00159A  6E06               	movwf	i2LCD_String_xy@msg^0,c
  6767   00159C  5006               	movf	i2LCD_String_xy@msg^0,w,c
  6768   00159E  A4D8               	btfss	status,2,c
  6769   0015A0  0E08               	movlw	high __smallconst
  6770   0015A2  6E07               	movwf	(i2LCD_String_xy@msg+1)^0,c
  6771   0015A4  0E00               	movlw	0
  6772   0015A6  EC63  F010         	call	i2_LCD_String_xy
  6773   0015AA                     i2l3105:
  6774                           
  6775                           ;conjunto.c: 77:         INTCON3bits.INT2IF = 0;
  6776   0015AA  92F0               	bcf	240,1,c	;volatile
  6777   0015AC                     i2l63:
  6778   0015AC  C00F  FFF5         	movff	??_ISR+5,tablat
  6779   0015B0  C00E  FFF8         	movff	??_ISR+4,tblptru
  6780   0015B4  C00D  FFF7         	movff	??_ISR+3,tblptrh
  6781   0015B8  C00C  FFF6         	movff	??_ISR+2,tblptrl
  6782   0015BC  C00B  FFEA         	movff	??_ISR+1,fsr0h
  6783   0015C0  C00A  FFE9         	movff	??_ISR,fsr0l
  6784   0015C4  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6785   0015C6  0011               	retfie		f
  6786   0015C8                     __end_of_ISR:
  6787                           	callstack 0
  6788                           
  6789 ;; *************** function i2_LCD_String_xy *****************
  6790 ;; Defined at:
  6791 ;;		line 53 in file "LCD.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  row             1    wreg     unsigned char 
  6794 ;;  pos             1    4[COMRAM] unsigned char 
  6795 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  6796 ;;		 -> STR_8(8), STR_7(13), STR_6(17), STR_5(15), 
  6797 ;;		 -> STR_4(17), mostrar_rtc@fecha(17), mostrar_rtc@hora(17), mostrar_temperatura@buffer(16), 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  row             1    7[COMRAM] unsigned char 
  6800 ;;  location        1    8[COMRAM] unsigned char 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      void 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6810 ;;      Params:         3       0       0       0       0       0       0       0       0
  6811 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6813 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6814 ;;Total ram usage:        5 bytes
  6815 ;; Hardware stack levels used: 1
  6816 ;; Hardware stack levels required when called: 2
  6817 ;; This function calls:
  6818 ;;		i2_LCD_Command
  6819 ;;		i2_LCD_String
  6820 ;; This function is called by:
  6821 ;;		_ISR
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text37
  6826   0020C6                     __ptext37:
  6827                           	callstack 0
  6828   0020C6                     i2_LCD_String_xy:
  6829                           	callstack 18
  6830                           
  6831                           ;incstack = 0
  6832                           ;i2LCD_String_xy@row stored from wreg
  6833   0020C6  6E08               	movwf	i2LCD_String_xy@row^0,c
  6834   0020C8                     
  6835                           ;LCD.c: 55:     if (row == 0) {
  6836   0020C8  5008               	movf	i2LCD_String_xy@row^0,w,c
  6837   0020CA  A4D8               	btfss	status,2,c
  6838   0020CC  EF6A  F010         	goto	i2u279_41
  6839   0020D0  EF6C  F010         	goto	i2u279_40
  6840   0020D4                     i2u279_41:
  6841   0020D4  EF72  F010         	goto	i2l3061
  6842   0020D8                     i2u279_40:
  6843   0020D8                     
  6844                           ;LCD.c: 56:         location = 0x80 | (pos & 0x0F);
  6845   0020D8  5005               	movf	i2LCD_String_xy@pos^0,w,c
  6846   0020DA  0B0F               	andlw	15
  6847   0020DC  0980               	iorlw	128
  6848   0020DE  6E09               	movwf	i2LCD_String_xy@location^0,c
  6849                           
  6850                           ;LCD.c: 57:     } else {
  6851   0020E0  EF76  F010         	goto	i2l3063
  6852   0020E4                     i2l3061:
  6853                           
  6854                           ;LCD.c: 58:         location = 0xC0 | (pos & 0x0F);
  6855   0020E4  5005               	movf	i2LCD_String_xy@pos^0,w,c
  6856   0020E6  0B0F               	andlw	15
  6857   0020E8  09C0               	iorlw	192
  6858   0020EA  6E09               	movwf	i2LCD_String_xy@location^0,c
  6859   0020EC                     i2l3063:
  6860                           
  6861                           ;LCD.c: 60:     LCD_Command(location);
  6862   0020EC  5009               	movf	i2LCD_String_xy@location^0,w,c
  6863   0020EE  ECB6  F00F         	call	i2_LCD_Command
  6864   0020F2                     
  6865                           ;LCD.c: 61:     LCD_String(msg);
  6866   0020F2  C006  F003         	movff	i2LCD_String_xy@msg,i2LCD_String@msg
  6867   0020F6  C007  F004         	movff	i2LCD_String_xy@msg+1,i2LCD_String@msg+1
  6868   0020FA  EC09  F00F         	call	i2_LCD_String	;wreg free
  6869   0020FE  0012               	return		;funcret
  6870   002100                     __end_ofi2_LCD_String_xy:
  6871                           	callstack 0
  6872                           
  6873 ;; *************** function i2_LCD_String *****************
  6874 ;; Defined at:
  6875 ;;		line 45 in file "LCD.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  6878 ;;		 -> STR_8(8), STR_7(13), STR_6(17), STR_5(15), 
  6879 ;;		 -> STR_4(17), mostrar_rtc@fecha(17), mostrar_rtc@hora(17), mostrar_temperatura@buffer(16), 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  1    wreg      void 
  6884 ;; Registers used:
  6885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6891 ;;      Params:         2       0       0       0       0       0       0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6894 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6895 ;;Total ram usage:        2 bytes
  6896 ;; Hardware stack levels used: 1
  6897 ;; Hardware stack levels required when called: 1
  6898 ;; This function calls:
  6899 ;;		i2_LCD_Char
  6900 ;; This function is called by:
  6901 ;;		i2_LCD_String_xy
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text38
  6906   001E12                     __ptext38:
  6907                           	callstack 0
  6908   001E12                     i2_LCD_String:
  6909                           	callstack 18
  6910   001E12                     
  6911                           ;LCD.c: 45: void LCD_String(const char *msg);LCD.c: 46: {;LCD.c: 47:     while((*msg) !=
      +                           0) {
  6912   001E12  EF1F  F00F         	goto	i2l3005
  6913   001E16                     i2l3001:
  6914                           
  6915                           ;LCD.c: 48:         LCD_Char(*msg);
  6916   001E16  C003  FFF6         	movff	i2LCD_String@msg,tblptrl
  6917   001E1A  C004  FFF7         	movff	i2LCD_String@msg+1,tblptrh
  6918   001E1E  6AF8               	clrf	tblptru,c
  6919   001E20  0E07               	movlw	(high __ramtop+-1)
  6920   001E22  64F7               	cpfsgt	tblptrh,c
  6921   001E24  D003               	bra	i2u275_47
  6922   001E26  0008               	tblrd		*
  6923   001E28  50F5               	movf	tablat,w,c
  6924   001E2A  D005               	bra	i2u275_40
  6925   001E2C                     i2u275_47:
  6926   001E2C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6927   001E30  CFF7 FFEA          	movff	tblptrh,fsr0h
  6928   001E34  50EF               	movf	indf0,w,c
  6929   001E36                     i2u275_40:
  6930   001E36  EC8C  F00F         	call	i2_LCD_Char
  6931   001E3A                     
  6932                           ;LCD.c: 49:         msg++;
  6933   001E3A  4A03               	infsnz	i2LCD_String@msg^0,f,c
  6934   001E3C  2A04               	incf	(i2LCD_String@msg+1)^0,f,c
  6935   001E3E                     i2l3005:
  6936                           
  6937                           ;LCD.c: 47:     while((*msg) != 0) {
  6938   001E3E  C003  FFF6         	movff	i2LCD_String@msg,tblptrl
  6939   001E42  C004  FFF7         	movff	i2LCD_String@msg+1,tblptrh
  6940   001E46  6AF8               	clrf	tblptru,c
  6941   001E48  0E07               	movlw	(high __ramtop+-1)
  6942   001E4A  64F7               	cpfsgt	tblptrh,c
  6943   001E4C  D003               	bra	i2u276_47
  6944   001E4E  0008               	tblrd		*
  6945   001E50  50F5               	movf	tablat,w,c
  6946   001E52  D005               	bra	i2u276_40
  6947   001E54                     i2u276_47:
  6948   001E54  CFF6 FFE9          	movff	tblptrl,fsr0l
  6949   001E58  CFF7 FFEA          	movff	tblptrh,fsr0h
  6950   001E5C  50EF               	movf	indf0,w,c
  6951   001E5E                     i2u276_40:
  6952   001E5E  0900               	iorlw	0
  6953   001E60  A4D8               	btfss	status,2,c
  6954   001E62  EF35  F00F         	goto	i2u277_41
  6955   001E66  EF37  F00F         	goto	i2u277_40
  6956   001E6A                     i2u277_41:
  6957   001E6A  EF0B  F00F         	goto	i2l3001
  6958   001E6E                     i2u277_40:
  6959   001E6E  0012               	return		;funcret
  6960   001E70                     __end_ofi2_LCD_String:
  6961                           	callstack 0
  6962                           
  6963 ;; *************** function i2_LCD_Char *****************
  6964 ;; Defined at:
  6965 ;;		line 30 in file "LCD.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  dat             1    wreg     unsigned char 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  dat             1    1[COMRAM] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      void 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6979 ;;      Params:         0       0       0       0       0       0       0       0       0
  6980 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6981 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6982 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6983 ;;Total ram usage:        2 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; This function calls:
  6986 ;;		Nothing
  6987 ;; This function is called by:
  6988 ;;		i2_LCD_String
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992                           	psect	text39
  6993   001F18                     __ptext39:
  6994                           	callstack 0
  6995   001F18                     i2_LCD_Char:
  6996                           	callstack 18
  6997                           
  6998                           ;incstack = 0
  6999                           ;i2LCD_Char@dat stored from wreg
  7000   001F18  6E02               	movwf	i2LCD_Char@dat^0,c
  7001   001F1A                     
  7002                           ;LCD.c: 30: void LCD_Char(unsigned char dat);LCD.c: 31: {;LCD.c: 32:     LATD = (LATD & 
      +                          0x0f) | (0xF0 & dat);
  7003   001F1A  C002  F001         	movff	i2LCD_Char@dat,??i2_LCD_Char
  7004   001F1E  0EF0               	movlw	240
  7005   001F20  1601               	andwf	??i2_LCD_Char^0,f,c
  7006   001F22  508C               	movf	140,w,c	;volatile
  7007   001F24  0B0F               	andlw	15
  7008   001F26  1001               	iorwf	??i2_LCD_Char^0,w,c
  7009   001F28  6E8C               	movwf	140,c	;volatile
  7010   001F2A                     
  7011                           ;LCD.c: 33:     LATD0 = 1;
  7012   001F2A  808C               	bsf	3980,0,c	;volatile
  7013   001F2C                     
  7014                           ;LCD.c: 34:     LATD2 = 1;
  7015   001F2C  848C               	bsf	3980,2,c	;volatile
  7016   001F2E                     
  7017                           ;LCD.c: 35:     __nop();
  7018   001F2E  0000               	nop	
  7019   001F30                     
  7020                           ;LCD.c: 36:     LATD2 = 0;
  7021   001F30  948C               	bcf	3980,2,c	;volatile
  7022   001F32                     
  7023                           ;LCD.c: 37:     _delay((unsigned long)((1)*(8000000/4000.0)));
  7024   001F32  0E03               	movlw	3
  7025   001F34  6E01               	movwf	??i2_LCD_Char^0,c
  7026   001F36  0E98               	movlw	152
  7027   001F38                     i2u328_47:
  7028   001F38  2EE8               	decfsz	wreg,f,c
  7029   001F3A  D7FE               	bra	i2u328_47
  7030   001F3C  2E01               	decfsz	??i2_LCD_Char^0,f,c
  7031   001F3E  D7FC               	bra	i2u328_47
  7032   001F40                     
  7033                           ;LCD.c: 38:     LATD = (LATD & 0x0f) | ((dat << 4) & 0xF0);
  7034   001F40  C002  F001         	movff	i2LCD_Char@dat,??i2_LCD_Char
  7035   001F44  3A01               	swapf	??i2_LCD_Char^0,f,c
  7036   001F46  0EF0               	movlw	240
  7037   001F48  1601               	andwf	??i2_LCD_Char^0,f,c
  7038   001F4A  0EF0               	movlw	240
  7039   001F4C  1601               	andwf	??i2_LCD_Char^0,f,c
  7040   001F4E  508C               	movf	140,w,c	;volatile
  7041   001F50  0B0F               	andlw	15
  7042   001F52  1001               	iorwf	??i2_LCD_Char^0,w,c
  7043   001F54  6E8C               	movwf	140,c	;volatile
  7044   001F56                     
  7045                           ;LCD.c: 39:     LATD2 = 1;
  7046   001F56  848C               	bsf	3980,2,c	;volatile
  7047   001F58                     
  7048                           ;LCD.c: 40:     __nop();
  7049   001F58  0000               	nop	
  7050   001F5A                     
  7051                           ;LCD.c: 41:     LATD2 = 0;
  7052   001F5A  948C               	bcf	3980,2,c	;volatile
  7053                           
  7054                           ;LCD.c: 42:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7055   001F5C  0E08               	movlw	8
  7056   001F5E  6E01               	movwf	??i2_LCD_Char^0,c
  7057   001F60  0ECA               	movlw	202
  7058   001F62                     i2u329_47:
  7059   001F62  2EE8               	decfsz	wreg,f,c
  7060   001F64  D7FE               	bra	i2u329_47
  7061   001F66  2E01               	decfsz	??i2_LCD_Char^0,f,c
  7062   001F68  D7FC               	bra	i2u329_47
  7063   001F6A  0012               	return		;funcret
  7064   001F6C                     __end_ofi2_LCD_Char:
  7065                           	callstack 0
  7066                           
  7067 ;; *************** function i2_LCD_Clear *****************
  7068 ;; Defined at:
  7069 ;;		line 64 in file "LCD.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;		None
  7072 ;; Auto vars:     Size  Location     Type
  7073 ;;		None
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  1    wreg      void 
  7076 ;; Registers used:
  7077 ;;		wreg, status,2, status,0, cstack
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7083 ;;      Params:         0       0       0       0       0       0       0       0       0
  7084 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7085 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7086 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7087 ;;Total ram usage:        1 bytes
  7088 ;; Hardware stack levels used: 1
  7089 ;; Hardware stack levels required when called: 1
  7090 ;; This function calls:
  7091 ;;		i2_LCD_Command
  7092 ;; This function is called by:
  7093 ;;		_ISR
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text40
  7098   002234                     __ptext40:
  7099                           	callstack 0
  7100   002234                     i2_LCD_Clear:
  7101                           	callstack 19
  7102   002234                     
  7103                           ;LCD.c: 66:     LCD_Command(0x01);
  7104   002234  0E01               	movlw	1
  7105   002236  ECB6  F00F         	call	i2_LCD_Command
  7106   00223A                     
  7107                           ;LCD.c: 67:     _delay((unsigned long)((2)*(8000000/4000.0)));
  7108   00223A  0E06               	movlw	6
  7109   00223C  6E03               	movwf	??i2_LCD_Clear^0,c
  7110   00223E  0E30               	movlw	48
  7111   002240                     i2u330_47:
  7112   002240  2EE8               	decfsz	wreg,f,c
  7113   002242  D7FE               	bra	i2u330_47
  7114   002244  2E03               	decfsz	??i2_LCD_Clear^0,f,c
  7115   002246  D7FC               	bra	i2u330_47
  7116   002248  D000               	nop2	
  7117   00224A  0012               	return		;funcret
  7118   00224C                     __end_ofi2_LCD_Clear:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function i2_LCD_Command *****************
  7122 ;; Defined at:
  7123 ;;		line 15 in file "LCD.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  cmd             1    wreg     unsigned char 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  cmd             1    1[COMRAM] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7137 ;;      Params:         0       0       0       0       0       0       0       0       0
  7138 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7139 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7140 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7141 ;;Total ram usage:        2 bytes
  7142 ;; Hardware stack levels used: 1
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		i2_LCD_String_xy
  7147 ;;		i2_LCD_Clear
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text41
  7152   001F6C                     __ptext41:
  7153                           	callstack 0
  7154   001F6C                     i2_LCD_Command:
  7155                           	callstack 19
  7156                           
  7157                           ;incstack = 0
  7158                           ;i2LCD_Command@cmd stored from wreg
  7159   001F6C  6E02               	movwf	i2LCD_Command@cmd^0,c
  7160   001F6E                     
  7161                           ;LCD.c: 15: void LCD_Command(unsigned char cmd);LCD.c: 16: {;LCD.c: 17:     LATD = (LATD
      +                           & 0x0f) | (0xF0 & cmd);
  7162   001F6E  C002  F001         	movff	i2LCD_Command@cmd,??i2_LCD_Command
  7163   001F72  0EF0               	movlw	240
  7164   001F74  1601               	andwf	??i2_LCD_Command^0,f,c
  7165   001F76  508C               	movf	140,w,c	;volatile
  7166   001F78  0B0F               	andlw	15
  7167   001F7A  1001               	iorwf	??i2_LCD_Command^0,w,c
  7168   001F7C  6E8C               	movwf	140,c	;volatile
  7169   001F7E                     
  7170                           ;LCD.c: 18:     LATD0 = 0;
  7171   001F7E  908C               	bcf	3980,0,c	;volatile
  7172   001F80                     
  7173                           ;LCD.c: 19:     LATD2 = 1;
  7174   001F80  848C               	bsf	3980,2,c	;volatile
  7175   001F82                     
  7176                           ;LCD.c: 20:     __nop();
  7177   001F82  0000               	nop	
  7178   001F84                     
  7179                           ;LCD.c: 21:     LATD2 = 0;
  7180   001F84  948C               	bcf	3980,2,c	;volatile
  7181   001F86                     
  7182                           ;LCD.c: 22:     _delay((unsigned long)((1)*(8000000/4000.0)));
  7183   001F86  0E03               	movlw	3
  7184   001F88  6E01               	movwf	??i2_LCD_Command^0,c
  7185   001F8A  0E98               	movlw	152
  7186   001F8C                     i2u331_47:
  7187   001F8C  2EE8               	decfsz	wreg,f,c
  7188   001F8E  D7FE               	bra	i2u331_47
  7189   001F90  2E01               	decfsz	??i2_LCD_Command^0,f,c
  7190   001F92  D7FC               	bra	i2u331_47
  7191   001F94                     
  7192                           ;LCD.c: 23:     LATD = (LATD & 0x0f) | ((cmd << 4) & 0xF0);
  7193   001F94  C002  F001         	movff	i2LCD_Command@cmd,??i2_LCD_Command
  7194   001F98  3A01               	swapf	??i2_LCD_Command^0,f,c
  7195   001F9A  0EF0               	movlw	240
  7196   001F9C  1601               	andwf	??i2_LCD_Command^0,f,c
  7197   001F9E  0EF0               	movlw	240
  7198   001FA0  1601               	andwf	??i2_LCD_Command^0,f,c
  7199   001FA2  508C               	movf	140,w,c	;volatile
  7200   001FA4  0B0F               	andlw	15
  7201   001FA6  1001               	iorwf	??i2_LCD_Command^0,w,c
  7202   001FA8  6E8C               	movwf	140,c	;volatile
  7203   001FAA                     
  7204                           ;LCD.c: 24:     LATD2 = 1;
  7205   001FAA  848C               	bsf	3980,2,c	;volatile
  7206   001FAC                     
  7207                           ;LCD.c: 25:     __nop();
  7208   001FAC  0000               	nop	
  7209   001FAE                     
  7210                           ;LCD.c: 26:     LATD2 = 0;
  7211   001FAE  948C               	bcf	3980,2,c	;volatile
  7212                           
  7213                           ;LCD.c: 27:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7214   001FB0  0E08               	movlw	8
  7215   001FB2  6E01               	movwf	??i2_LCD_Command^0,c
  7216   001FB4  0ECA               	movlw	202
  7217   001FB6                     i2u332_47:
  7218   001FB6  2EE8               	decfsz	wreg,f,c
  7219   001FB8  D7FE               	bra	i2u332_47
  7220   001FBA  2E01               	decfsz	??i2_LCD_Command^0,f,c
  7221   001FBC  D7FC               	bra	i2u332_47
  7222   001FBE  0012               	return		;funcret
  7223   001FC0                     __end_ofi2_LCD_Command:
  7224                           	callstack 0
  7225                           
  7226                           	psect	rparam
  7227   000001                     ___rparam_used  equ	1
  7228   000000                     ___param_bank   equ	0
  7229   000000                     __Lparam        equ	__Lrparam
  7230   000000                     __Hparam        equ	__Hrparam
  7231                           
  7232                           	psect	temp
  7233   00004F                     btemp:
  7234                           	callstack 0
  7235   00004F                     	ds	1
  7236   00004F                     int$flags       set	btemp
  7237   000050                     wtemp8          set	btemp+1
  7238   000050                     ttemp5          set	btemp+1
  7239   000053                     ttemp6          set	btemp+4
  7240   000057                     ttemp7          set	btemp+8
  7241                           
  7242                           	psect	idloc
  7243                           
  7244                           ;Config register IDLOC0 @ 0x200000
  7245                           ;	unspecified, using default values
  7246   200000                     	org	2097152
  7247   200000  FF                 	db	255
  7248                           
  7249                           ;Config register IDLOC1 @ 0x200001
  7250                           ;	unspecified, using default values
  7251   200001                     	org	2097153
  7252   200001  FF                 	db	255
  7253                           
  7254                           ;Config register IDLOC2 @ 0x200002
  7255                           ;	unspecified, using default values
  7256   200002                     	org	2097154
  7257   200002  FF                 	db	255
  7258                           
  7259                           ;Config register IDLOC3 @ 0x200003
  7260                           ;	unspecified, using default values
  7261   200003                     	org	2097155
  7262   200003  FF                 	db	255
  7263                           
  7264                           ;Config register IDLOC4 @ 0x200004
  7265                           ;	unspecified, using default values
  7266   200004                     	org	2097156
  7267   200004  FF                 	db	255
  7268                           
  7269                           ;Config register IDLOC5 @ 0x200005
  7270                           ;	unspecified, using default values
  7271   200005                     	org	2097157
  7272   200005  FF                 	db	255
  7273                           
  7274                           ;Config register IDLOC6 @ 0x200006
  7275                           ;	unspecified, using default values
  7276   200006                     	org	2097158
  7277   200006  FF                 	db	255
  7278                           
  7279                           ;Config register IDLOC7 @ 0x200007
  7280                           ;	unspecified, using default values
  7281   200007                     	org	2097159
  7282   200007  FF                 	db	255
  7283                           
  7284                           	psect	config
  7285                           
  7286                           ;Config register CONFIG1L @ 0x300000
  7287                           ;	PLL Prescaler Selection bits
  7288                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7289                           ;	System Clock Postscaler Selection bits
  7290                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7291                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7292                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7293   300000                     	org	3145728
  7294   300000  00                 	db	0
  7295                           
  7296                           ;Config register CONFIG1H @ 0x300001
  7297                           ;	Oscillator Selection bits
  7298                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  7299                           ;	Fail-Safe Clock Monitor Enable bit
  7300                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7301                           ;	Internal/External Oscillator Switchover bit
  7302                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7303   300001                     	org	3145729
  7304   300001  09                 	db	9
  7305                           
  7306                           ;Config register CONFIG2L @ 0x300002
  7307                           ;	Power-up Timer Enable bit
  7308                           ;	PWRT = OFF, PWRT disabled
  7309                           ;	Brown-out Reset Enable bits
  7310                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7311                           ;	Brown-out Reset Voltage bits
  7312                           ;	BORV = 3, Minimum setting 2.05V
  7313                           ;	USB Voltage Regulator Enable bit
  7314                           ;	VREGEN = OFF, USB voltage regulator disabled
  7315   300002                     	org	3145730
  7316   300002  1F                 	db	31
  7317                           
  7318                           ;Config register CONFIG2H @ 0x300003
  7319                           ;	Watchdog Timer Enable bit
  7320                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7321                           ;	Watchdog Timer Postscale Select bits
  7322                           ;	WDTPS = 32768, 1:32768
  7323   300003                     	org	3145731
  7324   300003  1E                 	db	30
  7325                           
  7326                           ; Padding undefined space
  7327   300004                     	org	3145732
  7328   300004  FF                 	db	255
  7329                           
  7330                           ;Config register CONFIG3H @ 0x300005
  7331                           ;	CCP2 MUX bit
  7332                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  7333                           ;	PORTB A/D Enable bit
  7334                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7335                           ;	Low-Power Timer 1 Oscillator Enable bit
  7336                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7337                           ;	MCLR Pin Enable bit
  7338                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  7339   300005                     	org	3145733
  7340   300005  01                 	db	1
  7341                           
  7342                           ;Config register CONFIG4L @ 0x300006
  7343                           ;	Stack Full/Underflow Reset Enable bit
  7344                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7345                           ;	Single-Supply ICSP Enable bit
  7346                           ;	LVP = OFF, Single-Supply ICSP disabled
  7347                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7348                           ;	ICPRT = OFF, ICPORT disabled
  7349                           ;	Extended Instruction Set Enable bit
  7350                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7351                           ;	Background Debugger Enable bit
  7352                           ;	DEBUG = 0x1, unprogrammed default
  7353   300006                     	org	3145734
  7354   300006  81                 	db	129
  7355                           
  7356                           ; Padding undefined space
  7357   300007                     	org	3145735
  7358   300007  FF                 	db	255
  7359                           
  7360                           ;Config register CONFIG5L @ 0x300008
  7361                           ;	Code Protection bit
  7362                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7363                           ;	Code Protection bit
  7364                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7365                           ;	Code Protection bit
  7366                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7367                           ;	Code Protection bit
  7368                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7369   300008                     	org	3145736
  7370   300008  0F                 	db	15
  7371                           
  7372                           ;Config register CONFIG5H @ 0x300009
  7373                           ;	Boot Block Code Protection bit
  7374                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7375                           ;	Data EEPROM Code Protection bit
  7376                           ;	CPD = OFF, Data EEPROM is not code-protected
  7377   300009                     	org	3145737
  7378   300009  C0                 	db	192
  7379                           
  7380                           ;Config register CONFIG6L @ 0x30000A
  7381                           ;	Write Protection bit
  7382                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7383                           ;	Write Protection bit
  7384                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7385                           ;	Write Protection bit
  7386                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7387                           ;	Write Protection bit
  7388                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7389   30000A                     	org	3145738
  7390   30000A  0F                 	db	15
  7391                           
  7392                           ;Config register CONFIG6H @ 0x30000B
  7393                           ;	Configuration Register Write Protection bit
  7394                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7395                           ;	Boot Block Write Protection bit
  7396                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7397                           ;	Data EEPROM Write Protection bit
  7398                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7399   30000B                     	org	3145739
  7400   30000B  E0                 	db	224
  7401                           
  7402                           ;Config register CONFIG7L @ 0x30000C
  7403                           ;	Table Read Protection bit
  7404                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7405                           ;	Table Read Protection bit
  7406                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7407                           ;	Table Read Protection bit
  7408                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7409                           ;	Table Read Protection bit
  7410                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7411   30000C                     	org	3145740
  7412   30000C  0F                 	db	15
  7413                           
  7414                           ;Config register CONFIG7H @ 0x30000D
  7415                           ;	Boot Block Table Read Protection bit
  7416                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7417   30000D                     	org	3145741
  7418   30000D  40                 	db	64
  7419                           tosu	equ	0xFFF
  7420                           tosh	equ	0xFFE
  7421                           tosl	equ	0xFFD
  7422                           stkptr	equ	0xFFC
  7423                           pclatu	equ	0xFFB
  7424                           pclath	equ	0xFFA
  7425                           pcl	equ	0xFF9
  7426                           tblptru	equ	0xFF8
  7427                           tblptrh	equ	0xFF7
  7428                           tblptrl	equ	0xFF6
  7429                           tablat	equ	0xFF5
  7430                           prodh	equ	0xFF4
  7431                           prodl	equ	0xFF3
  7432                           indf0	equ	0xFEF
  7433                           postinc0	equ	0xFEE
  7434                           postdec0	equ	0xFED
  7435                           preinc0	equ	0xFEC
  7436                           plusw0	equ	0xFEB
  7437                           fsr0h	equ	0xFEA
  7438                           fsr0l	equ	0xFE9
  7439                           wreg	equ	0xFE8
  7440                           indf1	equ	0xFE7
  7441                           postinc1	equ	0xFE6
  7442                           postdec1	equ	0xFE5
  7443                           preinc1	equ	0xFE4
  7444                           plusw1	equ	0xFE3
  7445                           fsr1h	equ	0xFE2
  7446                           fsr1l	equ	0xFE1
  7447                           bsr	equ	0xFE0
  7448                           indf2	equ	0xFDF
  7449                           postinc2	equ	0xFDE
  7450                           postdec2	equ	0xFDD
  7451                           preinc2	equ	0xFDC
  7452                           plusw2	equ	0xFDB
  7453                           fsr2h	equ	0xFDA
  7454                           fsr2l	equ	0xFD9
  7455                           status	equ	0xFD8

Data Sizes:
    Strings     107
    Constant    0
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      78
    BANK0           160     54      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> mostrar_rtc@fecha(BANK0[17]), mostrar_rtc@hora(BANK0[17]), mostrar_temperatura@buffer(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> mostrar_rtc@fecha(BANK0[17]), mostrar_rtc@hora(BANK0[17]), mostrar_temperatura@buffer(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> mostrar_rtc@fecha(BANK0[17]), mostrar_rtc@hora(BANK0[17]), mostrar_temperatura@buffer(BANK0[16]), STR_4(CODE[17]), 
		 -> STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[13]), STR_8(CODE[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> mostrar_rtc@fecha(BANK0[17]), mostrar_rtc@hora(BANK0[17]), mostrar_temperatura@buffer(BANK0[16]), STR_4(CODE[17]), 
		 -> STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[13]), STR_8(CODE[8]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    RTC_GetDateTime@day	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@d(BANK0[1]), 

    RTC_GetDateTime@hour	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@h(BANK0[1]), 

    RTC_GetDateTime@min	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@m(BANK0[1]), 

    RTC_GetDateTime@month	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@mo(BANK0[1]), 

    RTC_GetDateTime@sec	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@s(BANK0[1]), 

    RTC_GetDateTime@year	PTR unsigned char  size(1) Largest target is 1
		 -> mostrar_rtc@y(BANK0[1]), 

    S1317$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> mostrar_rtc@fecha(BANK0[17]), mostrar_rtc@hora(BANK0[17]), mostrar_temperatura@buffer(BANK0[16]), 

    S1317$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[11]), STR_2(CODE[21]), STR_3(CODE[22]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> mostrar_rtc@fecha(BANK0[17]), mostrar_rtc@hora(BANK0[17]), mostrar_temperatura@buffer(BANK0[16]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[11]), STR_2(CODE[21]), STR_3(CODE[22]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[11]), STR_2(CODE[21]), STR_3(CODE[22]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[11]), STR_2(CODE[21]), STR_3(CODE[22]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _mostrar_temperatura->_sprintf
    _DHT11_GetTemperature->_DHT11_Read
    _mostrar_rtc->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _RTC_GetDateTime->_I2C_Master_Read
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _USART_Init->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _RTC_Init->_I2C_Master_Read
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _LCD_Init->_LCD_Command

Critical Paths under _ISR in COMRAM

    _ISR->i2_LCD_String_xy
    i2_LCD_String_xy->i2_LCD_String
    i2_LCD_String->i2_LCD_Char
    i2_LCD_Clear->i2_LCD_Command

Critical Paths under _main in BANK0

    _main->_mostrar_rtc
    _mostrar_temperatura->_sprintf
    _mostrar_rtc->_sprintf

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13815
                                             52 BANK0      2     2      0
                         _DHT11_Read
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                           _RTC_Init
                         _USART_Init
                        _mostrar_rtc
                _mostrar_temperatura
 ---------------------------------------------------------------------------------
 (1) _mostrar_temperatura                                 17    17      0    4526
                                             12 BANK0     17    17      0
               _DHT11_GetTemperature
                          _LCD_Clear
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _DHT11_GetTemperature                                12    12      0     347
                                             18 COMRAM    12    12      0
                         _DHT11_Read
 ---------------------------------------------------------------------------------
 (3) _DHT11_Read                                           2     2      0      71
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _mostrar_rtc                                         40    40      0    4928
                                             12 BANK0     40    40      0
                          _LCD_Clear
                      _LCD_String_xy
                    _RTC_GetDateTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    14      8    3709
                                             57 COMRAM     8     0      8
                                              0 BANK0     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3379
                                             53 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           10     7      3    3152
                                             44 COMRAM     9     6      3
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 8     5      3    1941
                                             36 COMRAM     8     5      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    1088
                                             29 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2     487
                                             24 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     335
                                             16 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     238
                                             16 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     247
                                             16 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     266
                                             16 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _RTC_GetDateTime                                      6     0      6     289
                                             21 COMRAM     6     0      6
                            _BCD2DEC
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _BCD2DEC                                              2     2      0      58
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     292
                                             20 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     104
                                             18 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      58
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0      58
                                             18 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4    3744
                                              0 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     337
                                             16 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     230
                                             16 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1123
                                             30 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    1986
                                             55 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             2     2      0     138
                                             21 COMRAM     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2      40
                                             17 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2      53
                                             17 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      58
                                             18 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      58
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 7     7      0     391
                                              9 COMRAM     7     7      0
                        i2_LCD_Clear
                    i2_LCD_String_xy
 ---------------------------------------------------------------------------------
 (11) i2_LCD_String_xy                                     5     2      3     288
                                              4 COMRAM     5     2      3
                      i2_LCD_Command
                       i2_LCD_String
 ---------------------------------------------------------------------------------
 (12) i2_LCD_String                                        2     0      2     104
                                              2 COMRAM     2     0      2
                         i2_LCD_Char
 ---------------------------------------------------------------------------------
 (13) i2_LCD_Char                                          2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) i2_LCD_Clear                                         1     1      0      58
                                              2 COMRAM     1     1      0
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (12) i2_LCD_Command                                       2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_Read
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _RTC_Init
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _USART_Init
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___fltol
     ___xxtofl
   _mostrar_rtc
     _LCD_Clear
     _LCD_String_xy
     _RTC_GetDateTime
       _BCD2DEC
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _read_prec_or_width
           _utoa
             ___lwdiv
             ___lwmod
             _pad
               _fputc
               _fputs
                 _fputc
   _mostrar_temperatura
     _DHT11_GetTemperature
       _DHT11_Read
     _LCD_Clear
     _LCD_String_xy
     _sprintf

 _ISR (ROOT)
   i2_LCD_Clear
     i2_LCD_Command
   i2_LCD_String_xy
     i2_LCD_Command
     i2_LCD_String
       i2_LCD_Char

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     54      86     53.8%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     71      78     83.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     158      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri May 09 18:11:40 2025

                    ___fldiv@aexp 0037                      ___fldiv@bexp 0036                      ___fldiv@sign 002F  
                    ?_LCD_Command 0001                                l50 1CDA                                l47 21CE  
                              l90 219E                                l93 1F16                                l96 1EC2  
                     ?_LCD_String 0013              _DHT11_GetTemperature 15C8                   __end_of_BCD2DEC 2262  
                             l110 2232                               l102 1E10                               l107 20C4  
                             l150 227E                               l302 16C6                               l153 2286  
                             l225 1B50                               l162 216C                               l147 221A  
                             l156 2276                               l182 1C5C                               l159 226E  
                             l175 2260                               l602 14C4                               l282 1FEE  
                             l290 1600                               l188 196E                               l285 2010  
                             l278 1FC4                               l294 1638                               l295 1636  
                             l289 1602                               l298 1660                               l803 1D4E  
                             l900 0FD2                               l901 0FC0                               l813 1DB2  
                             l806 1DAA                               l833 0A56                               l850 0B70  
                             l842 0D22                               l834 0A44                               l835 0A0A  
                             l860 0C2C                               l847 0BFE                               l960 110A  
                             l866 0CE6                               l859 0C3E                               l963 1266  
                             l892 0EDA                               l796 1D46                               l974 11FE  
                             l887 10B2                               l967 11A2                               l983 2136  
                             l889 0F16                               l898 0F5C                               l899 0F7A  
                             _PEN 7E2A                               _ISR 0008                               _SEN 7E28  
                             _pad 1B52                               wreg 0FE8                              ?_ISR 0001  
                     LCD_Char@dat 0012                      ___fltol@exp1 001A                              l1001 1B82  
                            l1020 1AB4                              l1004 1BC0                              l1006 1BDA  
                            l1024 1ABC                              l1016 1894                              l1041 13BE  
                            l1060 1A18                              l1071 2288                              l1048 204E  
                            l1068 208A                              l2301 1EB2                              l3031 2180  
                            l2303 21F6                              l2401 1F04                              l3033 2186  
                            l2305 21F6                              l3041 1BDC                              l3201 1D06  
                            l2403 1F06                              l3035 218C                              l3027 216E  
                            l2307 220C                              l3043 1C1C                              l2411 1DE0  
                            l3211 1D3A                              l3203 1D14                              l3037 2192  
                            l3029 2170                              l2413 2278                              l2421 2270  
                            l3045 1C2A                              l2405 1DB4                              l3213 1D40  
                            l3205 1D1A                              l3221 1D72                              l3301 12A8  
                            l3039 2198                              l2415 227C                              l2423 2274  
                            l2407 1DB8                              l3207 1D30                              l3223 1D80  
                            l3215 1D50                              l3231 1B52                              l3303 12AA  
                            l3311 12DC                              l2511 16BE                              l2503 1662  
                            l2441 2162                              l2433 2138                              l2417 2280  
                            l2425 2262                              l2601 094A                              l2521 2222  
                            l2409 1DDC                              l3209 1D38                              l3225 1D96  
                            l3217 1D62                              l3241 1B9E                              l3233 1B60  
                            l3321 1322                              l3313 12EC                              l3305 12B6  
                            l2505 1670                              l3401 16EE                              l2443 2164  
                            l2435 213C                              l2419 2284                              l2427 2266  
                            l2611 0976                              l2603 095C                              l2291 1E88  
                            l2283 1E72                              l3227 1D9E                              l3219 1D6A  
                            l3171 1970                              l3243 1BA2                              l3235 1B6C  
                            l3251 17CE                              l3323 133E                              l3315 1300  
                            l2371 1FDA                              l2363 1FC0                              l2507 1672  
                            l2515 16C4                              l3411 16F8                              l3403 16F0  
                            l2437 2142                              l2429 226E                              l2701 0BB4  
                            l2621 098A                              l2613 097A                              l2605 096A  
                            l2293 1E8A                              l2285 1E82                              l2541 20AA  
                            l3229 1DA4                              l3181 19E8                              l3173 1980  
                            l3245 1BCE                              l3237 1B7A                              l3261 1806  
                            l3253 17D6                              l3333 1378                              l3325 1356  
                            l3317 130E                              l3309 12BE                              l2381 200E  
                            l2373 1FDE                              l2509 1682                              l3421 172E  
                            l3413 16FA                              l3405 16F2                              l2391 1EDA  
                            l2439 214C                              l2711 0BDE                              l2703 0BC2  
                            l2631 099E                              l2623 098E                              l2615 097E  
                            l2607 096E                              l2519 221C                              l2295 1E98  
                            l2287 1E84                              l2543 20B2                              l2535 208E  
                            l2447 224E                              l2551 18DC                              l3175 1990  
                            l3191 206E                              l3239 1B8E                              l3271 1870  
                            l3255 17DC                              l3263 1822                              l3247 17BA  
                            l3327 1364                              l3335 1390                              l3319 1318  
                            l3351 2046                              l2375 1FEC                              l3431 177A  
                            l3423 1732                              l3415 16FC                              l3407 16F4  
                            l2393 1EDC                              l2385 1EC6                              l2713 0BEE  
                            l2705 0BC4                              l2641 09F2                              l2633 09A2  
                            l2625 0992                              l2617 0982                              l2609 0972  
                            l2561 087A                              l2297 1EAE                              l2289 1E86  
                            l2545 20B8                              l2537 208E                              l2553 18F6  
                            l3281 1A44                              l3193 1CDC                              l3177 199A  
                            l3185 2050                              l3265 1834                              l3273 187E  
                            l3257 17FE                              l3249 17BE                              l3345 2012  
                            l3361 211A                              l2377 1FFC                              l2369 1FD2  
                            l2481 15C8                              l3433 179C                              l3425 174C  
                            l3417 16FE                              l3409 16F6                              l2395 1EDE  
                            l2387 1ED6                              l2723 0C4E                              l2731 0CA4  
                            l2707 0BD2                              l2715 0BF0                              l2651 0A36  
                            l2643 0A02                              l2635 09A6                              l2627 0996  
                            l2619 0986                              l2571 08BA                              l2563 0888  
                            l2811 0E56                              l2803 0E32                              l2299 1EB0  
                            l2539 209E                              l2555 1910                              l2547 1896  
                            l3283 1A4C                              l3195 1CE4                              l3179 19B6  
                            l3187 205C                              l3267 1846                              l3259 1800  
                            l3339 139C                              l3291 1268                              l3347 201A  
                            l3363 212A                              l3355 2100                              l2379 1FFE  
                            l2491 15F4                              l2483 15CC                              l3371 21AC  
                            l3427 175C                              l3419 1714                              l2397 1EEC  
                            l2389 1ED8                              l2741 0CFA                              l2733 0CB4  
                            l2725 0C5A                              l2717 0C0E                              l2709 0BDA  
                            l2653 0A38                              l2645 0A18                              l2629 099A  
                            l2637 09AA                              l2581 08EA                              l2573 08BC  
                            l2565 088A                              l2821 0EA6                              l2813 0E70  
                            l2805 0E42                              l2901 1426                              l2557 196A  
                            l2549 18C2                              l3285 1A68                              l3277 1A1A  
                            l3197 1CF6                              l3189 206A                              l3269 1856  
                            l3293 128A                              l3349 202A                              l3357 210A  
                            l3381 1CB6                              l2493 1610                              l2485 15DA  
                            l3373 21BE                              l3429 1760                              l2399 1F02  
                            l2743 0CFC                              l2735 0CC4                              l2727 0C68  
                            l2719 0C24                              l2671 0AC0                              l2663 0A88  
                            l2655 0A42                              l2647 0A24                              l2639 09D6  
                            l2591 0912                              l2583 08EC                              l2567 089A  
                            l2575 08C2                              l2559 086E                              l2831 0F02  
                            l2823 0EB6                              l2815 0E80                              l2807 0E42  
                            l2911 1450                              l2903 142A                              l3391 1B48  
                            l3287 1A86                              l3279 1A22                              l3199 1CFE  
                            l3295 1292                              l3359 2112                              l3383 1CBA  
                            l3375 1C5E                              l2495 162A                              l2487 15E4  
                            l3367 21A0                              l2745 0D02                              l2737 0CE4  
                            l2729 0CA2                              l2673 0AC4                              l2665 0A98  
                            l2657 0A64                              l2681 0AE4                              l2649 0A28  
                            l2593 0922                              l2585 08F2                              l2577 08D2  
                            l2569 08AA                              l2841 0F42                              l2833 0F04  
                            l2825 0ECA                              l2817 0E90                              l2761 0D50  
                            l2753 0D24                              l2921 1478                              l2913 145A  
                            l2905 1438                              l3393 1B4C                              l3289 1A8E  
                            l3297 129E                              l3385 1CCA                              l3377 1C7A  
                            l2497 1646                              l2489 15E6                              l3369 21A8  
                            l2747 0D10                              l2739 0CF4                              l2683 0B0A  
                            l2691 0B60                              l2675 0AD2                              l2667 0AA6  
                            l2659 0A74                              l2595 0932                              l2587 0900  
                            l2579 08D8                              l2851 0FB8                              l2843 0F4C  
                            l2835 0F14                              l2827 0ED8                              l2819 0EA0  
                            l2771 0D88                              l2763 0D60                              l2755 0D30  
                            l2923 1484                              l2915 1464                              l3387 1ABE  
                            l3299 12A2                              l3379 1C98                              l3395 16C8  
                            l2749 0D12                              l2693 0B86                              l2685 0B3E  
                            l2677 0AD4                              l2669 0AB4                              l2597 0934  
                            l2589 0902                              l2861 1026                              l2845 0F5A  
                            l2837 0F26                              l2829 0EE4                              l2781 0DB4  
                            l2773 0D8E                              l2765 0D70                              l2757 0D3E  
                            l2925 1494                              l2941 1130                              l2933 10B6  
                            l3389 1AC2                              l3397 16EA                              ?_pad 001E  
                            l2695 0B96                              l2687 0B40                              l2679 0ADE  
                            l2599 093A                              l2871 108C                              l2855 0FE2  
                            l2863 102A                              l2839 0F3C                              l2847 0F6C  
                            l2791 0DEC                              l2783 0DC4                              l2775 0D94  
                            l2767 0D72                              l2759 0D40                              l2927 14A4  
                            l2951 118A                              l2935 10C6                              l3399 16EC  
                            l2689 0B50                              l2881 10A8                              l2873 108E  
                            l2865 1044                              l2857 0FEE                              l2849 0F8A  
                            l2793 0E02                              l2785 0DD4                              l2777 0DA2  
                            l2769 0D78                              l2929 14B4                              l2961 11EE  
                            l2953 118C                              l2945 1144                              l2937 10D4  
                            l2699 0BAA                              l2875 1092                              l2867 105A  
                            l2859 0FFC                              l2795 0E12                              l2787 0DD6  
                            l2779 0DA4                              l2891 13D6                              l2971 1246  
                            l2963 120C                              l2955 1198                              l2947 114C  
                            l2939 111A                              l2877 10A0                              l2869 1074  
                            l2797 0E1A                              l2789 0DDC                              l2973 1254  
                            l2965 120E                              l2957 11D4                              l2949 1158  
                            l2879 10A6                              l2799 0E1E                              l2895 13EA  
                            l2975 1256                              l2967 1212                              l2959 11E0  
                            l2897 1414                              l2889 13C0                              l2969 1236  
                            l2899 1416                              STR_1 0859                              STR_2 0817  
                            STR_3 0801                              STR_4 082C                              STR_5 083D  
                            STR_6 082C                              STR_7 084C                              STR_8 0864  
                            _CREN 7D5C                              u2000 0900                              u2001 08FC  
                            u2010 0912                              u2011 090E                              u2100 0A56  
                            u2020 0922                              u2101 0A52                              u2021 091E  
                            u2110 0A64                              u2030 095C                              u2111 0A60  
                            u2031 0958                              u2200 0BC2                              u2120 0A74  
                            u2040 096A                              u3000 1BC0                              u2201 0BBE  
                            u2121 0A70                              u2041 0966                              u3001 1BBC  
                            u2210 0BD2                              u2130 0AA6                              u2050 09D6  
                            u3010 1BCE                              u2211 0BCE                              u2131 0AA2  
                            u2051 09D2                              u3011 1BCA                              u2300 0CB4  
                            u2220 0BEE                              u2140 0AB4                              u2060 09EE  
                            u3020 1834                              u3100 12EC                              u2301 0CB0  
                            u2221 0BEA                              u2141 0AB0                              u2061 09E8  
                            u3021 1830                              u3101 12E8                              u2310 0CC4  
                            u2230 0BFE                              u2150 0AD2                              u2070 09F0  
                            u3030 1846                              u3110 130E                              u2311 0CC0  
                            u2231 0BFA                              u2151 0ACE                              u3031 1842  
                            u3111 130A                              u2320 0CE4                              u2240 0C0E  
                            u2160 0B0A                              u2080 0A18                              u2400 0DC4  
                            u3040 1856                              u3120 133E                              _LATD 0F8C  
                            u2321 0CE0                              u2241 0C0A                              u2161 0B06  
                            u2081 0A14                              u2401 0DC0                              u3041 1852  
                            u3121 133A                              u2330 0CF4                              u2250 0C24  
                            u2170 0B50                              u2090 0A36                              u2410 0E02  
                            u3050 1870                              u3130 2046                              u2331 0CF0  
                            u2251 0C20                              u2171 0B4C                              u2091 0A32  
                            u2411 0DFE                              u3051 186C                              u3131 2042  
                            u2340 0D10                              u2260 0C3A                              u2180 0B86  
                            u2500 0F8A                              u2420 0E42                              u3060 187E  
                            u3140 175C                              u2341 0D0C                              u2261 0C36  
                            u2181 0B82                              u2501 0F86                              u2421 0E3E  
                            u3061 187A                              u3141 1758                              u2270 0C4E  
                            u2190 0B96                              u2510 0FB8                              u2430 0EB6  
                            u2350 0D3E                              u3070 1A44                              u2271 0C4A  
                            u2191 0B92                              u2511 0FB4                              u2431 0EB2  
                            u2351 0D3A                              u3071 1A40                              u3207 15DE  
                            u1720 220C                              u2280 0C68                              u2520 0FCE  
                            u2440 0ED8                              u2360 0D50                              u2600 1438  
                            u3080 1AB4                              u1800 1FFC                              u1721 2208  
                            u2281 0C64                              u2521 0FCA                              u2441 0ED4  
                            u2361 0D4C                              u2601 1434                              u3081 1AB0  
                            u1801 1FF8                              u3217 1FD4                              u1730 221A  
                            u2290 0CA2                              u2530 0FE2                              u2450 0F02  
                            u2370 0D60                              u2610 144C                              u3090 128A  
                            u1810 200E                              u1731 2216                              u2291 0C9E  
                            u2531 0FDE                              u2451 0EFE                              u2371 0D5C  
                            u2611 1448                              u3227 1E90                              u3091 1286  
                            u1811 200A                              u2540 0FFC                              u2460 0F26  
                            u2380 0DA2                              u2620 1474                              u2700 11EE  
                            u1820 1DD8                              u1900 162A                              u2541 0FF8  
                            u2461 0F22                              u2381 0D9E                              u2621 1470  
                            u2701 11EA                              u3237 1EBA                              u1901 1626  
                            u3157 1720                              u2550 1044                              u2470 0F3C  
                            u2390 0DB4                              u2630 1494                              u2710 11FE  
                            u1830 1E00                              u1910 1646                              u2551 1040  
                            u2471 0F38                              u2391 0DB0                              u2631 1490  
                            u2711 11FA                              u3247 2228                              u1911 1642  
                            u3167 173E                              u2560 1074                              u2480 0F5A  
                            u2640 14A4                              u2720 120C                              u1840 1E10  
                            u1920 1660                              u3257 2176                              u2561 1070  
                            u2481 0F56                              u2641 14A0                              u2721 1208  
                            u1841 1E0C                              u1921 165C                              u3177 176C  
                            u1850 2160                              u2570 10A0                              u2490 0F7A  
                            u2730 1246                              u2650 10C6                              u1930 1682  
                            u3267 1EE4                              u1851 215A                              u2571 109C  
                            u2491 0F76                              u2731 1242                              u2651 10C2  
                            u1827 1DCE                              u1931 167E                              u3187 178A  
                            u2580 13D6                              u2740 1254                              u2660 10D4  
                            u2900 19E8                              u1780 1FD2                              u1940 16BE  
                            u3277 1F0E                              u2581 13D2                              u2741 1250  
                            u2661 10D0                              u1837 1DF6                              u2901 19E4  
                            u1781 1FCE                              u1941 16BA                              u3197 15D2  
                            u2590 140A                              u2670 1130                              u1950 209E  
                            u2910 208A                              u1790 1FEC                              u2671 112C  
                            u1951 209A                              u2911 2086                              u1791 1FE8  
                            u1960 0888                              u2680 1186                              u2920 1CF6  
                            u1880 15F4                              u1865 2162                              u1961 0884  
                            u2681 1182                              u2921 1CF2                              u1881 15F0  
                            u1970 089A                              u2690 11D0                              u2930 1D14  
                            u1890 1610                              u1971 0896                              u2595 1400  
                            u2691 11CC                              u2931 1D10                              u1891 160C  
                            u2780 1C2A                              u1980 08AA                              u2940 1D30  
                            u2781 1C26                              u1981 08A6                              u2941 1D2C  
                            u1990 08EA                              u2950 1D62                              u2870 1980  
                            u1991 08E6                              u2951 1D5E                              u2871 197C  
                            u2960 1D80                              u2880 1990                              u2961 1D7C  
                            u2881 198C                              u2970 1D96                              u2890 19B6  
                            u2971 1D92                              u2891 19B2                              u2980 1B60  
                            _RCEN 7E2B                              _RCIF 7CF5                              u2981 1B5C  
                            u2990 1B7A                              u2991 1B76                              i2l63 15AC  
                            i2l93 1FBE                              i2l96 1F6A                              _RSEN 7E29  
                            _TXIF 7CF4                       ?i2_LCD_Char 0001                              _dbuf 0096  
__end_of_I2C_Master_RepeatedStart 2288                              _main 16C8                              _prec 004A  
                            pad@i 0023                              pad@p 0020                              fsr0h 0FEA  
                            fsr1h 0FE2                              indf0 0FEF                              fsr2h 0FDA  
                            fsr0l 0FE9                              indf2 0FDF                              fsr1l 0FE1  
                            fsr2l 0FD9                              btemp 004F                              _utoa 17BA  
                            prodh 0FF4                              prodl 0FF3                              start 000E  
                 ___fldiv@new_exp 0030                     _LCD_String_xy 208C                      ___param_bank 0000  
                           ??_ISR 000A                             ??_pad 0022                  __end_of_LCD_Char 1EC4  
                __end_of_LCD_Init 21A0             ?_DHT11_GetTemperature 0001                  ?_I2C_Master_Read 0012  
                ?_I2C_Master_Wait 0001                  ?_I2C_Master_Stop 0001                     ___fltol@sign1 0019  
                 __end_of___fladd 0D24                             ?_main 0001                             _ACKEN 7E2C  
                           _ACKDT 7E2D                   __end_of___fldiv 10B4                   __end_of___fltol 14C6  
                           ?_utoa 0025                             _LATD0 7C60                             _LATD2 7C62  
                 __end_of___lwdiv 1D50                             i2l110 224A                             i2l102 1E6E  
                 __end_of___lwmod 1DB4                             i2l107 20FE                             _RCREG 0FAE  
                           _RCSTA 0FAB                      vfpfcnvrt@fmt 002E                             _SPBRG 0FAF  
                           _TRISD 0F95                             _TXREG 0FAD                             _TXSTA 0FAC  
                    ?i2_LCD_Clear 0001                             _flags 004C               read_prec_or_width@c 0015  
             read_prec_or_width@n 0016                             _fputc 1970                             _fputs 2050  
                __end_of_RTC_Init 1C5E                             pad@fp 001E                             _width 0048  
                           _putch 2288                             tablat 0FF5                             ttemp5 0050  
                           ttemp6 0053                             ttemp7 0057                             utoa@d 0026  
                           utoa@i 002B                             utoa@p 0028                             utoa@w 0029  
                           status 0FD8                             wtemp8 0050                   __end_of_sprintf 2138  
                  ?_LCD_String_xy 0015                       ?_USART_Init 0060                   __initialization 21D0  
                    __end_of_main 17BA                      __end_of_utoa 1896                         ??_BCD2DEC 0011  
                          ??_main 0094                            ??_utoa 0028                 __end_of_LCD_Clear 2234  
                   __activetblptr 0002        __end_of_read_prec_or_width 1ABE                 ?_I2C_Master_Start 0001  
               ?_I2C_Master_Write 0012                ??_I2C_Master_Start 0012                ??_I2C_Master_Write 0014  
                          ?_fputc 0011                            ?_fputs 0019                            ?_putch 0001  
                LCD_String_xy@msg 0016                  LCD_String_xy@pos 0015                  LCD_String_xy@row 0018  
                          i2l3001 1E16                            i2l3003 1E3A                            i2l3005 1E3E  
                          i2l3101 1590                            i2l3103 1594                            i2l3105 15AA  
                          i2l3061 20E4                            i2l3063 20EC                            i2l3055 20C8  
                          i2l3071 14E0                            i2l3065 20F2                            i2l3057 20C8  
                          i2l3081 1520                            i2l3073 14EE                            i2l3067 2234  
                          i2l3059 20D8                            i2l3083 1532                            i2l3075 1500  
                          i2l3091 1550                            i2l3069 223A                            i2l2461 1F1A  
                          i2l3093 155E                            i2l3085 1534                            i2l3077 1506  
                          i2l2471 1F32                            i2l2463 1F2A                            i2l3095 1562  
                          i2l3087 1538                            i2l3079 1518                            i2l2473 1F40  
                          i2l2465 1F2C                            i2l3097 1572                            i2l3089 154E  
                          i2l2475 1F56                            i2l2467 1F2E                            i2l3099 1576  
                          i2l2477 1F58                            i2l2469 1F30                            i2l2479 1F5A  
                          i2l2981 1F7E                            i2l2991 1F94                            i2l2983 1F80  
                          i2l2993 1FAA                            i2l2985 1F82                            i2l2995 1FAC  
                          i2l2987 1F84                            i2l2979 1F6E                            i2l2997 1FAE  
                          i2l2989 1F86                            i2l2999 1E12                     vfpfcnvrt@done 0034  
                          _SSPADD 0FC8                            _TRISB0 7C98                            _TRISB1 7C99  
                          _TRISC6 7CA6                            _TRISC7 7CA7                            _SSPBUF 0FC9  
                __end_of___xxtofl 1268                      ??_DHT11_Read 0011          _I2C_Master_RepeatedStart 2280  
                    vfprintf@cfmt 0039             DHT11_GetTemperature@i 001E                         ??___fladd 0040  
                       ??___fldiv 0027            ??_DHT11_GetTemperature 0013                         ??___fltol 0015  
                       ??___lwdiv 0015                         ??___lwmod 0015                            _estado 004D  
            read_prec_or_width@ap 0012                            clear_0 21D6                            clear_1 21E2  
                   ?i2_LCD_String 0003                            isa$std 0001                            pad@buf 001F  
                          fputc@c 0011                            fputs@c 001B                            fputs@i 001C  
                          fputs@s 0019                        BCD2DEC@val 0012                      ?_mostrar_rtc 0001  
                    __mediumconst 0800                            tblptrh 0FF7                            tblptrl 0FF6  
                          tblptru 0FF8                __end_of_DHT11_Read 2012                            putch@c 0001  
                __end_of_vfprintf 2050                            utoa@fp 0025                 ??i2_LCD_String_xy 0008  
                       ??_sprintf 0042                      ___xxtofl@arg 001B                      ___xxtofl@exp 001A  
                    ___xxtofl@val 0011                         ?_LCD_Char 0001                        __accesstop 0060  
         __end_of__initialization 21E8                         ?_LCD_Init 0001                   ??_LCD_String_xy 0018  
                   ___rparam_used 0001                        ___fltol@f1 0011                    __pcstackCOMRAM 0001  
                   __end_of_fputc 1A1A                     __end_of_fputs 208C                     __end_of_putch 228A  
                  ??i2_LCD_String 0005                      ??_LCD_String 0015                         ?_RTC_Init 0001  
                i2LCD_Command@cmd 0002                           ??_fputc 0014                           ??_fputs 001B  
                         ??_putch 0011                        __pbssBANK0 0096                      ??i2_LCD_Char 0001  
                      ??_LCD_Char 0011                        ??_LCD_Init 0013               _mostrar_temperatura 21A0  
              __end_of_LCD_String 1E12                           _BCD2DEC 224C                           _ACKSTAT 7E2E  
                      ??_RTC_Init 0016                     i2_LCD_Command 1F6C              ?_mostrar_temperatura 0001  
              __end_ofi2_LCD_Char 1F6C                         ?___xxtofl 0011                           _SSPCON1 0FC6  
                         _SSPCON2 0FC5                           _SSPSTAT 0FC7       DHT11_GetTemperature@timeout 001C  
                   LCD_String@msg 0013                      ??_USART_Init 0048                           __Hparam 0000  
                         __Lparam 0000                           ___fladd 086E                           ___fldiv 0D24  
                         ___fltol 13C0                           ___lwdiv 1CDC                           ___lwmod 1D50  
                       ?_vfprintf 0036                      __psmallconst 0800                    ?i2_LCD_Command 0001  
                         __pcinit 21D0             ??_mostrar_temperatura 0042                           __ramtop 0800  
                         __ptext0 16C8                           __ptext1 21A0                           __ptext2 15C8  
                         __ptext3 1FC0                           __ptext4 1C5E                           __ptext5 2100  
                         __ptext6 2012                           __ptext7 1268                           __ptext8 17BA  
                         __ptext9 1B52                    USART_Init@temp 0064             read_prec_or_width@fmt 0011  
                      ??___xxtofl 0015                         _LCD_Clear 221C                __end_of_USART_Init 1B52  
                         _sprintf 2100                    __pintcode_body 14C6              end_of_initialization 21E8  
      ??_I2C_Master_RepeatedStart 0012              __end_ofi2_LCD_String 1E70                           fputc@fp 0013  
                  LCD_Command@cmd 0012                     __Lmediumconst 0000                           int_func 14C6  
                         fputs@fp 001A                _read_prec_or_width 1A1A                 ??_RTC_GetDateTime 001C  
               __end_of_vfpfcnvrt 13C0                         _RCSTAbits 0FAB                  I2C_Master_Read@a 0012  
                         postdec2 0FDD               ?_read_prec_or_width 0011                           postinc0 0FEE  
                         postinc1 0FE6                           postinc2 0FDE                  vfpfcnvrt@convarg 0030  
                      ??_vfprintf 0039                   i2_LCD_String_xy 20C6                         _PORTAbits 0F80  
                       _PORTBbits 0F81                       ___fladd@grs 0047                     ___xxtofl@sign 0019  
                       _TRISAbits 0F92                         _TRISBbits 0F93                        ?_LCD_Clear 0001  
            ??_read_prec_or_width 0013                       ___fldiv@grs 0032                       ___fldiv@rem 002B  
             USART_Init@baud_rate 0060                i2LCD_String_xy@msg 0006                i2LCD_String_xy@pos 0005  
              i2LCD_String_xy@row 0008                   ??i2_LCD_Command 0001                     ??_LCD_Command 0011  
                     vfpfcnvrt@ap 002F                       vfpfcnvrt@cp 0035                       vfpfcnvrt@fp 002D  
                     RTC_Init@sec 0017               start_initialization 21D0                       __end_of_ISR 15C8  
                     __end_of_pad 1BDC                 ??_I2C_Master_Read 0014                 ??_I2C_Master_Wait 0011  
               ??_I2C_Master_Stop 0012             __end_of_LCD_String_xy 20C6           __end_ofi2_LCD_String_xy 2100  
                     vfprintf@fmt 0037                          ?_BCD2DEC 0001              RTC_GetDateTime@month 001A  
                       ___fladd@a 003C                         ___fladd@b 0038          DHT11_GetTemperature@data 0017  
                       ___fldiv@a 0023                         ___fldiv@b 001F               __end_of_LCD_Command 1F18  
                     __pbssCOMRAM 0048                     __pcstackBANK0 0060                     ??i2_LCD_Clear 0003  
                     ??_LCD_Clear 0013                        ISR@comando 0010                     i2LCD_Char@dat 0002  
                _I2C_Master_Start 2278                  _I2C_Master_Write 2262                  ___lwdiv@dividend 0011  
                       __pintcode 0008                          ?___fladd 0038                          ?___fldiv 001F  
                        ?___fltol 0011                          ?___lwdiv 0011                          ?___lwmod 0011  
                    i2_LCD_String 1E12                       __smallconst 0800                   _RTC_GetDateTime 1896  
                ___lwdiv@quotient 0016             LCD_String_xy@location 0019                          ?_sprintf 003A  
                        _LCD_Char 1E70               __end_ofi2_LCD_Clear 224C                          _LCD_Init 216E  
                        _LATAbits 0F89                          _PIE1bits 0F9D                  mostrar_rtc@fecha 006C  
                        i2u330_47 2240                          i2u331_47 1F8C                          i2u332_47 1FB6  
                        i2u280_40 14EE                          i2u280_41 14EA                          i2u328_47 1F38  
                        i2u281_40 1500                          i2u281_41 14FC                          _PIR1bits 0F9E  
                        i2u329_47 1F62                          i2u282_40 1518                          i2u282_41 1514  
                        i2u275_40 1E36                          i2u283_40 1532                          i2u283_41 152E  
                        i2u275_47 1E2C                          i2u276_40 1E5E                          i2u284_40 155E  
                        i2u284_41 155A                          i2u276_47 1E54                          i2u277_40 1E6E  
                        i2u285_40 1572                          i2u277_41 1E6A                          i2u285_41 156E  
                        i2u279_40 20D8                          i2u279_41 20D4                  ?i2_LCD_String_xy 0005  
     __end_of_mostrar_temperatura 21D0                       DHT11_Read@i 0012                       _LCD_Command 1EC4  
                       _vfpfcnvrt 1268                          _RTC_Init 1BDC                     ??_mostrar_rtc 0042  
             I2C_Master_Read@temp 0014                       _INTCON2bits 0FF1                       _INTCON3bits 0FF0  
                      _DHT11_Read 1FC0                          __Hrparam 0000                        vfprintf@ap 0038  
                        __Lrparam 0000                        vfprintf@fp 0036         mostrar_temperatura@buffer 006C  
         mostrar_temperatura@temp 007C               RTC_GetDateTime@hour 0016               RTC_GetDateTime@year 001B  
                 i2LCD_String@msg 0003         ?_I2C_Master_RepeatedStart 0001                        ?_vfpfcnvrt 002D  
         __end_of_RTC_GetDateTime 1970                        sprintf@fmt 003B                   _I2C_Master_Read 2138  
                        ___xxtofl 10B4                   _I2C_Master_Wait 21F6                   _I2C_Master_Stop 2270  
                 ___lwdiv@divisor 0013                   ___lwdiv@counter 0015                       i2_LCD_Clear 2234  
                        __ptext10 2050                          __ptext11 1970                          __ptext20 1E70  
                        __ptext12 2288                          __ptext21 221C                          __ptext13 1D50  
                        __ptext30 2278                          __ptext22 1ABE                          __ptext14 1CDC  
                        __ptext31 2280                          __ptext23 10B4                          __ptext15 1A1A  
                        __ptext40 2234                          __ptext32 2138                          __ptext24 13C0  
                        __ptext16 1896                          __ptext41 1F6C                          __ptext33 21F6  
                        __ptext25 0D24                          __ptext17 224C                          __ptext34 216E  
                        __ptext26 086E                          __ptext18 208C                          __ptext35 1EC4  
                        __ptext27 1BDC                          __ptext19 1DB4                          __ptext28 2262  
                        __ptext37 20C6                          __ptext29 2270                          __ptext38 1E12  
                        __ptext39 1F18               __end_of_mostrar_rtc 1CDC      __end_of_DHT11_GetTemperature 16C8  
                 mostrar_rtc@hora 007D                          isa$xinst 0000                          int$flags 004F  
                        _vfprintf 2012             __end_ofi2_LCD_Command 1FC0                        _LCD_String 1DB4  
        __end_of_I2C_Master_Start 2280          __end_of_I2C_Master_Write 2270                        _INTCONbits 0FF2  
         i2LCD_String_xy@location 0009                RTC_GetDateTime@day 0019                RTC_GetDateTime@min 0017  
              RTC_GetDateTime@sec 0018                    DHT11_Read@data 0011                          intlevel2 0000  
                       sprintf@ap 0060                        i2_LCD_Char 1F18                  ___lwmod@dividend 0011  
                     ?_DHT11_Read 0001           __end_of_I2C_Master_Read 216E           __end_of_I2C_Master_Wait 221C  
         __end_of_I2C_Master_Stop 2278                       ??_vfpfcnvrt 0030                  ?_RTC_GetDateTime 0016  
                        sprintf@f 0061                          sprintf@s 003A                 I2C_Master_Write@d 0012  
                 ___lwmod@divisor 0013                       _mostrar_rtc 1C5E                   ___lwmod@counter 0015  
                   mostrar_rtc@mo 0092                     ___fladd@signs 0044                      mostrar_rtc@d 0091  
                    mostrar_rtc@h 008E                      mostrar_rtc@m 008F                      mostrar_rtc@s 0090  
                    mostrar_rtc@y 0093                      ___fladd@aexp 0045                      ___fladd@bexp 0046  
                      _USART_Init 1ABE                    _sistema_activo 004E  
