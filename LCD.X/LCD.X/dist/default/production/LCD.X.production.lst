

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Mar 28 15:56:59 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000FE0                     bsr             equ	4064
    58   000FE9                     fsr0            equ	4073
    59   000FEA                     fsr0h           equ	4074
    60   000FE9                     fsr0l           equ	4073
    61   000FE1                     fsr1            equ	4065
    62   000FE2                     fsr1h           equ	4066
    63   000FE1                     fsr1l           equ	4065
    64   000FD9                     fsr2            equ	4057
    65   000FDA                     fsr2h           equ	4058
    66   000FD9                     fsr2l           equ	4057
    67   000FEF                     indf0           equ	4079
    68   000FE7                     indf1           equ	4071
    69   000FDF                     indf2           equ	4063
    70   000FF2                     intcon          equ	4082
    71   000000                     nvmcon          equ	0
    72   000FF9                     pcl             equ	4089
    73   000FFA                     pclath          equ	4090
    74   000FFB                     pclatu          equ	4091
    75   000FEB                     plusw0          equ	4075
    76   000FE3                     plusw1          equ	4067
    77   000FDB                     plusw2          equ	4059
    78   000FED                     postdec0        equ	4077
    79   000FE5                     postdec1        equ	4069
    80   000FDD                     postdec2        equ	4061
    81   000FEE                     postinc0        equ	4078
    82   000FE6                     postinc1        equ	4070
    83   000FDE                     postinc2        equ	4062
    84   000FEC                     preinc0         equ	4076
    85   000FE4                     preinc1         equ	4068
    86   000FDC                     preinc2         equ	4060
    87   000FF3                     prod            equ	4083
    88   000FF4                     prodh           equ	4084
    89   000FF3                     prodl           equ	4083
    90   000FD8                     status          equ	4056
    91   000FF5                     tablat          equ	4085
    92   000FF6                     tblptr          equ	4086
    93   000FF7                     tblptrh         equ	4087
    94   000FF6                     tblptrl         equ	4086
    95   000FF8                     tblptru         equ	4088
    96   000FFD                     tosl            equ	4093
    97   000FE8                     wreg            equ	4072
    98   000F62                     SPPDATA         equ	3938	;# 
    99   000F63                     SPPCFG          equ	3939	;# 
   100   000F64                     SPPEPS          equ	3940	;# 
   101   000F65                     SPPCON          equ	3941	;# 
   102   000F66                     UFRM            equ	3942	;# 
   103   000F66                     UFRML           equ	3942	;# 
   104   000F67                     UFRMH           equ	3943	;# 
   105   000F68                     UIR             equ	3944	;# 
   106   000F69                     UIE             equ	3945	;# 
   107   000F6A                     UEIR            equ	3946	;# 
   108   000F6B                     UEIE            equ	3947	;# 
   109   000F6C                     USTAT           equ	3948	;# 
   110   000F6D                     UCON            equ	3949	;# 
   111   000F6E                     UADDR           equ	3950	;# 
   112   000F6F                     UCFG            equ	3951	;# 
   113   000F70                     UEP0            equ	3952	;# 
   114   000F71                     UEP1            equ	3953	;# 
   115   000F72                     UEP2            equ	3954	;# 
   116   000F73                     UEP3            equ	3955	;# 
   117   000F74                     UEP4            equ	3956	;# 
   118   000F75                     UEP5            equ	3957	;# 
   119   000F76                     UEP6            equ	3958	;# 
   120   000F77                     UEP7            equ	3959	;# 
   121   000F78                     UEP8            equ	3960	;# 
   122   000F79                     UEP9            equ	3961	;# 
   123   000F7A                     UEP10           equ	3962	;# 
   124   000F7B                     UEP11           equ	3963	;# 
   125   000F7C                     UEP12           equ	3964	;# 
   126   000F7D                     UEP13           equ	3965	;# 
   127   000F7E                     UEP14           equ	3966	;# 
   128   000F7F                     UEP15           equ	3967	;# 
   129   000F80                     PORTA           equ	3968	;# 
   130   000F81                     PORTB           equ	3969	;# 
   131   000F82                     PORTC           equ	3970	;# 
   132   000F83                     PORTD           equ	3971	;# 
   133   000F84                     PORTE           equ	3972	;# 
   134   000F89                     LATA            equ	3977	;# 
   135   000F8A                     LATB            equ	3978	;# 
   136   000F8B                     LATC            equ	3979	;# 
   137   000F8C                     LATD            equ	3980	;# 
   138   000F8D                     LATE            equ	3981	;# 
   139   000F92                     TRISA           equ	3986	;# 
   140   000F92                     DDRA            equ	3986	;# 
   141   000F93                     TRISB           equ	3987	;# 
   142   000F93                     DDRB            equ	3987	;# 
   143   000F94                     TRISC           equ	3988	;# 
   144   000F94                     DDRC            equ	3988	;# 
   145   000F95                     TRISD           equ	3989	;# 
   146   000F95                     DDRD            equ	3989	;# 
   147   000F96                     TRISE           equ	3990	;# 
   148   000F96                     DDRE            equ	3990	;# 
   149   000F9B                     OSCTUNE         equ	3995	;# 
   150   000F9D                     PIE1            equ	3997	;# 
   151   000F9E                     PIR1            equ	3998	;# 
   152   000F9F                     IPR1            equ	3999	;# 
   153   000FA0                     PIE2            equ	4000	;# 
   154   000FA1                     PIR2            equ	4001	;# 
   155   000FA2                     IPR2            equ	4002	;# 
   156   000FA6                     EECON1          equ	4006	;# 
   157   000FA7                     EECON2          equ	4007	;# 
   158   000FA8                     EEDATA          equ	4008	;# 
   159   000FA9                     EEADR           equ	4009	;# 
   160   000FAB                     RCSTA           equ	4011	;# 
   161   000FAB                     RCSTA1          equ	4011	;# 
   162   000FAC                     TXSTA           equ	4012	;# 
   163   000FAC                     TXSTA1          equ	4012	;# 
   164   000FAD                     TXREG           equ	4013	;# 
   165   000FAD                     TXREG1          equ	4013	;# 
   166   000FAE                     RCREG           equ	4014	;# 
   167   000FAE                     RCREG1          equ	4014	;# 
   168   000FAF                     SPBRG           equ	4015	;# 
   169   000FAF                     SPBRG1          equ	4015	;# 
   170   000FB0                     SPBRGH          equ	4016	;# 
   171   000FB1                     T3CON           equ	4017	;# 
   172   000FB2                     TMR3            equ	4018	;# 
   173   000FB2                     TMR3L           equ	4018	;# 
   174   000FB3                     TMR3H           equ	4019	;# 
   175   000FB4                     CMCON           equ	4020	;# 
   176   000FB5                     CVRCON          equ	4021	;# 
   177   000FB6                     ECCP1AS         equ	4022	;# 
   178   000FB6                     CCP1AS          equ	4022	;# 
   179   000FB7                     ECCP1DEL        equ	4023	;# 
   180   000FB7                     CCP1DEL         equ	4023	;# 
   181   000FB8                     BAUDCON         equ	4024	;# 
   182   000FB8                     BAUDCTL         equ	4024	;# 
   183   000FBA                     CCP2CON         equ	4026	;# 
   184   000FBB                     CCPR2           equ	4027	;# 
   185   000FBB                     CCPR2L          equ	4027	;# 
   186   000FBC                     CCPR2H          equ	4028	;# 
   187   000FBD                     CCP1CON         equ	4029	;# 
   188   000FBD                     ECCP1CON        equ	4029	;# 
   189   000FBE                     CCPR1           equ	4030	;# 
   190   000FBE                     CCPR1L          equ	4030	;# 
   191   000FBF                     CCPR1H          equ	4031	;# 
   192   000FC0                     ADCON2          equ	4032	;# 
   193   000FC1                     ADCON1          equ	4033	;# 
   194   000FC2                     ADCON0          equ	4034	;# 
   195   000FC3                     ADRES           equ	4035	;# 
   196   000FC3                     ADRESL          equ	4035	;# 
   197   000FC4                     ADRESH          equ	4036	;# 
   198   000FC5                     SSPCON2         equ	4037	;# 
   199   000FC6                     SSPCON1         equ	4038	;# 
   200   000FC7                     SSPSTAT         equ	4039	;# 
   201   000FC8                     SSPADD          equ	4040	;# 
   202   000FC9                     SSPBUF          equ	4041	;# 
   203   000FCA                     T2CON           equ	4042	;# 
   204   000FCB                     PR2             equ	4043	;# 
   205   000FCB                     MEMCON          equ	4043	;# 
   206   000FCC                     TMR2            equ	4044	;# 
   207   000FCD                     T1CON           equ	4045	;# 
   208   000FCE                     TMR1            equ	4046	;# 
   209   000FCE                     TMR1L           equ	4046	;# 
   210   000FCF                     TMR1H           equ	4047	;# 
   211   000FD0                     RCON            equ	4048	;# 
   212   000FD1                     WDTCON          equ	4049	;# 
   213   000FD2                     HLVDCON         equ	4050	;# 
   214   000FD2                     LVDCON          equ	4050	;# 
   215   000FD3                     OSCCON          equ	4051	;# 
   216   000FD5                     T0CON           equ	4053	;# 
   217   000FD6                     TMR0            equ	4054	;# 
   218   000FD6                     TMR0L           equ	4054	;# 
   219   000FD7                     TMR0H           equ	4055	;# 
   220   000FD8                     STATUS          equ	4056	;# 
   221   000FD9                     FSR2            equ	4057	;# 
   222   000FD9                     FSR2L           equ	4057	;# 
   223   000FDA                     FSR2H           equ	4058	;# 
   224   000FDB                     PLUSW2          equ	4059	;# 
   225   000FDC                     PREINC2         equ	4060	;# 
   226   000FDD                     POSTDEC2        equ	4061	;# 
   227   000FDE                     POSTINC2        equ	4062	;# 
   228   000FDF                     INDF2           equ	4063	;# 
   229   000FE0                     BSR             equ	4064	;# 
   230   000FE1                     FSR1            equ	4065	;# 
   231   000FE1                     FSR1L           equ	4065	;# 
   232   000FE2                     FSR1H           equ	4066	;# 
   233   000FE3                     PLUSW1          equ	4067	;# 
   234   000FE4                     PREINC1         equ	4068	;# 
   235   000FE5                     POSTDEC1        equ	4069	;# 
   236   000FE6                     POSTINC1        equ	4070	;# 
   237   000FE7                     INDF1           equ	4071	;# 
   238   000FE8                     WREG            equ	4072	;# 
   239   000FE9                     FSR0            equ	4073	;# 
   240   000FE9                     FSR0L           equ	4073	;# 
   241   000FEA                     FSR0H           equ	4074	;# 
   242   000FEB                     PLUSW0          equ	4075	;# 
   243   000FEC                     PREINC0         equ	4076	;# 
   244   000FED                     POSTDEC0        equ	4077	;# 
   245   000FEE                     POSTINC0        equ	4078	;# 
   246   000FEF                     INDF0           equ	4079	;# 
   247   000FF0                     INTCON3         equ	4080	;# 
   248   000FF1                     INTCON2         equ	4081	;# 
   249   000FF2                     INTCON          equ	4082	;# 
   250   000FF3                     PROD            equ	4083	;# 
   251   000FF3                     PRODL           equ	4083	;# 
   252   000FF4                     PRODH           equ	4084	;# 
   253   000FF5                     TABLAT          equ	4085	;# 
   254   000FF6                     TBLPTR          equ	4086	;# 
   255   000FF6                     TBLPTRL         equ	4086	;# 
   256   000FF7                     TBLPTRH         equ	4087	;# 
   257   000FF8                     TBLPTRU         equ	4088	;# 
   258   000FF9                     PCLAT           equ	4089	;# 
   259   000FF9                     PC              equ	4089	;# 
   260   000FF9                     PCL             equ	4089	;# 
   261   000FFA                     PCLATH          equ	4090	;# 
   262   000FFB                     PCLATU          equ	4091	;# 
   263   000FFC                     STKPTR          equ	4092	;# 
   264   000FFD                     TOS             equ	4093	;# 
   265   000FFD                     TOSL            equ	4093	;# 
   266   000FFE                     TOSH            equ	4094	;# 
   267   000FFF                     TOSU            equ	4095	;# 
   268   000F62                     SPPDATA         equ	3938	;# 
   269   000F63                     SPPCFG          equ	3939	;# 
   270   000F64                     SPPEPS          equ	3940	;# 
   271   000F65                     SPPCON          equ	3941	;# 
   272   000F66                     UFRM            equ	3942	;# 
   273   000F66                     UFRML           equ	3942	;# 
   274   000F67                     UFRMH           equ	3943	;# 
   275   000F68                     UIR             equ	3944	;# 
   276   000F69                     UIE             equ	3945	;# 
   277   000F6A                     UEIR            equ	3946	;# 
   278   000F6B                     UEIE            equ	3947	;# 
   279   000F6C                     USTAT           equ	3948	;# 
   280   000F6D                     UCON            equ	3949	;# 
   281   000F6E                     UADDR           equ	3950	;# 
   282   000F6F                     UCFG            equ	3951	;# 
   283   000F70                     UEP0            equ	3952	;# 
   284   000F71                     UEP1            equ	3953	;# 
   285   000F72                     UEP2            equ	3954	;# 
   286   000F73                     UEP3            equ	3955	;# 
   287   000F74                     UEP4            equ	3956	;# 
   288   000F75                     UEP5            equ	3957	;# 
   289   000F76                     UEP6            equ	3958	;# 
   290   000F77                     UEP7            equ	3959	;# 
   291   000F78                     UEP8            equ	3960	;# 
   292   000F79                     UEP9            equ	3961	;# 
   293   000F7A                     UEP10           equ	3962	;# 
   294   000F7B                     UEP11           equ	3963	;# 
   295   000F7C                     UEP12           equ	3964	;# 
   296   000F7D                     UEP13           equ	3965	;# 
   297   000F7E                     UEP14           equ	3966	;# 
   298   000F7F                     UEP15           equ	3967	;# 
   299   000F80                     PORTA           equ	3968	;# 
   300   000F81                     PORTB           equ	3969	;# 
   301   000F82                     PORTC           equ	3970	;# 
   302   000F83                     PORTD           equ	3971	;# 
   303   000F84                     PORTE           equ	3972	;# 
   304   000F89                     LATA            equ	3977	;# 
   305   000F8A                     LATB            equ	3978	;# 
   306   000F8B                     LATC            equ	3979	;# 
   307   000F8C                     LATD            equ	3980	;# 
   308   000F8D                     LATE            equ	3981	;# 
   309   000F92                     TRISA           equ	3986	;# 
   310   000F92                     DDRA            equ	3986	;# 
   311   000F93                     TRISB           equ	3987	;# 
   312   000F93                     DDRB            equ	3987	;# 
   313   000F94                     TRISC           equ	3988	;# 
   314   000F94                     DDRC            equ	3988	;# 
   315   000F95                     TRISD           equ	3989	;# 
   316   000F95                     DDRD            equ	3989	;# 
   317   000F96                     TRISE           equ	3990	;# 
   318   000F96                     DDRE            equ	3990	;# 
   319   000F9B                     OSCTUNE         equ	3995	;# 
   320   000F9D                     PIE1            equ	3997	;# 
   321   000F9E                     PIR1            equ	3998	;# 
   322   000F9F                     IPR1            equ	3999	;# 
   323   000FA0                     PIE2            equ	4000	;# 
   324   000FA1                     PIR2            equ	4001	;# 
   325   000FA2                     IPR2            equ	4002	;# 
   326   000FA6                     EECON1          equ	4006	;# 
   327   000FA7                     EECON2          equ	4007	;# 
   328   000FA8                     EEDATA          equ	4008	;# 
   329   000FA9                     EEADR           equ	4009	;# 
   330   000FAB                     RCSTA           equ	4011	;# 
   331   000FAB                     RCSTA1          equ	4011	;# 
   332   000FAC                     TXSTA           equ	4012	;# 
   333   000FAC                     TXSTA1          equ	4012	;# 
   334   000FAD                     TXREG           equ	4013	;# 
   335   000FAD                     TXREG1          equ	4013	;# 
   336   000FAE                     RCREG           equ	4014	;# 
   337   000FAE                     RCREG1          equ	4014	;# 
   338   000FAF                     SPBRG           equ	4015	;# 
   339   000FAF                     SPBRG1          equ	4015	;# 
   340   000FB0                     SPBRGH          equ	4016	;# 
   341   000FB1                     T3CON           equ	4017	;# 
   342   000FB2                     TMR3            equ	4018	;# 
   343   000FB2                     TMR3L           equ	4018	;# 
   344   000FB3                     TMR3H           equ	4019	;# 
   345   000FB4                     CMCON           equ	4020	;# 
   346   000FB5                     CVRCON          equ	4021	;# 
   347   000FB6                     ECCP1AS         equ	4022	;# 
   348   000FB6                     CCP1AS          equ	4022	;# 
   349   000FB7                     ECCP1DEL        equ	4023	;# 
   350   000FB7                     CCP1DEL         equ	4023	;# 
   351   000FB8                     BAUDCON         equ	4024	;# 
   352   000FB8                     BAUDCTL         equ	4024	;# 
   353   000FBA                     CCP2CON         equ	4026	;# 
   354   000FBB                     CCPR2           equ	4027	;# 
   355   000FBB                     CCPR2L          equ	4027	;# 
   356   000FBC                     CCPR2H          equ	4028	;# 
   357   000FBD                     CCP1CON         equ	4029	;# 
   358   000FBD                     ECCP1CON        equ	4029	;# 
   359   000FBE                     CCPR1           equ	4030	;# 
   360   000FBE                     CCPR1L          equ	4030	;# 
   361   000FBF                     CCPR1H          equ	4031	;# 
   362   000FC0                     ADCON2          equ	4032	;# 
   363   000FC1                     ADCON1          equ	4033	;# 
   364   000FC2                     ADCON0          equ	4034	;# 
   365   000FC3                     ADRES           equ	4035	;# 
   366   000FC3                     ADRESL          equ	4035	;# 
   367   000FC4                     ADRESH          equ	4036	;# 
   368   000FC5                     SSPCON2         equ	4037	;# 
   369   000FC6                     SSPCON1         equ	4038	;# 
   370   000FC7                     SSPSTAT         equ	4039	;# 
   371   000FC8                     SSPADD          equ	4040	;# 
   372   000FC9                     SSPBUF          equ	4041	;# 
   373   000FCA                     T2CON           equ	4042	;# 
   374   000FCB                     PR2             equ	4043	;# 
   375   000FCB                     MEMCON          equ	4043	;# 
   376   000FCC                     TMR2            equ	4044	;# 
   377   000FCD                     T1CON           equ	4045	;# 
   378   000FCE                     TMR1            equ	4046	;# 
   379   000FCE                     TMR1L           equ	4046	;# 
   380   000FCF                     TMR1H           equ	4047	;# 
   381   000FD0                     RCON            equ	4048	;# 
   382   000FD1                     WDTCON          equ	4049	;# 
   383   000FD2                     HLVDCON         equ	4050	;# 
   384   000FD2                     LVDCON          equ	4050	;# 
   385   000FD3                     OSCCON          equ	4051	;# 
   386   000FD5                     T0CON           equ	4053	;# 
   387   000FD6                     TMR0            equ	4054	;# 
   388   000FD6                     TMR0L           equ	4054	;# 
   389   000FD7                     TMR0H           equ	4055	;# 
   390   000FD8                     STATUS          equ	4056	;# 
   391   000FD9                     FSR2            equ	4057	;# 
   392   000FD9                     FSR2L           equ	4057	;# 
   393   000FDA                     FSR2H           equ	4058	;# 
   394   000FDB                     PLUSW2          equ	4059	;# 
   395   000FDC                     PREINC2         equ	4060	;# 
   396   000FDD                     POSTDEC2        equ	4061	;# 
   397   000FDE                     POSTINC2        equ	4062	;# 
   398   000FDF                     INDF2           equ	4063	;# 
   399   000FE0                     BSR             equ	4064	;# 
   400   000FE1                     FSR1            equ	4065	;# 
   401   000FE1                     FSR1L           equ	4065	;# 
   402   000FE2                     FSR1H           equ	4066	;# 
   403   000FE3                     PLUSW1          equ	4067	;# 
   404   000FE4                     PREINC1         equ	4068	;# 
   405   000FE5                     POSTDEC1        equ	4069	;# 
   406   000FE6                     POSTINC1        equ	4070	;# 
   407   000FE7                     INDF1           equ	4071	;# 
   408   000FE8                     WREG            equ	4072	;# 
   409   000FE9                     FSR0            equ	4073	;# 
   410   000FE9                     FSR0L           equ	4073	;# 
   411   000FEA                     FSR0H           equ	4074	;# 
   412   000FEB                     PLUSW0          equ	4075	;# 
   413   000FEC                     PREINC0         equ	4076	;# 
   414   000FED                     POSTDEC0        equ	4077	;# 
   415   000FEE                     POSTINC0        equ	4078	;# 
   416   000FEF                     INDF0           equ	4079	;# 
   417   000FF0                     INTCON3         equ	4080	;# 
   418   000FF1                     INTCON2         equ	4081	;# 
   419   000FF2                     INTCON          equ	4082	;# 
   420   000FF3                     PROD            equ	4083	;# 
   421   000FF3                     PRODL           equ	4083	;# 
   422   000FF4                     PRODH           equ	4084	;# 
   423   000FF5                     TABLAT          equ	4085	;# 
   424   000FF6                     TBLPTR          equ	4086	;# 
   425   000FF6                     TBLPTRL         equ	4086	;# 
   426   000FF7                     TBLPTRH         equ	4087	;# 
   427   000FF8                     TBLPTRU         equ	4088	;# 
   428   000FF9                     PCLAT           equ	4089	;# 
   429   000FF9                     PC              equ	4089	;# 
   430   000FF9                     PCL             equ	4089	;# 
   431   000FFA                     PCLATH          equ	4090	;# 
   432   000FFB                     PCLATU          equ	4091	;# 
   433   000FFC                     STKPTR          equ	4092	;# 
   434   000FFD                     TOS             equ	4093	;# 
   435   000FFD                     TOSL            equ	4093	;# 
   436   000FFE                     TOSH            equ	4094	;# 
   437   000FFF                     TOSU            equ	4095	;# 
   438                           
   439                           	psect	idataCOMRAM
   440   0009FA                     __pidataCOMRAM:
   441                           	callstack 0
   442                           
   443                           ;initializer for _password
   444   0009FA  32                 	db	50
   445   0009FB  30                 	db	48
   446   0009FC  32                 	db	50
   447   0009FD  31                 	db	49
   448   0009FE  00                 	db	0
   449   007C61                     _LATD1          set	31841
   450   007C60                     _LATD0          set	31840
   451   007F8F                     _RBPU           set	32655
   452   000F8C                     _LATD           set	3980
   453   000F95                     _TRISD          set	3989
   454   000FD3                     _OSCCON         set	4051
   455                           
   456                           	psect	smallconst
   457   000800                     __psmallconst:
   458                           	callstack 0
   459   000800  00                 	db	0
   460   000801                     STR_2:
   461   000801  4D                 	db	77	;'M'
   462   000802  49                 	db	73	;'I'
   463   000803  43                 	db	67	;'C'
   464   000804  52                 	db	82	;'R'
   465   000805  4F                 	db	79	;'O'
   466   000806  43                 	db	67	;'C'
   467   000807  4F                 	db	79	;'O'
   468   000808  4E                 	db	78	;'N'
   469   000809  54                 	db	84	;'T'
   470   00080A  52                 	db	82	;'R'
   471   00080B  4F                 	db	79	;'O'
   472   00080C  4C                 	db	76	;'L'
   473   00080D  00                 	db	0
   474   00080E                     STR_1:
   475   00080E  57                 	db	87	;'W'
   476   00080F  45                 	db	69	;'E'
   477   000810  4C                 	db	76	;'L'
   478   000811  43                 	db	67	;'C'
   479   000812  4F                 	db	79	;'O'
   480   000813  4D                 	db	77	;'M'
   481   000814  45                 	db	69	;'E'
   482   000815  00                 	db	0
   483   000816  00                 	db	0	; dummy byte at the end
   484   000800                     __smallconst    set	__psmallconst
   485   000800                     __mediumconst   set	__psmallconst
   486   000001                     __activetblptr  equ	1
   487                           
   488                           ; #config settings
   489                           
   490                           	psect	cinit
   491   00095A                     __pcinit:
   492                           	callstack 0
   493   00095A                     start_initialization:
   494                           	callstack 0
   495   00095A                     __initialization:
   496                           	callstack 0
   497                           
   498                           ; Initialize objects allocated to COMRAM (5 bytes)
   499                           ; load TBLPTR registers with __pidataCOMRAM
   500   00095A  0EFA               	movlw	low __pidataCOMRAM
   501   00095C  6EF6               	movwf	tblptrl,c
   502   00095E  0E09               	movlw	high __pidataCOMRAM
   503   000960  6EF7               	movwf	tblptrh,c
   504   000962  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   505   000964  6EF8               	movwf	tblptru,c
   506   000966  EE00  F010         	lfsr	0,__pdataCOMRAM
   507   00096A  EE10 F005          	lfsr	1,5
   508   00096E                     copy_data0:
   509   00096E  0009               	tblrd		*+
   510   000970  CFF5 FFEE          	movff	tablat,postinc0
   511   000974  50E5               	movf	postdec1,w,c
   512   000976  50E1               	movf	fsr1l,w,c
   513   000978  E1FA               	bnz	copy_data0
   514                           
   515                           ; Clear objects allocated to COMRAM (6 bytes)
   516   00097A  6A0F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   517   00097C  6A0E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   518   00097E  6A0D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   519   000980  6A0C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   520   000982  6A0B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   521   000984  6A0A               	clrf	__pbssCOMRAM& (0+255),c
   522   000986                     end_of_initialization:
   523                           	callstack 0
   524   000986                     __end_of__initialization:
   525                           	callstack 0
   526   000986  0E00               	movlw	low (__Lsmallconst shr (0+16))
   527   000988  6EF8               	movwf	tblptru,c
   528   00098A  0E08               	movlw	high __Lsmallconst
   529   00098C  6EF7               	movwf	tblptrh,c
   530   00098E  0100               	movlb	0
   531   000990  EF0C  F004         	goto	_main	;jump to C main() function
   532                           
   533                           	psect	bssCOMRAM
   534   00000A                     __pbssCOMRAM:
   535                           	callstack 0
   536   00000A                     _pass_user:
   537                           	callstack 0
   538   00000A                     	ds	5
   539   00000F                     _idx:
   540                           	callstack 0
   541   00000F                     	ds	1
   542                           
   543                           	psect	dataCOMRAM
   544   000010                     __pdataCOMRAM:
   545                           	callstack 0
   546   000010                     _password:
   547                           	callstack 0
   548   000010                     	ds	5
   549                           
   550                           	psect	cstackCOMRAM
   551   000001                     __pcstackCOMRAM:
   552                           	callstack 0
   553   000001                     ??_LCD_Command:
   554   000001                     ??_LCD_Char:
   555                           
   556                           ; 1 bytes @ 0x0
   557   000001                     	ds	1
   558   000002                     LCD_Command@cmd:
   559                           	callstack 0
   560   000002                     LCD_Char@dat:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x1
   564   000002                     	ds	1
   565   000003                     LCD_String@msg:
   566                           	callstack 0
   567   000003                     ??_LCD_Init:
   568   000003                     
   569                           ; 1 bytes @ 0x2
   570   000003                     	ds	1
   571   000004                     LCD_String_xy@pos:
   572                           	callstack 0
   573   000004                     
   574                           ; 1 bytes @ 0x3
   575   000004                     	ds	1
   576   000005                     LCD_String_xy@msg:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x4
   580   000005                     	ds	1
   581   000006                     LCD_String_xy@row:
   582                           	callstack 0
   583   000006                     
   584                           ; 1 bytes @ 0x5
   585   000006                     	ds	1
   586   000007                     LCD_String_xy@location:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x6
   590   000007                     	ds	1
   591   000008                     ??_main:
   592                           
   593                           ; 1 bytes @ 0x7
   594   000008                     	ds	2
   595                           
   596 ;;
   597 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   598 ;;
   599 ;; *************** function _main *****************
   600 ;; Defined at:
   601 ;;		line 36 in file "lcd_main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  key             1    0        unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   615 ;;      Params:         0       0       0       0       0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0       0       0
   617 ;;      Temps:          2       0       0       0       0       0       0       0       0
   618 ;;      Totals:         2       0       0       0       0       0       0       0       0
   619 ;;Total ram usage:        2 bytes
   620 ;; Hardware stack levels required when called: 3
   621 ;; This function calls:
   622 ;;		_LCD_Clear
   623 ;;		_LCD_Command
   624 ;;		_LCD_Init
   625 ;;		_LCD_String_xy
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text0
   632   000818                     __ptext0:
   633                           	callstack 0
   634   000818                     _main:
   635                           	callstack 28
   636   000818                     
   637                           ;lcd_main.c: 38:     char key;;lcd_main.c: 39:     OSCCON = 0x72;
   638   000818  0E72               	movlw	114
   639   00081A  6ED3               	movwf	211,c	;volatile
   640   00081C                     
   641                           ;lcd_main.c: 41:     RBPU=0;
   642   00081C  9EF1               	bcf	4081,7,c	;volatile
   643   00081E                     
   644                           ;lcd_main.c: 42:     LCD_Init();
   645   00081E  ECCA  F004         	call	_LCD_Init	;wreg free
   646   000822                     
   647                           ;lcd_main.c: 43:     LCD_String_xy(0,0,"WELCOME");
   648   000822  0E00               	movlw	0
   649   000824  6E04               	movwf	LCD_String_xy@pos^0,c
   650   000826  0E0E               	movlw	low STR_1
   651   000828  6E05               	movwf	LCD_String_xy@msg^0,c
   652   00082A  0E00               	movlw	0
   653   00082C  EC8F  F004         	call	_LCD_String_xy
   654   000830                     
   655                           ;lcd_main.c: 44:     LCD_Command(0xC0);
   656   000830  0EC0               	movlw	192
   657   000832  EC67  F004         	call	_LCD_Command
   658   000836                     l869:
   659                           
   660                           ;lcd_main.c: 46:     {;lcd_main.c: 47:         LCD_String_xy(0,0,"MICROCONTROL");
   661   000836  0E00               	movlw	0
   662   000838  6E04               	movwf	LCD_String_xy@pos^0,c
   663   00083A  0E01               	movlw	low STR_2
   664   00083C  6E05               	movwf	LCD_String_xy@msg^0,c
   665   00083E  0E00               	movlw	0
   666   000840  EC8F  F004         	call	_LCD_String_xy
   667   000844                     
   668                           ;lcd_main.c: 48:   _delay((unsigned long)((2000)*(8000000/4000.0)));
   669   000844  0E15               	movlw	21
   670   000846  6E09               	movwf	(??_main+1)^0,c
   671   000848  0E4B               	movlw	75
   672   00084A  6E08               	movwf	??_main^0,c
   673   00084C  0EBE               	movlw	190
   674   00084E                     u57:
   675   00084E  2EE8               	decfsz	wreg,f,c
   676   000850  D7FE               	bra	u57
   677   000852  2E08               	decfsz	??_main^0,f,c
   678   000854  D7FC               	bra	u57
   679   000856  2E09               	decfsz	(??_main+1)^0,f,c
   680   000858  D7FA               	bra	u57
   681   00085A  D000               	nop2	
   682   00085C                     
   683                           ;lcd_main.c: 49:   LCD_Clear();
   684   00085C  ECF9  F004         	call	_LCD_Clear	;wreg free
   685   000860                     
   686                           ;lcd_main.c: 50:   _delay((unsigned long)((1000)*(8000000/4000.0)));
   687   000860  0E0B               	movlw	11
   688   000862  6E09               	movwf	(??_main+1)^0,c
   689   000864  0E26               	movlw	38
   690   000866  6E08               	movwf	??_main^0,c
   691   000868  0E5E               	movlw	94
   692   00086A                     u67:
   693   00086A  2EE8               	decfsz	wreg,f,c
   694   00086C  D7FE               	bra	u67
   695   00086E  2E08               	decfsz	??_main^0,f,c
   696   000870  D7FC               	bra	u67
   697   000872  2E09               	decfsz	(??_main+1)^0,f,c
   698   000874  D7FA               	bra	u67
   699   000876  EF1B  F004         	goto	l869
   700   00087A  EFFE  F03F         	goto	start
   701   00087E                     __end_of_main:
   702                           	callstack 0
   703                           
   704 ;; *************** function _LCD_String_xy *****************
   705 ;; Defined at:
   706 ;;		line 82 in file "LCD.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  row             1    wreg     unsigned char 
   709 ;;  pos             1    3[COMRAM] unsigned char 
   710 ;;  msg             1    4[COMRAM] PTR const unsigned char 
   711 ;;		 -> STR_2(13), STR_1(8), 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  row             1    5[COMRAM] unsigned char 
   714 ;;  location        1    6[COMRAM] unsigned char 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   724 ;;      Params:         2       0       0       0       0       0       0       0       0
   725 ;;      Locals:         2       0       0       0       0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0
   727 ;;      Totals:         4       0       0       0       0       0       0       0       0
   728 ;;Total ram usage:        4 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 2
   731 ;; This function calls:
   732 ;;		_LCD_Command
   733 ;;		_LCD_String
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text1
   740   00091E                     __ptext1:
   741                           	callstack 0
   742   00091E                     _LCD_String_xy:
   743                           	callstack 28
   744                           
   745                           ;incstack = 0
   746                           ;LCD_String_xy@row stored from wreg
   747   00091E  6E06               	movwf	LCD_String_xy@row^0,c
   748   000920                     
   749                           ;LCD.c: 85:     if(row<=1)
   750   000920  0E02               	movlw	2
   751   000922  6006               	cpfslt	LCD_String_xy@row^0,c
   752   000924  EF96  F004         	goto	u41
   753   000928  EF98  F004         	goto	u40
   754   00092C                     u41:
   755   00092C  EFA1  F004         	goto	l853
   756   000930                     u40:
   757   000930                     
   758                           ;LCD.c: 86:     {;LCD.c: 87:         location = (0x80) | ((pos) & 0x0f);
   759   000930  5004               	movf	LCD_String_xy@pos^0,w,c
   760   000932  0B0F               	andlw	15
   761   000934  0980               	iorlw	128
   762   000936  6E07               	movwf	LCD_String_xy@location^0,c
   763   000938                     
   764                           ;LCD.c: 88:         LCD_Command(location);
   765   000938  5007               	movf	LCD_String_xy@location^0,w,c
   766   00093A  EC67  F004         	call	_LCD_Command
   767                           
   768                           ;LCD.c: 89:     }
   769   00093E  EFA8  F004         	goto	l857
   770   000942                     l853:
   771                           
   772                           ;LCD.c: 91:     {;LCD.c: 92:         location = (0xC0) | ((pos) & 0x0f);
   773   000942  5004               	movf	LCD_String_xy@pos^0,w,c
   774   000944  0B0F               	andlw	15
   775   000946  09C0               	iorlw	192
   776   000948  6E07               	movwf	LCD_String_xy@location^0,c
   777   00094A                     
   778                           ;LCD.c: 93:         LCD_Command(location);
   779   00094A  5007               	movf	LCD_String_xy@location^0,w,c
   780   00094C  EC67  F004         	call	_LCD_Command
   781   000950                     l857:
   782                           
   783                           ;LCD.c: 97:     LCD_String(msg);
   784   000950  C005  F003         	movff	LCD_String_xy@msg,LCD_String@msg
   785   000954  ECE3  F004         	call	_LCD_String	;wreg free
   786   000958  0012               	return		;funcret
   787   00095A                     __end_of_LCD_String_xy:
   788                           	callstack 0
   789                           
   790 ;; *************** function _LCD_String *****************
   791 ;; Defined at:
   792 ;;		line 72 in file "LCD.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  msg             1    2[COMRAM] PTR const unsigned char 
   795 ;;		 -> STR_2(13), STR_1(8), 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   807 ;;      Params:         1       0       0       0       0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0       0       0       0       0
   810 ;;      Totals:         1       0       0       0       0       0       0       0       0
   811 ;;Total ram usage:        1 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; Hardware stack levels required when called: 1
   814 ;; This function calls:
   815 ;;		_LCD_Char
   816 ;; This function is called by:
   817 ;;		_LCD_String_xy
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text2
   822   0009C6                     __ptext2:
   823                           	callstack 0
   824   0009C6                     _LCD_String:
   825                           	callstack 28
   826   0009C6                     
   827                           ;LCD.c: 72: void LCD_String(const char *msg);LCD.c: 73: {;LCD.c: 74:  while((*msg)!=0)
   828   0009C6  EFEC  F004         	goto	l843
   829   0009CA                     l839:
   830                           
   831                           ;LCD.c: 75:  {;LCD.c: 76:    LCD_Char(*msg);
   832   0009CA  C003  FFF6         	movff	LCD_String@msg,tblptrl
   833   0009CE                     	if	0	;There is only one active tblptr byte
   834   0009CE                     	endif
   835   0009CE                     	if	0	;tblptru may be non-zero
   836   0009CE                     	endif
   837   0009CE                     	if	0	;tblptru may be non-zero
   838   0009CE                     	endif
   839   0009CE  0008               	tblrd		*
   840   0009D0  50F5               	movf	tablat,w,c
   841   0009D2  EC3F  F004         	call	_LCD_Char
   842   0009D6                     
   843                           ;LCD.c: 77:    msg++;
   844   0009D6  2A03               	incf	LCD_String@msg^0,f,c
   845   0009D8                     l843:
   846                           
   847                           ;LCD.c: 74:  while((*msg)!=0)
   848   0009D8  C003  FFF6         	movff	LCD_String@msg,tblptrl
   849   0009DC                     	if	0	;There is only one active tblptr byte
   850   0009DC                     	endif
   851   0009DC                     	if	0	;tblptru may be non-zero
   852   0009DC                     	endif
   853   0009DC                     	if	0	;tblptru may be non-zero
   854   0009DC                     	endif
   855   0009DC  0008               	tblrd		*
   856   0009DE  50F5               	movf	tablat,w,c
   857   0009E0  0900               	iorlw	0
   858   0009E2  A4D8               	btfss	status,2,c
   859   0009E4  EFF6  F004         	goto	u31
   860   0009E8  EFF8  F004         	goto	u30
   861   0009EC                     u31:
   862   0009EC  EFE5  F004         	goto	l839
   863   0009F0                     u30:
   864   0009F0  0012               	return		;funcret
   865   0009F2                     __end_of_LCD_String:
   866                           	callstack 0
   867                           
   868 ;; *************** function _LCD_Char *****************
   869 ;; Defined at:
   870 ;;		line 57 in file "LCD.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  dat             1    wreg     unsigned char 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  dat             1    1[COMRAM] unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   884 ;;      Params:         0       0       0       0       0       0       0       0       0
   885 ;;      Locals:         1       0       0       0       0       0       0       0       0
   886 ;;      Temps:          1       0       0       0       0       0       0       0       0
   887 ;;      Totals:         2       0       0       0       0       0       0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_LCD_String
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text3
   898   00087E                     __ptext3:
   899                           	callstack 0
   900   00087E                     _LCD_Char:
   901                           	callstack 28
   902                           
   903                           ;incstack = 0
   904                           ;LCD_Char@dat stored from wreg
   905   00087E  6E02               	movwf	LCD_Char@dat^0,c
   906   000880                     
   907                           ;LCD.c: 57: void LCD_Char(unsigned char dat);LCD.c: 58: {;LCD.c: 59:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
   908   000880  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
   909   000884  0EF0               	movlw	240
   910   000886  1601               	andwf	??_LCD_Char^0,f,c
   911   000888  508C               	movf	140,w,c	;volatile
   912   00088A  0B0F               	andlw	15
   913   00088C  1001               	iorwf	??_LCD_Char^0,w,c
   914   00088E  6E8C               	movwf	140,c	;volatile
   915   000890                     
   916                           ;LCD.c: 60:  LATD0 = 1;
   917   000890  808C               	bsf	3980,0,c	;volatile
   918   000892                     
   919                           ;LCD.c: 61:  LATD1 = 1;
   920   000892  828C               	bsf	3980,1,c	;volatile
   921   000894                     
   922                           ;LCD.c: 62:  __nop();
   923   000894  0000               	nop	
   924   000896                     
   925                           ;LCD.c: 63:  LATD1 = 0;
   926   000896  928C               	bcf	3980,1,c	;volatile
   927   000898                     
   928                           ;LCD.c: 64:  _delay((unsigned long)((1)*(8000000/4000.0)));
   929   000898  0E03               	movlw	3
   930   00089A  6E01               	movwf	??_LCD_Char^0,c
   931   00089C  0E98               	movlw	152
   932   00089E                     u77:
   933   00089E  2EE8               	decfsz	wreg,f,c
   934   0008A0  D7FE               	bra	u77
   935   0008A2  2E01               	decfsz	??_LCD_Char^0,f,c
   936   0008A4  D7FC               	bra	u77
   937   0008A6                     
   938                           ;LCD.c: 65:     LATD = (LATD & 0x0f) | (dat<<4);
   939   0008A6  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
   940   0008AA  3A01               	swapf	??_LCD_Char^0,f,c
   941   0008AC  0EF0               	movlw	240
   942   0008AE  1601               	andwf	??_LCD_Char^0,f,c
   943   0008B0  508C               	movf	140,w,c	;volatile
   944   0008B2  0B0F               	andlw	15
   945   0008B4  1001               	iorwf	??_LCD_Char^0,w,c
   946   0008B6  6E8C               	movwf	140,c	;volatile
   947   0008B8                     
   948                           ;LCD.c: 66:  LATD1 = 1;
   949   0008B8  828C               	bsf	3980,1,c	;volatile
   950   0008BA                     
   951                           ;LCD.c: 67:  __nop();
   952   0008BA  0000               	nop	
   953   0008BC                     
   954                           ;LCD.c: 68:  LATD1 = 0;
   955   0008BC  928C               	bcf	3980,1,c	;volatile
   956                           
   957                           ;LCD.c: 69:  _delay((unsigned long)((3)*(8000000/4000.0)));
   958   0008BE  0E08               	movlw	8
   959   0008C0  6E01               	movwf	??_LCD_Char^0,c
   960   0008C2  0ECA               	movlw	202
   961   0008C4                     u87:
   962   0008C4  2EE8               	decfsz	wreg,f,c
   963   0008C6  D7FE               	bra	u87
   964   0008C8  2E01               	decfsz	??_LCD_Char^0,f,c
   965   0008CA  D7FC               	bra	u87
   966   0008CC  0012               	return		;funcret
   967   0008CE                     __end_of_LCD_Char:
   968                           	callstack 0
   969                           
   970 ;; *************** function _LCD_Init *****************
   971 ;; Defined at:
   972 ;;		line 28 in file "LCD.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   986 ;;      Params:         0       0       0       0       0       0       0       0       0
   987 ;;      Locals:         0       0       0       0       0       0       0       0       0
   988 ;;      Temps:          1       0       0       0       0       0       0       0       0
   989 ;;      Totals:         1       0       0       0       0       0       0       0       0
   990 ;;Total ram usage:        1 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 1
   993 ;; This function calls:
   994 ;;		_LCD_Command
   995 ;; This function is called by:
   996 ;;		_main
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text4
  1001   000994                     __ptext4:
  1002                           	callstack 0
  1003   000994                     _LCD_Init:
  1004                           	callstack 29
  1005   000994                     
  1006                           ;LCD.c: 30:     TRISD = 0;
  1007   000994  6A95               	clrf	149,c	;volatile
  1008   000996                     
  1009                           ;LCD.c: 31:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1010   000996  0E27               	movlw	39
  1011   000998  6E03               	movwf	??_LCD_Init^0,c
  1012   00099A  0EF5               	movlw	245
  1013   00099C                     u97:
  1014   00099C  2EE8               	decfsz	wreg,f,c
  1015   00099E  D7FE               	bra	u97
  1016   0009A0  2E03               	decfsz	??_LCD_Init^0,f,c
  1017   0009A2  D7FC               	bra	u97
  1018   0009A4  0000               	nop	
  1019   0009A6                     
  1020                           ;LCD.c: 32:     LCD_Command(0x02);
  1021   0009A6  0E02               	movlw	2
  1022   0009A8  EC67  F004         	call	_LCD_Command
  1023   0009AC                     
  1024                           ;LCD.c: 34:     LCD_Command(0x28);
  1025   0009AC  0E28               	movlw	40
  1026   0009AE  EC67  F004         	call	_LCD_Command
  1027   0009B2                     
  1028                           ;LCD.c: 36:  LCD_Command(0x01);
  1029   0009B2  0E01               	movlw	1
  1030   0009B4  EC67  F004         	call	_LCD_Command
  1031   0009B8                     
  1032                           ;LCD.c: 37:     LCD_Command(0x0c);
  1033   0009B8  0E0C               	movlw	12
  1034   0009BA  EC67  F004         	call	_LCD_Command
  1035   0009BE                     
  1036                           ;LCD.c: 38:  LCD_Command(0x06);
  1037   0009BE  0E06               	movlw	6
  1038   0009C0  EC67  F004         	call	_LCD_Command
  1039   0009C4  0012               	return		;funcret
  1040   0009C6                     __end_of_LCD_Init:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function _LCD_Clear *****************
  1044 ;; Defined at:
  1045 ;;		line 101 in file "LCD.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 1
  1066 ;; This function calls:
  1067 ;;		_LCD_Command
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text5
  1074   0009F2                     __ptext5:
  1075                           	callstack 0
  1076   0009F2                     _LCD_Clear:
  1077                           	callstack 29
  1078   0009F2                     
  1079                           ;LCD.c: 103:     LCD_Command(0x01);
  1080   0009F2  0E01               	movlw	1
  1081   0009F4  EC67  F004         	call	_LCD_Command
  1082   0009F8  0012               	return		;funcret
  1083   0009FA                     __end_of_LCD_Clear:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _LCD_Command *****************
  1087 ;; Defined at:
  1088 ;;		line 41 in file "LCD.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  cmd             1    wreg     unsigned char 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  cmd             1    1[COMRAM] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0
  1103 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1104 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1105 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1106 ;;Total ram usage:        2 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;;		_LCD_Init
  1113 ;;		_LCD_String_xy
  1114 ;;		_LCD_Clear
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text6
  1119   0008CE                     __ptext6:
  1120                           	callstack 0
  1121   0008CE                     _LCD_Command:
  1122                           	callstack 29
  1123                           
  1124                           ;incstack = 0
  1125                           ;LCD_Command@cmd stored from wreg
  1126   0008CE  6E02               	movwf	LCD_Command@cmd^0,c
  1127   0008D0                     
  1128                           ;LCD.c: 41: void LCD_Command(unsigned char cmd );LCD.c: 42: {;LCD.c: 43:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  1129   0008D0  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  1130   0008D4  0EF0               	movlw	240
  1131   0008D6  1601               	andwf	??_LCD_Command^0,f,c
  1132   0008D8  508C               	movf	140,w,c	;volatile
  1133   0008DA  0B0F               	andlw	15
  1134   0008DC  1001               	iorwf	??_LCD_Command^0,w,c
  1135   0008DE  6E8C               	movwf	140,c	;volatile
  1136   0008E0                     
  1137                           ;LCD.c: 44:  LATD0 = 0;
  1138   0008E0  908C               	bcf	3980,0,c	;volatile
  1139   0008E2                     
  1140                           ;LCD.c: 45:  LATD1 = 1;
  1141   0008E2  828C               	bsf	3980,1,c	;volatile
  1142   0008E4                     
  1143                           ;LCD.c: 46:  __nop();
  1144   0008E4  0000               	nop	
  1145   0008E6                     
  1146                           ;LCD.c: 47:  LATD1 = 0;
  1147   0008E6  928C               	bcf	3980,1,c	;volatile
  1148   0008E8                     
  1149                           ;LCD.c: 48:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1150   0008E8  0E03               	movlw	3
  1151   0008EA  6E01               	movwf	??_LCD_Command^0,c
  1152   0008EC  0E98               	movlw	152
  1153   0008EE                     u107:
  1154   0008EE  2EE8               	decfsz	wreg,f,c
  1155   0008F0  D7FE               	bra	u107
  1156   0008F2  2E01               	decfsz	??_LCD_Command^0,f,c
  1157   0008F4  D7FC               	bra	u107
  1158   0008F6                     
  1159                           ;LCD.c: 49:     LATD = (LATD & 0x0f) | (cmd<<4);
  1160   0008F6  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  1161   0008FA  3A01               	swapf	??_LCD_Command^0,f,c
  1162   0008FC  0EF0               	movlw	240
  1163   0008FE  1601               	andwf	??_LCD_Command^0,f,c
  1164   000900  508C               	movf	140,w,c	;volatile
  1165   000902  0B0F               	andlw	15
  1166   000904  1001               	iorwf	??_LCD_Command^0,w,c
  1167   000906  6E8C               	movwf	140,c	;volatile
  1168   000908                     
  1169                           ;LCD.c: 50:  LATD1 = 1;
  1170   000908  828C               	bsf	3980,1,c	;volatile
  1171   00090A                     
  1172                           ;LCD.c: 51:  __nop();
  1173   00090A  0000               	nop	
  1174   00090C                     
  1175                           ;LCD.c: 52:  LATD1 = 0;
  1176   00090C  928C               	bcf	3980,1,c	;volatile
  1177                           
  1178                           ;LCD.c: 53:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1179   00090E  0E08               	movlw	8
  1180   000910  6E01               	movwf	??_LCD_Command^0,c
  1181   000912  0ECA               	movlw	202
  1182   000914                     u117:
  1183   000914  2EE8               	decfsz	wreg,f,c
  1184   000916  D7FE               	bra	u117
  1185   000918  2E01               	decfsz	??_LCD_Command^0,f,c
  1186   00091A  D7FC               	bra	u117
  1187   00091C  0012               	return		;funcret
  1188   00091E                     __end_of_LCD_Command:
  1189                           	callstack 0
  1190                           
  1191                           	psect	rparam
  1192   000001                     ___rparam_used  equ	1
  1193   000000                     ___param_bank   equ	0
  1194   000000                     __Lparam        equ	__Lrparam
  1195   000000                     __Hparam        equ	__Hrparam
  1196                           
  1197                           	psect	idloc
  1198                           
  1199                           ;Config register IDLOC0 @ 0x200000
  1200                           ;	unspecified, using default values
  1201   200000                     	org	2097152
  1202   200000  FF                 	db	255
  1203                           
  1204                           ;Config register IDLOC1 @ 0x200001
  1205                           ;	unspecified, using default values
  1206   200001                     	org	2097153
  1207   200001  FF                 	db	255
  1208                           
  1209                           ;Config register IDLOC2 @ 0x200002
  1210                           ;	unspecified, using default values
  1211   200002                     	org	2097154
  1212   200002  FF                 	db	255
  1213                           
  1214                           ;Config register IDLOC3 @ 0x200003
  1215                           ;	unspecified, using default values
  1216   200003                     	org	2097155
  1217   200003  FF                 	db	255
  1218                           
  1219                           ;Config register IDLOC4 @ 0x200004
  1220                           ;	unspecified, using default values
  1221   200004                     	org	2097156
  1222   200004  FF                 	db	255
  1223                           
  1224                           ;Config register IDLOC5 @ 0x200005
  1225                           ;	unspecified, using default values
  1226   200005                     	org	2097157
  1227   200005  FF                 	db	255
  1228                           
  1229                           ;Config register IDLOC6 @ 0x200006
  1230                           ;	unspecified, using default values
  1231   200006                     	org	2097158
  1232   200006  FF                 	db	255
  1233                           
  1234                           ;Config register IDLOC7 @ 0x200007
  1235                           ;	unspecified, using default values
  1236   200007                     	org	2097159
  1237   200007  FF                 	db	255
  1238                           
  1239                           	psect	config
  1240                           
  1241                           ;Config register CONFIG1L @ 0x300000
  1242                           ;	PLL Prescaler Selection bits
  1243                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1244                           ;	System Clock Postscaler Selection bits
  1245                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1246                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1247                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1248   300000                     	org	3145728
  1249   300000  00                 	db	0
  1250                           
  1251                           ;Config register CONFIG1H @ 0x300001
  1252                           ;	Oscillator Selection bits
  1253                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1254                           ;	Fail-Safe Clock Monitor Enable bit
  1255                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1256                           ;	Internal/External Oscillator Switchover bit
  1257                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1258   300001                     	org	3145729
  1259   300001  09                 	db	9
  1260                           
  1261                           ;Config register CONFIG2L @ 0x300002
  1262                           ;	Power-up Timer Enable bit
  1263                           ;	PWRT = OFF, PWRT disabled
  1264                           ;	Brown-out Reset Enable bits
  1265                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1266                           ;	Brown-out Reset Voltage bits
  1267                           ;	BORV = 3, Minimum setting 2.05V
  1268                           ;	USB Voltage Regulator Enable bit
  1269                           ;	VREGEN = OFF, USB voltage regulator disabled
  1270   300002                     	org	3145730
  1271   300002  1F                 	db	31
  1272                           
  1273                           ;Config register CONFIG2H @ 0x300003
  1274                           ;	Watchdog Timer Enable bit
  1275                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1276                           ;	Watchdog Timer Postscale Select bits
  1277                           ;	WDTPS = 32768, 1:32768
  1278   300003                     	org	3145731
  1279   300003  1E                 	db	30
  1280                           
  1281                           ; Padding undefined space
  1282   300004                     	org	3145732
  1283   300004  FF                 	db	255
  1284                           
  1285                           ;Config register CONFIG3H @ 0x300005
  1286                           ;	CCP2 MUX bit
  1287                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1288                           ;	PORTB A/D Enable bit
  1289                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1290                           ;	Low-Power Timer 1 Oscillator Enable bit
  1291                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1292                           ;	MCLR Pin Enable bit
  1293                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  1294   300005                     	org	3145733
  1295   300005  01                 	db	1
  1296                           
  1297                           ;Config register CONFIG4L @ 0x300006
  1298                           ;	Stack Full/Underflow Reset Enable bit
  1299                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1300                           ;	Single-Supply ICSP Enable bit
  1301                           ;	LVP = OFF, Single-Supply ICSP disabled
  1302                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1303                           ;	ICPRT = OFF, ICPORT disabled
  1304                           ;	Extended Instruction Set Enable bit
  1305                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1306                           ;	Background Debugger Enable bit
  1307                           ;	DEBUG = 0x1, unprogrammed default
  1308   300006                     	org	3145734
  1309   300006  81                 	db	129
  1310                           
  1311                           ; Padding undefined space
  1312   300007                     	org	3145735
  1313   300007  FF                 	db	255
  1314                           
  1315                           ;Config register CONFIG5L @ 0x300008
  1316                           ;	Code Protection bit
  1317                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1318                           ;	Code Protection bit
  1319                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1320                           ;	Code Protection bit
  1321                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1322                           ;	Code Protection bit
  1323                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1324   300008                     	org	3145736
  1325   300008  0F                 	db	15
  1326                           
  1327                           ;Config register CONFIG5H @ 0x300009
  1328                           ;	Boot Block Code Protection bit
  1329                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1330                           ;	Data EEPROM Code Protection bit
  1331                           ;	CPD = OFF, Data EEPROM is not code-protected
  1332   300009                     	org	3145737
  1333   300009  C0                 	db	192
  1334                           
  1335                           ;Config register CONFIG6L @ 0x30000A
  1336                           ;	Write Protection bit
  1337                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1338                           ;	Write Protection bit
  1339                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1340                           ;	Write Protection bit
  1341                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1342                           ;	Write Protection bit
  1343                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1344   30000A                     	org	3145738
  1345   30000A  0F                 	db	15
  1346                           
  1347                           ;Config register CONFIG6H @ 0x30000B
  1348                           ;	Configuration Register Write Protection bit
  1349                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1350                           ;	Boot Block Write Protection bit
  1351                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1352                           ;	Data EEPROM Write Protection bit
  1353                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1354   30000B                     	org	3145739
  1355   30000B  E0                 	db	224
  1356                           
  1357                           ;Config register CONFIG7L @ 0x30000C
  1358                           ;	Table Read Protection bit
  1359                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1360                           ;	Table Read Protection bit
  1361                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1362                           ;	Table Read Protection bit
  1363                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1364                           ;	Table Read Protection bit
  1365                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1366   30000C                     	org	3145740
  1367   30000C  0F                 	db	15
  1368                           
  1369                           ;Config register CONFIG7H @ 0x30000D
  1370                           ;	Boot Block Table Read Protection bit
  1371                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1372   30000D                     	org	3145741
  1373   30000D  40                 	db	64
  1374                           tosu	equ	0xFFF
  1375                           tosh	equ	0xFFE
  1376                           tosl	equ	0xFFD
  1377                           stkptr	equ	0xFFC
  1378                           pclatu	equ	0xFFB
  1379                           pclath	equ	0xFFA
  1380                           pcl	equ	0xFF9
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           prodh	equ	0xFF4
  1386                           prodl	equ	0xFF3
  1387                           indf0	equ	0xFEF
  1388                           postinc0	equ	0xFEE
  1389                           postdec0	equ	0xFED
  1390                           preinc0	equ	0xFEC
  1391                           plusw0	equ	0xFEB
  1392                           fsr0h	equ	0xFEA
  1393                           fsr0l	equ	0xFE9
  1394                           wreg	equ	0xFE8
  1395                           indf1	equ	0xFE7
  1396                           postinc1	equ	0xFE6
  1397                           postdec1	equ	0xFE5
  1398                           preinc1	equ	0xFE4
  1399                           plusw1	equ	0xFE3
  1400                           fsr1h	equ	0xFE2
  1401                           fsr1l	equ	0xFE1
  1402                           bsr	equ	0xFE0
  1403                           indf2	equ	0xFDF
  1404                           postinc2	equ	0xFDE
  1405                           postdec2	equ	0xFDD
  1406                           preinc2	equ	0xFDC
  1407                           plusw2	equ	0xFDB
  1408                           fsr2h	equ	0xFDA
  1409                           fsr2l	equ	0xFD9
  1410                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        5
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[8]), STR_2(CODE[13]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[8]), STR_2(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     342
                                              7 COMRAM     2     2      0
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2     252
                                              3 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1      76
                                              2 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      30
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRlh        100      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      9      20     21.1%
BITBIGSFRll         44      0       0      0.0%
BITBIGSFRh          14      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      20      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Mar 28 15:56:59 2025

           ?_LCD_Command 0001                       l51 08CC                       l45 09C4  
                     l62 0958                       l48 091C                       l65 09F8  
                     l57 09F0                       u30 09F0                       u31 09EC  
                     u40 0930                       u41 092C                       u57 084E  
                     u67 086A                       u77 089E                       u87 08C4  
                     u97 099C              ?_LCD_String 0003                      l801 09BE  
                    l741 0880                      l751 0898                      l743 0890  
                    l761 08D0                      l817 09F2                      l753 08A6  
                    l745 0892                      l841 09D6                      l771 08E8  
                    l763 08E0                      l755 08B8                      l747 0894  
                    l843 09D8                      l851 0938                      l773 08F6  
                    l765 08E2                      l757 08BA                      l749 0896  
                    l837 09C6                      l853 0942                      l845 0920  
                    l861 081C                      l775 0908                      l767 08E4  
                    l791 0996                      l759 08BC                      l839 09CA  
                    l855 094A                      l847 0920                      l871 0844  
                    l863 081E                      l777 090A                      l769 08E6  
                    l793 09A6                      l857 0950                      l849 0930  
                    l873 085C                      l865 0822                      l779 090C  
                    l795 09AC                      l875 0860                      l867 0830  
                    l859 0818                      l797 09B2                      l789 0994  
                    l869 0836                      l799 09B8                      u107 08EE  
                    u117 0914                      _idx 000F                      wreg 0FE8  
            LCD_Char@dat 0002                     STR_1 080E                     STR_2 0801  
                   _LATD 0F8C                     _RBPU 7F8F                     _main 0818  
                   fsr1l 0FE1                     start 7FFC            _LCD_String_xy 091E  
           ___param_bank 0000         __end_of_LCD_Char 08CE         __end_of_LCD_Init 09C6  
                  ?_main 0001                    _LATD0 7C60                    _LATD1 7C61  
                  _TRISD 0F95                    tablat 0FF5                    status 0FD8  
         ?_LCD_String_xy 0004          __initialization 095A             __end_of_main 087E  
                 ??_main 0008        __end_of_LCD_Clear 09FA            __activetblptr 0001  
       LCD_String_xy@msg 0005         LCD_String_xy@pos 0004         LCD_String_xy@row 0006  
                 _OSCCON 0FD3                   isa$std 0001             __pdataCOMRAM 0010  
           __mediumconst 0800                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8                ?_LCD_Char 0001               __accesstop 0060  
__end_of__initialization 0986                ?_LCD_Init 0001          ??_LCD_String_xy 0006  
          ___rparam_used 0001           __pcstackCOMRAM 0001             ??_LCD_String 0004  
             ??_LCD_Char 0001               ??_LCD_Init 0003       __end_of_LCD_String 09F2  
          LCD_String@msg 0003                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 095A                  __ramtop 0800  
                __ptext0 0818                  __ptext1 091E                  __ptext2 09C6  
                __ptext3 087E                  __ptext4 0994                  __ptext5 09F2  
                __ptext6 08CE                _LCD_Clear 09F2     end_of_initialization 0986  
         LCD_Command@cmd 0002                  postdec1 0FE5                  postinc0 0FEE  
             ?_LCD_Clear 0001            ??_LCD_Command 0001            __pidataCOMRAM 09FA  
    start_initialization 095A    __end_of_LCD_String_xy 095A      __end_of_LCD_Command 091E  
            __pbssCOMRAM 000A              ??_LCD_Clear 0003              __smallconst 0800  
  LCD_String_xy@location 0007                 _LCD_Char 087E                 _LCD_Init 0994  
              _pass_user 000A              _LCD_Command 08CE                copy_data0 096E  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
               _password 0010                 isa$xinst 0000               _LCD_String 09C6  
